{"version":3,"sources":["webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./src/SmartComponents/ErrorAlert/redux/actions.js","webpack:///./src/SmartComponents/AddSystemModal/AddSystemModal.js","webpack:///./src/SmartComponents/DriftPage/AddSystemButton/AddSystemButton.js","webpack:///./src/SmartComponents/StateIcon/StateIcon.js","webpack:///./src/Utilities/SetHistory.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/redux/actions.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/HistoricalProfilesCheckbox/HistoricalProfilesCheckbox.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/FetchHistoricalProfilesButton/FetchHistoricalProfilesButton.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/HistoricalProfilesDropdown.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/DriftTable.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/FilterDropDown.js","webpack:///./src/SmartComponents/DriftPage/SearchBar/SearchBar.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/ActionKebab.js","webpack:///./src/SmartComponents/ErrorAlert/ErrorAlert.js","webpack:///./src/SmartComponents/DriftPage/Pagination/Pagination.js","webpack:///./src/SmartComponents/DriftPage/ExportCSVButton/ExportCSVButton.js","webpack:///./src/SmartComponents/DriftPage/DriftFilterChips/DriftFilterChips.js","webpack:///./src/SmartComponents/DriftPage/DriftPage.js"],"names":["strictUriEncode","objectAssign","encode","value","opts","strict","encodeURIComponent","exports","extract","str","split","parse","formatter","result","arrayFormat","key","accumulator","exec","replace","undefined","concat","parserForArrayFormat","ret","Object","create","trim","forEach","param","parts","shift","val","length","join","decodeURIComponent","keys","sort","reduce","Boolean","Array","isArray","keysSorter","input","a","b","Number","map","stringify","obj","index","encoderForArrayFormat","slice","val2","push","filter","x","module","c","charCodeAt","toString","toUpperCase","toggleErrorAlert","type","types","OPEN_ERROR_ALERT","AddSystemModal","props","confirmModal","bind","cancelSelection","changeActiveTab","window","insights","chrome","auth","getUser","this","entities","selectedBaselineIds","toggleModal","selectedHSPIds","selectedSystemIds","ids","systems","system","id","baselines","baseline","event","tabIndex","selectActiveTab","activeTab","addSystemModalOpened","Fragment","Modal","title","isOpen","onClose","width","isFooterLeftAligned","actions","Button","variant","onClick","Tabs","activeKey","onSelect","Tab","eventKey","SystemsTable","BaselinesTable","hasSelect","Component","propTypes","cookies","instanceOf","Cookies","isRequired","showModal","PropTypes","bool","number","func","object","array","withCookies","connect","state","addSystemModalState","compareState","baselinesTableState","historicProfilesState","dispatch","addSystemModalActions","toggleAddSystemModal","newActiveTab","AddSystemButton","className","isTable","StateIcon","factState","color","height","icon","string","setHistory","history","systemIds","baselineIds","hspIds","search","queryString","system_ids","baseline_ids","hsp_ids","selectHistoricProfile","historicProfileId","SELECT_HISTORIC_PROFILE","payload","HistoricalProfilesCheckbox","handleChange","checked","profile","setState","some","Checkbox","label","moment","utc","created","format","isChecked","onChange","aria-label","name","historicProfileIds","historicProfilesActions","FetchHistoricalProfilesButton","fetchHistoricalComparison","fetchCompare","style","float","location","withRouter","HistoricalProfilesDropdown","createDropdownArray","historicalData","dropdownItems","profiles","DropdownItem","renderLoadingRows","onToggle","fetchData","systemId","api","fetchHistoricalData","rows","i","size","SkeletonSize","sm","Dropdown","toggle","DropdownToggle","iconComponent","isPlain","DriftTable","removeSystem","systemBaseline","clearState","setSelectedBaselines","stateFilters","addStateFilter","newSystemIds","systemProfile","display_name","HSPIds","item","stateFilter","selected","setSystemIds","setBaselineIds","setHSPIds","formatDate","dateString","facts","rowData","renderRowData","md","fact","systemsBaselinesList","row","find","baselineSystemCount","comparisons","expandedRows","includes","renderExpandableRowButton","renderRowChild","findSystem","data","system_profile_exists","Tooltip","position","content","last_updated","updated","isBeta","systemsList","baselinesList","fullHistoricalSystemList","modifiedSystems","modifiedBaselines","modifiedHSPs","hsp","addSystems","sortType","ASC","toggleSort","DESC","toggleFactSort","toggleStateSort","stateSort","renderSortButton","factSort","renderSystems","factName","expandRow","EmptyState","EmptyStateIcon","PlusCircleIcon","Title","EmptyStateBody","compareData","loading","renderHeaderRow","renderRows","fullCompareData","filteredCompareData","renderTable","renderEmptyState","factFilter","expandRows","compareActions","baselinesTableActions","toggleFilterDropDown","OPEN_FILTER_DROPDOWN","FilterDropDown","createDropdownItem","toggleDropDown","display","dropdownItem","selectedViewsArray","selectedViews","createSelectedViewsString","filterDropdownOpened","filterDropdownActions","SearchBar","updateFactFilter","setFactFilter","changeFactFilter","prevProps","TextInput","placeholder","filterByFact","toggleKebab","TOGGLE_KEBAB","ActionKebab","removeSystemsSelect","removeSystems","clearSelectedBaselines","component","KebabToggle","kebabOpened","actionKebabActions","ErrorAlert","revertCompareData","previousStateSystems","errorAlertOpened","Alert","action","AlertActionCloseButton","error","status","detail","errorAlertActions","perPageOptions","TablePagination","onSetPage","onPerPageSelect","page","pagination","perPage","updatePagination","totalFacts","Pagination","itemCount","dropDirection","DropdownDirection","down","ExportCSVButton","exportToCSV","DriftFilterChips","setStateChips","stateChips","removeChip","chip","chipGroup","category","chips","newFactFilter","newChipGroup","filteredChips","chipKeyCount","ChipGroup","withToolbar","currentGroup","ChipGroupToolbarItem","categoryName","Chip","DriftPage","Card","CardBody","Toolbar","ToolbarGroup","ToolbarItem"],"mappings":"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","file":"js/4-3af56f80aff49cdfda20.js","sourcesContent":["'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tformatter(decodeURIComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n};\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n","'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n","import types from './types';\n\nfunction toggleErrorAlert() {\n    return {\n        type: types.OPEN_ERROR_ALERT\n    };\n}\n\nexport default {\n    toggleErrorAlert\n};\n","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Tab, Tabs } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withCookies, Cookies } from 'react-cookie';\n\nimport SystemsTable from '../SystemsTable/SystemsTable';\nimport BaselinesTable from '../BaselinesTable/BaselinesTable';\nimport { addSystemModalActions } from './redux';\n\nclass AddSystemModal extends Component {\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n        this.cancelSelection = this.cancelSelection.bind(this);\n        this.changeActiveTab = this.changeActiveTab.bind(this);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    confirmModal() {\n        const { confirmModal, entities, selectedBaselineIds, toggleModal, selectedHSPIds } = this.props;\n\n        confirmModal(entities.selectedSystemIds, selectedBaselineIds, selectedHSPIds);\n        toggleModal();\n    }\n\n    cancelSelection() {\n        this.props.toggleModal();\n    }\n\n    selectedSystemIds() {\n        let ids = this.props.systems.map(function (system) {\n            return system.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    selectedBaselineIds() {\n        let ids = this.props.baselines.map(function (baseline) {\n            return baseline.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    changeActiveTab(event, tabIndex) {\n        const { selectActiveTab } = this.props;\n\n        selectActiveTab(tabIndex);\n    }\n\n    render() {\n        const { activeTab, addSystemModalOpened } = this.props;\n\n        return (\n            <React.Fragment>\n                <Modal\n                    title=\"Choose systems\"\n                    isOpen={ addSystemModalOpened }\n                    onClose={ this.cancelSelection }\n                    width=\"auto\"\n                    isFooterLeftAligned\n                    actions={ [\n                        <Button\n                            key=\"confirm\"\n                            variant=\"primary\"\n                            onClick={ this.confirmModal }>\n                            Submit\n                        </Button>\n                    ] }\n                >\n                    <Tabs\n                        activeKey={ activeTab }\n                        onSelect={ this.changeActiveTab }\n                    >\n                        <Tab\n                            eventKey={ 0 }\n                            title=\"Systems\"\n                        >\n                            <SystemsTable selectedSystemIds={ this.selectedSystemIds() }/>\n                        </Tab>\n                        <Tab\n                            eventKey={ 1 }\n                            title=\"Baselines\"\n                        >\n                            <BaselinesTable hasSelect={ true }/>\n                        </Tab>\n                    </Tabs>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nAddSystemModal.propTypes = {\n    showModal: PropTypes.bool,\n    addSystemModalOpened: PropTypes.bool,\n    activeTab: PropTypes.number,\n    confirmModal: PropTypes.func,\n    cancelSelection: PropTypes.func,\n    toggleModal: PropTypes.func,\n    selectActiveTab: PropTypes.func,\n    entities: PropTypes.object,\n    systems: PropTypes.array,\n    selectedBaselineIds: PropTypes.array,\n    baselines: PropTypes.array,\n    selectedHSPIds: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        systems: state.compareState.systems,\n        activeTab: state.addSystemModalState.activeTab,\n        entities: state.entities,\n        selectedBaselineIds: state.baselinesTableState.selectedBaselineIds,\n        baselines: state.compareState.baselines,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(addSystemModalActions.toggleAddSystemModal()),\n        selectActiveTab: (newActiveTab) => dispatch(addSystemModalActions.selectActiveTab(newActiveTab))\n    };\n}\n\nexport default withCookies(connect(mapStateToProps, mapDispatchToProps)(AddSystemModal));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\n\nimport { addSystemModalActions } from '../../AddSystemModal/redux';\n\nclass AddSystemButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Button\n                className=\"add-system-button\"\n                variant='primary'\n                onClick={ this.props.toggleAddSystemModal }>\n                { this.props.isTable ? 'Add' : 'Add systems or baselines' }\n            </Button>\n        );\n    }\n}\n\nAddSystemButton.propTypes = {\n    toggleAddSystemModal: PropTypes.func,\n    isTable: PropTypes.bool\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleAddSystemModal: (() => dispatch(addSystemModalActions.toggleAddSystemModal()))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddSystemButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckCircleIcon, QuestionCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\n\nclass StateIcon extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    icon() {\n        let iconClass = '';\n\n        if (this.props.factState === 'SAME') {\n            iconClass = <CheckCircleIcon color='green' height='20px' width='20px'/>;\n        } else if (this.props.factState === 'DIFFERENT') {\n            iconClass = <ExclamationCircleIcon color='red' height='20px' width='20px'/>;\n        } else {\n            iconClass = <QuestionCircleIcon height='20px' width='20px'/>;\n        }\n\n        return iconClass;\n    };\n\n    render() {\n        return (\n            this.icon()\n        );\n    }\n}\n\nStateIcon.propTypes = {\n    factState: PropTypes.string\n};\n\nexport default StateIcon;\n","import queryString from 'query-string';\n\nexport function setHistory(history, systemIds = [], baselineIds = [], hspIds = []) {\n    /*eslint-disable camelcase*/\n    history.push({\n        search: '?' + queryString.stringify({ system_ids: systemIds, baseline_ids: baselineIds, hsp_ids: hspIds })\n    });\n    /*eslint-enable camelcase*/\n}\n","import types from './types';\n\nfunction selectHistoricProfile(historicProfileId) {\n    return {\n        type: types.SELECT_HISTORIC_PROFILE,\n        payload: historicProfileId\n    };\n}\n\nexport default {\n    selectHistoricProfile\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { historicProfilesActions } from '../redux';\n\nclass HistoricalProfilesCheckbox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: this.props.selectedHSPIds.some(id => id === this.props.profile.id)\n        };\n    }\n\n    handleChange = () => {\n        const { checked } = this.state;\n        const { selectHistoricProfile, profile } = this.props;\n\n        this.setState({\n            checked: !checked\n        });\n\n        selectHistoricProfile([ profile.id ]);\n    }\n\n    render() {\n        const { profile } = this.props;\n        const { checked } = this.state;\n\n        return (\n            <React.Fragment>\n                <Checkbox\n                    label={ moment.utc(profile.created).format('DD MMM YYYY, HH:mm UTC') }\n                    isChecked={ checked }\n                    onChange={ this.handleChange }\n                    aria-label={ profile.id }\n                    id={ profile.id }\n                    name={ profile.id }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nHistoricalProfilesCheckbox.propTypes = {\n    profile: PropTypes.object,\n    selectHistoricProfile: PropTypes.func,\n    selectedHSPIds: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        selectHistoricProfile: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfile(historicProfileIds))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(HistoricalProfilesCheckbox));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\n\nclass FetchHistoricalProfilesButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    fetchHistoricalComparison = () => {\n        const { baselines, systems, selectedHSPIds } = this.props;\n        let baselineIds = baselines.map(baseline => baseline.id);\n        let systemIds = systems.map(system => system.id);\n\n        this.props.fetchCompare(systemIds, baselineIds, selectedHSPIds);\n    }\n\n    render() {\n        return (\n            <Button\n                style={ { float: 'left' } }\n                variant='primary'\n                onClick={ this.fetchHistoricalComparison }>\n                Compare\n            </Button>\n        );\n    }\n}\n\nFetchHistoricalProfilesButton.propTypes = {\n    fetchHistoricalComparison: PropTypes.func,\n    baselines: PropTypes.array,\n    systems: PropTypes.array,\n    selectedHSPIds: PropTypes.array,\n    fetchCompare: PropTypes.func,\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselines: state.compareState.baselines,\n        systems: state.compareState.systems,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, null)(FetchHistoricalProfilesButton));\n","import React, { Component } from 'react';\nimport { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { UndoIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nimport HistoricalProfilesCheckbox from './HistoricalProfilesCheckbox/HistoricalProfilesCheckbox';\nimport api from '../../api';\nimport FetchHistoricalProfilesButton from './FetchHistoricalProfilesButton/FetchHistoricalProfilesButton';\n\nclass HistoricalProfilesDropdown extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOpen: false,\n            historicalData: this.renderLoadingRows()\n        };\n\n        this.onToggle = () => {\n            const { isOpen } = this.state;\n\n            if (isOpen === false) {\n                this.fetchData(this.props.systemId);\n            }\n\n            this.setState({\n                isOpen: !isOpen\n            });\n        };\n    }\n\n    async fetchData(systemId) {\n        let historicalData = await api.fetchHistoricalData(systemId);\n\n        this.setState({\n            historicalData: this.createDropdownArray(historicalData)\n        });\n    }\n\n    createDropdownArray = (historicalData) => {\n        const { fetchCompare } = this.props;\n\n        let dropdownItems = [];\n\n        historicalData.profiles.forEach(function(profile) {\n            dropdownItems.push(\n                <DropdownItem>\n                    <HistoricalProfilesCheckbox profile={ profile } />\n                </DropdownItem>\n            );\n        });\n\n        dropdownItems.push(<FetchHistoricalProfilesButton fetchCompare={ fetchCompare }/>);\n\n        return dropdownItems;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rows.push(\n                <Skeleton className='pit-dropdown-loading pit-button' size={ SkeletonSize.sm } />\n            );\n            rows.push(<br></br>);\n        }\n\n        return rows;\n    }\n\n    render() {\n        const { isOpen, historicalData } = this.state;\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    toggle={ <DropdownToggle\n                        className='historical-system-profile-dropdown'\n                        iconComponent={ null }\n                        onToggle={ this.onToggle }>\n                        <UndoIcon />\n                    </DropdownToggle> }\n                    isOpen={ isOpen }\n                    isPlain\n                    dropdownItems={ historicalData }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nHistoricalProfilesDropdown.propTypes = {\n    fetchHistoricalData: PropTypes.func,\n    systemId: PropTypes.string,\n    fetchCompare: PropTypes.func\n};\n\nexport default HistoricalProfilesDropdown;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, Title, Tooltip } from '@patternfly/react-core';\nimport queryString from 'query-string';\nimport { AngleDownIcon, AngleRightIcon, LongArrowAltUpIcon, LongArrowAltDownIcon, ArrowsAltVIcon,\n    TimesIcon, ExclamationTriangleIcon, PlusCircleIcon, ServerIcon, BlueprintIcon } from '@patternfly/react-icons';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport moment from 'moment';\n\nimport AddSystemModal from '../../AddSystemModal/AddSystemModal';\nimport AddSystemButton from '../AddSystemButton/AddSystemButton';\nimport StateIcon from '../../StateIcon/StateIcon';\nimport { ASC, DESC } from '../../../constants';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport HistoricalProfilesDropdown from '../../HistoricalProfilesDropdown/HistoricalProfilesDropdown';\nimport { compareActions } from '../../modules';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { historicProfilesActions } from '../../HistoricalProfilesDropdown/redux';\n\nclass DriftTable extends Component {\n    constructor(props) {\n        super(props);\n        this.setSystemIds();\n        this.setBaselineIds();\n        this.setHSPIds();\n        this.fetchCompare = this.fetchCompare.bind(this);\n        this.removeSystem = this.removeSystem.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n        const { fetchCompare } = this.props;\n\n        fetchCompare(this.systemIds, this.baselineIds, this.HSPIds);\n    }\n\n    setSystemIds() {\n        this.systemIds = queryString.parse(this.props.location.search).system_ids;\n        this.systemIds = Array.isArray(this.systemIds) ? this.systemIds : [ this.systemIds ];\n        this.systemIds = this.systemIds.filter(item => item !== undefined);\n    }\n\n    setBaselineIds() {\n        this.baselineIds = queryString.parse(this.props.location.search).baseline_ids;\n        this.baselineIds = Array.isArray(this.baselineIds) ? this.baselineIds : [ this.baselineIds ];\n        this.baselineIds = this.baselineIds.filter(item => item !== undefined);\n    }\n\n    setHSPIds() {\n        const { selectHistoricProfile } = this.props;\n\n        this.HSPIds = queryString.parse(this.props.location.search).hsp_ids;\n        this.HSPIds = Array.isArray(this.HSPIds) ? this.HSPIds : [ this.HSPIds ];\n        this.HSPIds = this.HSPIds.filter(item => item !== undefined);\n        selectHistoricProfile(this.HSPIds);\n    }\n\n    formatDate(dateString) {\n        return moment.utc(dateString).format('DD MMM YYYY, HH:mm UTC');\n    }\n\n    removeSystem = (systemBaseline) => {\n        const { history, clearState, setSelectedBaselines, stateFilters, addStateFilter, hspIds, selectHistoricProfile } = this.props;\n        const newSystemIds = [];\n\n        this.systemIds.forEach((system) => {\n            if (system === systemBaseline.id) {\n                hspIds.forEach((systemProfile) => {\n                    if (systemProfile.display_name === systemBaseline.display_name) {\n                        this.HSPIds = this.HSPIds.filter(item => item !== systemProfile.id);\n                    }\n                });\n            } else {\n                newSystemIds.push(system);\n            }\n        });\n\n        this.systemIds = newSystemIds;\n        this.baselineIds = this.baselineIds.filter(item => item !== systemBaseline.id);\n        this.HSPIds = this.HSPIds.filter(item => item !== systemBaseline.id);\n\n        if ((this.systemIds.length + this.baselineIds.length + this.HSPIds.length) === 1) {\n            stateFilters.forEach((stateFilter) => {\n                if (stateFilter.selected === false) {\n                    addStateFilter(stateFilter);\n                }\n            });\n        }\n\n        if (this.systemIds.length > 0 || this.baselineIds.length > 0 || this.HSPIds.length > 0) {\n            this.fetchCompare(this.systemIds, this.baselineIds, this.HSPIds);\n        } else {\n            setHistory(history, []);\n            clearState();\n        }\n\n        selectHistoricProfile([ systemBaseline.id ]);\n        setSelectedBaselines(this.baselineIds);\n    }\n\n    fetchCompare(systemIds, baselineIds, HSPIds) {\n        this.systemIds = systemIds;\n        this.baselineIds = baselineIds;\n        this.HSPIds = HSPIds;\n\n        if (systemIds.length > 0 || baselineIds.length > 0 || HSPIds.length > 0) {\n            setHistory(this.props.history, systemIds, baselineIds, HSPIds);\n            this.props.fetchCompare(systemIds, baselineIds, HSPIds);\n        }\n    }\n\n    renderRows(facts, systems, baselines, hspIds) {\n        let rows = [];\n        let rowData = [];\n\n        if (facts !== undefined) {\n            for (let i = 0; i < facts.length; i += 1) {\n                rowData = this.renderRowData(facts[i], systems, baselines, hspIds);\n                rows.push(rowData);\n            }\n        }\n\n        return rows;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n        let rowData = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rowData.push(<td><Skeleton size={ SkeletonSize.md } /></td>);\n        }\n\n        for (let i = 0; i < 10; i += 1) {\n            rows.push(<tr>{ rowData }</tr>);\n        }\n\n        return rows;\n    }\n\n    findSystem(fact, systemsBaselinesList) {\n        let row = [];\n\n        for (let i = 0; i < systemsBaselinesList.length; i += 1) {\n            let system = fact.systems.find(function(system) {\n                return system.id === systemsBaselinesList[i].id;\n            });\n            row.push(\n                <td className={ fact.state === 'DIFFERENT' ? 'highlight comparison-cell' : 'comparison-cell' }>\n                    { system.value === null ? 'No Data' : system.value }\n                </td>\n            );\n        }\n\n        return row;\n    }\n\n    renderRowData(fact, systems, baselines, hspIds) {\n        let row = [];\n        let rows = [];\n        let baselineSystemCount = systems.length + baselines.length + hspIds.length;\n\n        if (fact.comparisons) {\n            row.push(\n                <td className={\n                    this.props.expandedRows.includes(fact.name) ?\n                        'nested-fact sticky-column fixed-column-1' :\n                        'sticky-column fixed-column-1' }>\n                    { this.renderExpandableRowButton(this.props.expandedRows, fact.name) } { fact.name }\n                </td>\n            );\n            row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n            for (let i = 0; i < baselineSystemCount; i += 1) {\n                row.push(<td className=\"comparison-cell\"></td>);\n            }\n\n            rows.push(<tr>{ row }</tr>);\n\n            if (this.props.expandedRows.includes(fact.name)) {\n                for (let i = 0; i < fact.comparisons.length; i++) {\n                    row = this.renderRowChild(fact.comparisons[i], systems, baselines, hspIds);\n                    rows.push(<tr>{ row }</tr>);\n                }\n            }\n        } else {\n            row.push(<td className=\"sticky-column fixed-column-1\">{ fact.name }</td>);\n            row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n            row = row.concat(this.findSystem(fact, baselines, 'baselines'));\n            row = row.concat(this.findSystem(fact, systems, 'systems'));\n            row = row.concat(this.findSystem(fact, hspIds, 'system profiles'));\n\n            rows.push(<tr>{ row }</tr>);\n        }\n\n        return rows;\n    }\n\n    renderRowChild(fact, systems, baselines, hspIds) {\n        let row = [];\n\n        row.push(<td className=\"nested-fact sticky-column fixed-column-1\">\n            <p className=\"child-row\">{ fact.name }</p>\n        </td>);\n        row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n        row = row.concat(this.findSystem(fact, baselines, 'baselines'));\n        row = row.concat(this.findSystem(fact, systems, 'systems'));\n        row = row.concat(this.findSystem(fact, hspIds, 'system profiles'));\n\n        return row;\n    }\n\n    addSystems(data) {\n        let row = [];\n        let type = '';\n\n        for (let i = 0; i < data.length; i++) {\n            type = data[i].type;\n\n            row.push(\n                <th key={ data[i].id } className={ data[i].type + '-header drift-header' }>\n                    <div>\n                        <a onClick={ () => this.removeSystem(data[i]) } className=\"remove-system-icon\">\n                            <TimesIcon/>\n                        </a>\n                    </div>\n                    <div className={ type === 'baselines' ? 'comparison-header' : 'comparison-header' }>\n                        <div>\n                            { type === 'baseline' ? <BlueprintIcon/> : <ServerIcon/> }\n                            <span className=\"system-name\">{ data[i].display_name }</span>\n                        </div>\n                        <div className=\"system-updated\">\n                            { data[i].system_profile_exists === false ?\n                                <Tooltip\n                                    position='top'\n                                    content={\n                                        <div>System profile does not exist. Please run insights-client on system to upload archive.</div>\n                                    }\n                                >\n                                    <ExclamationTriangleIcon color=\"#f0ab00\"/>\n                                </Tooltip> : ''\n                            }\n                            { data[i].last_updated\n                                ? this.formatDate(data[i].last_updated)\n                                : this.formatDate(data[i].updated)\n                            }\n                            { insights.chrome.isBeta()\n                                ? data[i].type === 'system'\n                                    ? <HistoricalProfilesDropdown systemId={ data[i].id } fetchCompare={ this.fetchCompare }/>\n                                    : null\n                                : null\n                            }\n                        </div>\n                    </div>\n                </th>\n            );\n        }\n\n        return row;\n    }\n\n    renderSystems(systems, baselines, hspIds) {\n        let baselinesList = [];\n        let systemsList = [];\n        let row = [];\n        let fullHistoricalSystemList = [];\n\n        if (systems.length === 0 && baselines.length === 0 && hspIds.length === 0) {\n            return row;\n        }\n\n        let modifiedSystems = systems.map(function(system) {\n            system.type = 'system';\n            return system;\n        });\n        let modifiedBaselines = baselines.map(function(baseline) {\n            baseline.type = 'baseline';\n            return baseline;\n        });\n        let modifiedHSPs = hspIds.map(function(hsp) {\n            hsp.type = 'historical-system-profile';\n            return hsp;\n        });\n\n        modifiedSystems.forEach(function(system) {\n            fullHistoricalSystemList.push(system);\n            modifiedHSPs.forEach(function(hsp) {\n                if (hsp.display_name === system.display_name) {\n                    fullHistoricalSystemList.push(hsp);\n                }\n            });\n        });\n\n        baselinesList = this.addSystems(modifiedBaselines);\n        systemsList = this.addSystems(fullHistoricalSystemList);\n\n        row = baselinesList.concat(systemsList);\n\n        return row;\n    }\n\n    renderSortButton(sortType, sort) {\n        let sortIcon;\n\n        if (sort === ASC) {\n            sortIcon = <LongArrowAltUpIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else if (sort === DESC) {\n            sortIcon = <LongArrowAltDownIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else {\n            sortIcon = <ArrowsAltVIcon className=\"pointer not-active\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n\n        return sortIcon;\n    }\n\n    toggleSort(sortType, sort) {\n        if (sortType === 'fact') {\n            this.props.toggleFactSort(sort);\n        } else {\n            this.props.toggleStateSort(sort);\n        }\n    }\n\n    renderHeaderRow(systems, baselines, hspIds) {\n        const { stateSort } = this.props;\n\n        return (\n            <tr className=\"sticky-column-header\">\n                <th className=\"fact-header sticky-column fixed-column-1\" key='fact-header'>\n                    <div className=\"active-blue\">Fact { this.renderSortButton('fact', this.props.factSort) }</div>\n                </th>\n                <th className=\"state-header sticky-column fixed-column-2\" key='state-header'>\n                    { stateSort !== '' ?\n                        <div className=\"active-blue\">State { this.renderSortButton('state', this.props.stateSort) }</div> :\n                        <div>State { this.renderSortButton('state', this.props.stateSort) }</div>\n                    }\n                </th>\n                { this.renderSystems(systems, baselines, hspIds) }\n            </tr>\n        );\n    }\n\n    renderExpandableRowButton(expandedRows, factName) {\n        let expandIcon;\n\n        if (expandedRows.includes(factName)) {\n            expandIcon = <AngleDownIcon className=\"pointer active-blue\" onClick={ () => this.props.expandRow(factName) } />;\n        } else {\n            expandIcon = <AngleRightIcon className=\"pointer\" onClick={ () => this.props.expandRow(factName) } />;\n        }\n\n        return expandIcon;\n    }\n\n    renderEmptyState() {\n        return (\n            <center>\n                <EmptyState>\n                    <EmptyStateIcon icon={ PlusCircleIcon } />\n                    <br></br>\n                    <Title size=\"lg\">Add systems or baselines to compare</Title>\n                    <EmptyStateBody>\n                        You currently have no systems or baselines displayed. Add at least two\n                        <br></br>\n                        systems or baselines to compare their facts.\n                    </EmptyStateBody>\n                    <AddSystemButton isTable={ false }/>\n                </EmptyState>\n            </center>\n        );\n    }\n\n    renderTable(compareData, systems, baselines, hspIds, loading) {\n        return (\n            <React.Fragment>\n                <div className=\"drift-table-wrapper\">\n                    <table className=\"pf-c-table pf-m-compact drift-table\">\n                        <thead>\n                            { this.renderHeaderRow(systems, baselines, hspIds, loading) }\n                        </thead>\n                        <tbody>\n                            { loading ? this.renderLoadingRows() : this.renderRows(compareData, systems, baselines, hspIds) }\n                        </tbody>\n                    </table>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { fullCompareData, filteredCompareData, systems, baselines, hspIds, loading } = this.props;\n\n        return (\n            <React.Fragment>\n                <AddSystemModal\n                    selectedSystemIds={ systems.map(system => system.id) }\n                    confirmModal={ this.fetchCompare }\n                />\n                {\n                    systems.length > 0 ||\n                    baselines.length > 0 ||\n                    hspIds.length > 0 ||\n                    loading ||\n                    (fullCompareData.length !== 0 && this.systemIds.length !== 0)\n                        ? this.renderTable(filteredCompareData, systems, baselines, hspIds, loading) : this.renderEmptyState()\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        fullCompareData: state.compareState.fullCompareData,\n        filteredCompareData: state.compareState.filteredCompareData,\n        addSystemModalOpened: state.addSystemModalOpened,\n        stateFilters: state.compareState.stateFilters,\n        factFilter: state.compareState.factFilter,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines,\n        hspIds: state.compareState.hspIds,\n        factSort: state.compareState.factSort,\n        stateSort: state.compareState.stateSort,\n        expandedRows: state.compareState.expandedRows,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchCompare: (systemIds, baselineIds, hspIds) => dispatch(compareActions.fetchCompare(systemIds, baselineIds, hspIds)),\n        toggleFactSort: (sortType) => dispatch(compareActions.toggleFactSort(sortType)),\n        toggleStateSort: (sortType) => dispatch(compareActions.toggleStateSort(sortType)),\n        expandRow: (factName) => dispatch(compareActions.expandRow(factName)),\n        clearState: () => dispatch(compareActions.clearState()),\n        setSelectedBaselines: (selectedBaselineIds) => dispatch(baselinesTableActions.setSelectedBaselines(selectedBaselineIds)),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter)),\n        selectHistoricProfile: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfile(historicProfileIds))\n    };\n}\n\nDriftTable.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object,\n    fetchCompare: PropTypes.func,\n    clearState: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    filteredCompareData: PropTypes.array,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    hspIds: PropTypes.array,\n    addSystemModalOpened: PropTypes.bool,\n    stateFilters: PropTypes.array,\n    factFilter: PropTypes.string,\n    factSort: PropTypes.string,\n    stateSort: PropTypes.string,\n    loading: PropTypes.bool,\n    toggleFactSort: PropTypes.func,\n    toggleStateSort: PropTypes.func,\n    expandRow: PropTypes.func,\n    expandRows: PropTypes.func,\n    expandedRows: PropTypes.array,\n    setSelectedBaselines: PropTypes.func,\n    addStateFilter: PropTypes.func,\n    selectHistoricProfile: PropTypes.func,\n    selectedHSPIds: PropTypes.array\n};\n\nexport default withRouter (connect(mapStateToProps, mapDispatchToProps)(DriftTable));\n","import types from './types';\n\nfunction toggleFilterDropDown() {\n    return {\n        type: types.OPEN_FILTER_DROPDOWN\n    };\n}\n\nexport default {\n    toggleFilterDropDown\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox, Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { filterDropdownActions } from './redux';\n\nclass FilterDropDown extends Component {\n    constructor(props) {\n        super(props);\n        this.onToggle = this.onToggle.bind(this);\n        this.createDropdownItem = this.createDropdownItem.bind(this);\n    }\n\n    onToggle() {\n        this.props.toggleDropDown();\n    }\n\n    createDropdownItem(stateFilter) {\n        let dropdownItem = <Checkbox\n            className=\"state-filter-checkbox\"\n            id={ stateFilter.display }\n            label={ stateFilter.display }\n            isChecked={ stateFilter.selected }\n            onChange={ () =>\n                this.props.addStateFilter(stateFilter)\n            } />;\n\n        return dropdownItem;\n    }\n\n    createDropdownArray(stateFilters) {\n        let dropdownItems = [];\n\n        stateFilters.forEach(function(stateFilter) {\n            let dropdownItem = this.createDropdownItem(stateFilter);\n            dropdownItems.push(dropdownItem);\n        }.bind(this));\n\n        return dropdownItems;\n    }\n\n    createSelectedViewsString(stateFilters) {\n        let selectedViewsArray = [];\n        let selectedViews = '';\n\n        for (let i = 0; i < stateFilters.length; i++) {\n            if (stateFilters[i].selected) {\n                selectedViewsArray.push(stateFilters[i].display);\n            }\n        }\n\n        for (let i = 0; i < selectedViewsArray.length; i++) {\n            selectedViews += selectedViewsArray[i];\n\n            if ((i + 1) < selectedViewsArray.length) {\n                selectedViews += ', ';\n            }\n        }\n\n        return selectedViews;\n    }\n\n    render() {\n        const { stateFilters } = this.props;\n        let dropdownItems = [];\n        let selectedViews = '';\n\n        dropdownItems = this.createDropdownArray(stateFilters);\n        selectedViews = this.createSelectedViewsString(stateFilters);\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    className=\"state-filter-dropdown\"\n                    onSelect={ this.onToggle }\n                    toggle={ <DropdownToggle onToggle={ this.onToggle }>\n                        View: { selectedViews }\n                    </DropdownToggle> }\n                    isOpen={ this.props.filterDropdownOpened }\n                    dropdownItems={ dropdownItems }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nFilterDropDown.propTypes = {\n    toggleDropDown: PropTypes.func,\n    filterDropdownOpened: PropTypes.bool,\n    stateFilters: PropTypes.array,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        filterDropdownOpened: state.filterDropdownOpened,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleDropDown: () => dispatch(filterDropdownActions.toggleFilterDropDown()),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(FilterDropDown));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TextInput } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { compareActions } from '../../modules';\n\nexport class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: this.props.factFilter\n        };\n\n        this.setFactFilter = this.setFactFilter.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.factFilter !== '' && this.props.factFilter === '') {\n            this.setState({ filter: this.props.factFilter });\n        }\n    }\n\n    updateFactFilter = (filter) => {\n        this.setState({ filter });\n        this.setFactFilter(filter);\n    }\n\n    setFactFilter = _.debounce(function(filter) {\n        this.props.changeFactFilter(filter);\n    }, 250);\n\n    render() {\n        return (\n            <React.Fragment>\n                <TextInput\n                    value={ this.state.filter }\n                    id=\"filterByFact\"\n                    placeholder=\"Filter by fact\"\n                    onChange={ this.updateFactFilter }\n                    aria-label=\"filter by fact\"\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nSearchBar.propTypes = {\n    changeFactFilter: PropTypes.func,\n    factFilter: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeFactFilter: (factFilter) => dispatch(compareActions.filterByFact(factFilter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(SearchBar));\n","import types from './types';\n\nfunction toggleKebab() {\n    return {\n        type: types.TOGGLE_KEBAB\n    };\n}\n\nexport default {\n    toggleKebab\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../../modules';\nimport { actionKebabActions } from './redux';\nimport { Dropdown, KebabToggle, DropdownItem } from '@patternfly/react-core';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { historicProfilesActions } from '../../HistoricalProfilesDropdown/redux';\n\nclass ActionKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.removeSystemsSelect = this.removeSystemsSelect.bind(this);\n    }\n\n    removeSystemsSelect() {\n        const { history, toggleKebab, removeSystems, clearSelectedBaselines, selectHistoricProfile, selectedHSPIds } = this.props;\n\n        toggleKebab();\n        removeSystems();\n        clearSelectedBaselines();\n        selectHistoricProfile(selectedHSPIds);\n        setHistory(history, []);\n    }\n\n    render() {\n        const dropdownItems = [\n            <DropdownItem key=\"remove-systems\" component=\"button\" onClick={ this.removeSystemsSelect }>Clear all comparisons</DropdownItem>\n        ];\n        return (\n            <Dropdown\n                id='action-kebab'\n                aria-label='action-kebab'\n                style={ { float: 'left' } }\n                toggle={ <KebabToggle onToggle={ this.props.toggleKebab } /> }\n                isOpen={ this.props.kebabOpened }\n                dropdownItems={ dropdownItems }\n                isPlain\n            />\n        );\n    }\n}\n\nActionKebab.propTypes = {\n    removeSystems: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func,\n    toggleKebab: PropTypes.func,\n    kebabOpened: PropTypes.bool,\n    history: PropTypes.object,\n    selectedHSPIds: PropTypes.array,\n    selectHistoricProfile: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        kebabOpened: state.kebabOpened,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        removeSystems: () => dispatch(compareActions.clearState()),\n        clearSelectedBaselines: () => dispatch(baselinesTableActions.clearSelectedBaselines()),\n        toggleKebab: () => dispatch(actionKebabActions.toggleKebab()),\n        selectHistoricProfile: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfile(historicProfileIds))\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ActionKebab));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../modules';\nimport { errorAlertActions } from './redux';\nimport { setHistory } from '../../Utilities/SetHistory';\n\nclass ErrorAlert extends Component {\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n    }\n\n    confirmModal() {\n        const { toggleModal, revertCompareData, history, previousStateSystems } = this.props;\n\n        toggleModal();\n        revertCompareData();\n        setHistory(history, previousStateSystems.map(system => system.id));\n    }\n\n    render() {\n        const { errorAlertOpened } = this.props;\n        return (\n            <React.Fragment>\n                { errorAlertOpened && (\n                    <Alert\n                        variant=\"danger\"\n                        title=\"Error\"\n                        action={\n                            <AlertActionCloseButton\n                                onClose={ () => this.confirmModal() }\n                            /> }\n                    >\n                        Status Code: { this.props.error.status }<br></br>\n                        { this.props.error.detail }\n                    </Alert>\n                ) }\n            </React.Fragment>\n        );\n    }\n}\n\nErrorAlert.propTypes = {\n    confirmModal: PropTypes.func,\n    errorAlertOpened: PropTypes.bool,\n    error: PropTypes.object,\n    status: PropTypes.number,\n    detail: PropTypes.string,\n    toggleModal: PropTypes.func,\n    history: PropTypes.object,\n    clearState: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    revertCompareData: PropTypes.func,\n    previousStateSystems: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        fullCompareData: state.compareState.fullCompareData,\n        previousStateSystems: state.compareState.previousStateSystems,\n        errorAlertOpened: state.errorAlertOpened,\n        error: state.compareState.error\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        revertCompareData: () => dispatch(compareActions.revertCompareData())\n    };\n}\n\nexport default withRouter (connect(mapStateToProps, mapDispatchToProps)(ErrorAlert));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { Pagination, DropdownDirection } from '@patternfly/react-core';\n\nconst perPageOptions = [\n    { title: '10', value: 10 },\n    { title: '25', value: 25 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nclass TablePagination extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onSetPage = this.onSetPage.bind(this);\n        this.onPerPageSelect = this.onPerPageSelect.bind(this);\n    }\n\n    onSetPage(event, page) {\n        const { perPage } = this.props;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    onPerPageSelect(event, perPage) {\n        const page = 1;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    render() {\n        const { totalFacts, page, perPage } = this.props;\n\n        return (\n            <Pagination\n                itemCount={ totalFacts ? totalFacts : 0 }\n                perPageOptions={ perPageOptions }\n                page={ totalFacts === 0 ? 0 : page }\n                perPage={ perPage }\n                dropDirection={ DropdownDirection.down }\n                onSetPage={ this.onSetPage }\n                onPerPageSelect={ this.onPerPageSelect }\n            />\n        );\n    }\n}\n\nTablePagination.propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    updatePagination: PropTypes.func,\n    totalFacts: PropTypes.number\n};\n\nfunction mapStateToProps(state) {\n    return {\n        page: state.compareState.page,\n        perPage: state.compareState.perPage,\n        totalFacts: state.compareState.totalFacts\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updatePagination: ((pagination) => dispatch(compareActions.updatePagination(pagination)))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePagination);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { ExportIcon } from '@patternfly/react-icons';\nimport { compareActions } from '../../modules';\n\nclass ExportCSVButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { exportToCSV } = this.props;\n\n        return (\n            <ExportIcon className='pointer not-active export-button-margin' onClick={ exportToCSV } />\n        );\n    }\n}\n\nExportCSVButton.propTypes = {\n    exportToCSV: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        exportToCSV: () => dispatch(compareActions.exportToCSV())\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(ExportCSVButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Chip, ChipGroup, ChipGroupToolbarItem } from '@patternfly/react-core';\n\nimport { compareActions } from '../../modules';\n\nexport class DriftFilterChips extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chipGroup: [\n                { category: 'State', chips: this.setStateChips(this.props.stateFilters) },\n                { category: 'Name', chips:\n                    this.props.factFilter !== ''\n                        ? [ this.props.factFilter ]\n                        : []\n                }\n            ]\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { stateFilters, factFilter } = this.props;\n        let newStateChips;\n        let newFactFilter;\n        let newChipGroup;\n\n        if (stateFilters !== prevProps.stateFilters) {\n            let filteredChips = [];\n\n            stateFilters.forEach(function(filter) {\n                if (filter.selected) {\n                    filteredChips.push(filter.display);\n                }\n            });\n\n            newStateChips = { category: 'State', chips: filteredChips };\n\n            newChipGroup = [ newStateChips, this.state.chipGroup[1] ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n\n        if (factFilter !== prevProps.factFilter) {\n            newFactFilter = { category: 'Name', chips:\n                factFilter !== ''\n                    ? [ factFilter ]\n                    : []\n            };\n\n            newChipGroup = [ this.state.chipGroup[0], newFactFilter ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n    }\n\n    setStateChips = (stateFilters) => {\n        let stateChips = [];\n\n        stateFilters.forEach(function(filter) {\n            if (filter.selected) {\n                stateChips.push(filter.display);\n            }\n        });\n\n        return stateChips;\n    }\n\n    removeChip = (chip) => {\n        const { stateFilters, addStateFilter, filterByFact } = this.props;\n\n        if (chip === 'Same' || chip === 'Different' || chip === 'Incomplete data') {\n            stateFilters.forEach(function(stateFilter) {\n                if (stateFilter.display === chip) {\n                    addStateFilter(stateFilter);\n                }\n            });\n        } else {\n            filterByFact('');\n        }\n    }\n\n    render() {\n        const { chipGroup } = this.state;\n        let chipKeyCount = 0;\n\n        return (\n            <ChipGroup withToolbar>\n                { chipGroup.map(currentGroup => (\n                    <ChipGroupToolbarItem key={ currentGroup.category } categoryName={ currentGroup.category }>\n                        { currentGroup.chips.map(chip => (\n                            <Chip key={ currentGroup.category + chipKeyCount++ } onClick={ () => this.removeChip(chip) }>\n                                { chip }\n                            </Chip>\n                        )) }\n                    </ChipGroupToolbarItem>\n                )) }\n            </ChipGroup>\n        );\n    }\n}\n\nDriftFilterChips.propTypes = {\n    factFilter: PropTypes.string,\n    stateFilters: PropTypes.array,\n    filterByFact: PropTypes.func,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        filterByFact: (filter) => dispatch(compareActions.filterByFact(filter)),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DriftFilterChips);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport { errorAlertActions } from '../ErrorAlert/redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nimport DriftTable from './DriftTable/DriftTable';\nimport FilterDropDown from './FilterDropDown/FilterDropDown';\nimport SearchBar from './SearchBar/SearchBar';\nimport ActionKebab from './ActionKebab/ActionKebab';\nimport ErrorAlert from '../ErrorAlert/ErrorAlert';\nimport TablePagination from './Pagination/Pagination';\nimport ExportCSVButton from './ExportCSVButton/ExportCSVButton';\nimport DriftFilterChips from './DriftFilterChips/DriftFilterChips';\nimport AddSystemButton from './AddSystemButton/AddSystemButton';\n\nexport class DriftPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.props.clearSelectedBaselines();\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    render() {\n        const { systems, baselines, loading } = this.props;\n\n        if (this.props.error.detail) {\n            this.props.toggleErrorAlert();\n        }\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='System Comparison'/>\n                </PageHeader>\n                <Main>\n                    <ErrorAlert />\n                    <Card className='pf-t-light pf-m-opaque-100'>\n                        <CardBody>\n                            <div>\n                                { (systems.length > 0 || baselines.length > 0) && !loading ?\n                                    <React.Fragment>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <SearchBar />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <FilterDropDown />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <AddSystemButton/>\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ExportCSVButton />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ActionKebab />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                            <ToolbarGroup className=\"pf-c-pagination\">\n                                                <ToolbarItem>\n                                                    <TablePagination />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <DriftFilterChips />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                    </React.Fragment>\n                                    : null\n                                }\n                                <DriftTable />\n                                { systems.length > 0 && !loading ?\n                                    <Toolbar className=\"drift-toolbar\">\n                                        <ToolbarGroup className=\"pf-c-pagination\">\n                                            <ToolbarItem>\n                                                <TablePagination />\n                                            </ToolbarItem>\n                                        </ToolbarGroup>\n                                    </Toolbar>\n                                    : null\n                                }\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nDriftPage.propTypes = {\n    error: PropTypes.object,\n    loading: PropTypes.bool,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    toggleErrorAlert: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleErrorAlert: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        clearSelectedBaselines: () => dispatch(baselinesTableActions.clearSelectedBaselines())\n    };\n}\n\nfunction mapStateToProps(state) {\n    return {\n        error: state.compareState.error,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftPage));\n"],"sourceRoot":""}