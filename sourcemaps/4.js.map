{"version":3,"sources":["webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./node_modules/react-cookie/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///./src/SmartComponents/ErrorAlert/redux/actions.js","webpack:///./node_modules/react-cookie/es6/withCookies.js","webpack:///./src/SmartComponents/AddSystemModal/AddSystemModal.js","webpack:///./src/SmartComponents/DriftPage/AddSystemButton/AddSystemButton.js","webpack:///./src/SmartComponents/StateIcon/StateIcon.js","webpack:///./src/Utilities/SetHistory.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/redux/actions.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/HistoricalProfilesCheckbox/HistoricalProfilesCheckbox.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/FetchHistoricalProfilesButton/FetchHistoricalProfilesButton.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/HistoricalProfilesDropdown.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/DriftTable.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/FilterDropDown.js","webpack:///./src/SmartComponents/DriftPage/SearchBar/SearchBar.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/ActionKebab.js","webpack:///./src/SmartComponents/ErrorAlert/ErrorAlert.js","webpack:///./src/SmartComponents/DriftPage/Pagination/Pagination.js","webpack:///./src/SmartComponents/DriftPage/ExportCSVButton/ExportCSVButton.js","webpack:///./src/SmartComponents/DriftPage/DriftFilterChips/DriftFilterChips.js","webpack:///./src/SmartComponents/DriftPage/DriftPage.js"],"names":["strictUriEncode","objectAssign","encode","value","opts","strict","encodeURIComponent","exports","extract","str","split","parse","formatter","result","arrayFormat","key","accumulator","exec","replace","undefined","concat","parserForArrayFormat","ret","Object","create","trim","forEach","param","parts","shift","val","length","join","decodeURIComponent","keys","sort","reduce","Boolean","Array","isArray","keysSorter","input","a","b","Number","map","stringify","obj","index","encoderForArrayFormat","slice","val2","push","filter","x","module","c","charCodeAt","toString","toUpperCase","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","prototype","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","i","descriptor","e","extendStatics","toggleErrorAlert","types","OPEN_ERROR_ALERT","__extends","d","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","__assign","assign","t","s","n","call","apply","__rest","indexOf","propertyIsEnumerable","hoistStatics","AddSystemModal","props","confirmModal","bind","cancelSelection","changeActiveTab","window","insights","chrome","auth","getUser","entities","selectedBaselineIds","toggleModal","selectedHSPIds","selectedSystemIds","ids","systems","system","id","baselines","baseline","event","tabIndex","selectActiveTab","activeTab","addSystemModalOpened","Fragment","Modal","title","isOpen","onClose","width","isFooterLeftAligned","actions","Button","variant","onClick","Tabs","activeKey","onSelect","Tab","eventKey","SystemsTable","BaselinesTable","hasSelect","Component","cookies","instanceOf","Cookies","isRequired","showModal","PropTypes","bool","number","func","object","array","withCookies","WrappedComponent","CookieWrapper","ForwardedComponent","connect","state","addSystemModalState","compareState","baselinesTableState","historicProfilesState","dispatch","addSystemModalActions","toggleAddSystemModal","newActiveTab","_super","_this","onChange","forceUpdate","listen","addChangeListener","unlisten","removeChangeListener","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","_a","forwardedRef","restProps","allCookies","getAll","ref","AddSystemButton","className","isTable","StateIcon","factState","color","height","icon","string","setHistory","history","systemIds","baselineIds","hspIds","search","queryString","system_ids","baseline_ids","hsp_ids","selectHistoricProfile","historicProfileId","SELECT_HISTORIC_PROFILE","payload","HistoricalProfilesCheckbox","handleChange","checked","profile","setState","some","Checkbox","label","moment","utc","created","format","isChecked","aria-label","historicProfileIds","historicProfilesActions","FetchHistoricalProfilesButton","fetchHistoricalComparison","fetchCompare","style","float","location","withRouter","HistoricalProfilesDropdown","createDropdownArray","historicalData","dropdownItems","profiles","DropdownItem","renderLoadingRows","onToggle","fetchData","systemId","api","fetchHistoricalData","rows","size","SkeletonSize","sm","Dropdown","toggle","DropdownToggle","iconComponent","isPlain","DriftTable","removeSystem","systemBaseline","clearState","setSelectedBaselines","stateFilters","addStateFilter","newSystemIds","systemProfile","display_name","HSPIds","item","stateFilter","selected","setSystemIds","setBaselineIds","setHSPIds","formatDate","dateString","facts","rowData","renderRowData","md","fact","systemsBaselinesList","row","find","baselineSystemCount","comparisons","expandedRows","includes","renderExpandableRowButton","renderRowChild","findSystem","data","system_profile_exists","Tooltip","position","content","last_updated","updated","isBeta","systemsList","baselinesList","fullHistoricalSystemList","modifiedSystems","modifiedBaselines","modifiedHSPs","hsp","addSystems","sortType","ASC","toggleSort","DESC","toggleFactSort","toggleStateSort","stateSort","renderSortButton","factSort","renderSystems","factName","expandRow","EmptyState","EmptyStateIcon","PlusCircleIcon","Title","EmptyStateBody","compareData","loading","renderHeaderRow","renderRows","fullCompareData","filteredCompareData","renderTable","renderEmptyState","factFilter","expandRows","compareActions","baselinesTableActions","toggleFilterDropDown","OPEN_FILTER_DROPDOWN","FilterDropDown","createDropdownItem","toggleDropDown","display","dropdownItem","selectedViewsArray","selectedViews","createSelectedViewsString","filterDropdownOpened","filterDropdownActions","SearchBar","updateFactFilter","setFactFilter","changeFactFilter","TextInput","placeholder","filterByFact","toggleKebab","TOGGLE_KEBAB","ActionKebab","removeSystemsSelect","removeSystems","clearSelectedBaselines","KebabToggle","kebabOpened","actionKebabActions","ErrorAlert","revertCompareData","previousStateSystems","errorAlertOpened","Alert","action","AlertActionCloseButton","error","status","detail","errorAlertActions","perPageOptions","TablePagination","onSetPage","onPerPageSelect","page","pagination","perPage","updatePagination","totalFacts","Pagination","itemCount","dropDirection","DropdownDirection","down","ExportCSVButton","exportToCSV","DriftFilterChips","setStateChips","stateChips","removeChip","chip","chipGroup","category","chips","newFactFilter","newChipGroup","filteredChips","chipKeyCount","ChipGroup","withToolbar","currentGroup","ChipGroupToolbarItem","categoryName","Chip","DriftPage","Card","CardBody","Toolbar","ToolbarGroup","ToolbarItem"],"mappings":"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","file":"js/4-52857d674457977e6dac.js","sourcesContent":["'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tformatter(decodeURIComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n};\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n","'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import types from './types';\n\nfunction toggleErrorAlert() {\n    return {\n        type: types.OPEN_ERROR_ALERT\n    };\n}\n\nexport default {\n    toggleErrorAlert\n};\n","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport * as React from 'react';\r\nimport { Consumer } from './CookiesContext';\r\n// Only way to make function modules work with both TypeScript and Rollup\r\nvar hoistStatics = require('hoist-non-react-statics');\r\nexport default function withCookies(WrappedComponent) {\r\n    // @ts-ignore\r\n    var name = WrappedComponent.displayName || WrappedComponent.name;\r\n    var CookieWrapper = /** @class */ (function (_super) {\r\n        __extends(CookieWrapper, _super);\r\n        function CookieWrapper() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.onChange = function () {\r\n                // Make sure to update children with new values\r\n                _this.forceUpdate();\r\n            };\r\n            return _this;\r\n        }\r\n        CookieWrapper.prototype.listen = function () {\r\n            this.props.cookies.addChangeListener(this.onChange);\r\n        };\r\n        CookieWrapper.prototype.unlisten = function (cookies) {\r\n            (cookies || this.props.cookies).removeChangeListener(this.onChange);\r\n        };\r\n        CookieWrapper.prototype.componentDidMount = function () {\r\n            this.listen();\r\n        };\r\n        CookieWrapper.prototype.componentDidUpdate = function (prevProps) {\r\n            if (prevProps.cookies !== this.props.cookies) {\r\n                this.unlisten(prevProps.cookies);\r\n                this.listen();\r\n            }\r\n        };\r\n        CookieWrapper.prototype.componentWillUnmount = function () {\r\n            this.unlisten();\r\n        };\r\n        CookieWrapper.prototype.render = function () {\r\n            var _a = this.props, forwardedRef = _a.forwardedRef, cookies = _a.cookies, restProps = __rest(_a, [\"forwardedRef\", \"cookies\"]);\r\n            var allCookies = cookies.getAll();\r\n            return (React.createElement(WrappedComponent, __assign({}, restProps, { ref: forwardedRef, cookies: cookies, allCookies: allCookies })));\r\n        };\r\n        CookieWrapper.displayName = \"withCookies(\" + name + \")\";\r\n        CookieWrapper.WrappedComponent = WrappedComponent;\r\n        return CookieWrapper;\r\n    }(React.Component));\r\n    var ForwardedComponent = React.forwardRef(function (props, ref) {\r\n        return (React.createElement(Consumer, null, function (cookies) { return (React.createElement(CookieWrapper, __assign({ cookies: cookies }, props, { forwardedRef: ref }))); }));\r\n    });\r\n    ForwardedComponent.displayName = CookieWrapper.displayName;\r\n    ForwardedComponent.WrappedComponent = CookieWrapper.WrappedComponent;\r\n    return hoistStatics(ForwardedComponent, WrappedComponent);\r\n}\r\n","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Tab, Tabs } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withCookies, Cookies } from 'react-cookie';\n\nimport SystemsTable from '../SystemsTable/SystemsTable';\nimport BaselinesTable from '../BaselinesTable/BaselinesTable';\nimport { addSystemModalActions } from './redux';\n\nclass AddSystemModal extends Component {\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n        this.cancelSelection = this.cancelSelection.bind(this);\n        this.changeActiveTab = this.changeActiveTab.bind(this);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    confirmModal() {\n        const { confirmModal, entities, selectedBaselineIds, toggleModal, selectedHSPIds } = this.props;\n\n        confirmModal(entities.selectedSystemIds, selectedBaselineIds, selectedHSPIds);\n        toggleModal();\n    }\n\n    cancelSelection() {\n        this.props.toggleModal();\n    }\n\n    selectedSystemIds() {\n        let ids = this.props.systems.map(function (system) {\n            return system.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    selectedBaselineIds() {\n        let ids = this.props.baselines.map(function (baseline) {\n            return baseline.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    changeActiveTab(event, tabIndex) {\n        const { selectActiveTab } = this.props;\n\n        selectActiveTab(tabIndex);\n    }\n\n    render() {\n        const { activeTab, addSystemModalOpened } = this.props;\n\n        return (\n            <React.Fragment>\n                <Modal\n                    title=\"Choose systems\"\n                    isOpen={ addSystemModalOpened }\n                    onClose={ this.cancelSelection }\n                    width=\"auto\"\n                    isFooterLeftAligned\n                    actions={ [\n                        <Button\n                            key=\"confirm\"\n                            variant=\"primary\"\n                            onClick={ this.confirmModal }>\n                            Submit\n                        </Button>\n                    ] }\n                >\n                    <Tabs\n                        activeKey={ activeTab }\n                        onSelect={ this.changeActiveTab }\n                    >\n                        <Tab\n                            eventKey={ 0 }\n                            title=\"Systems\"\n                        >\n                            <SystemsTable selectedSystemIds={ this.selectedSystemIds() }/>\n                        </Tab>\n                        <Tab\n                            eventKey={ 1 }\n                            title=\"Baselines\"\n                        >\n                            <BaselinesTable hasSelect={ true }/>\n                        </Tab>\n                    </Tabs>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nAddSystemModal.propTypes = {\n    showModal: PropTypes.bool,\n    addSystemModalOpened: PropTypes.bool,\n    activeTab: PropTypes.number,\n    confirmModal: PropTypes.func,\n    cancelSelection: PropTypes.func,\n    toggleModal: PropTypes.func,\n    selectActiveTab: PropTypes.func,\n    entities: PropTypes.object,\n    systems: PropTypes.array,\n    selectedBaselineIds: PropTypes.array,\n    baselines: PropTypes.array,\n    selectedHSPIds: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        systems: state.compareState.systems,\n        activeTab: state.addSystemModalState.activeTab,\n        entities: state.entities,\n        selectedBaselineIds: state.baselinesTableState.selectedBaselineIds,\n        baselines: state.compareState.baselines,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(addSystemModalActions.toggleAddSystemModal()),\n        selectActiveTab: (newActiveTab) => dispatch(addSystemModalActions.selectActiveTab(newActiveTab))\n    };\n}\n\nexport default withCookies(connect(mapStateToProps, mapDispatchToProps)(AddSystemModal));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\n\nimport { addSystemModalActions } from '../../AddSystemModal/redux';\n\nclass AddSystemButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Button\n                className=\"add-system-button\"\n                variant='primary'\n                onClick={ this.props.toggleAddSystemModal }>\n                { this.props.isTable ? 'Add' : 'Add systems or baselines' }\n            </Button>\n        );\n    }\n}\n\nAddSystemButton.propTypes = {\n    toggleAddSystemModal: PropTypes.func,\n    isTable: PropTypes.bool\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleAddSystemModal: (() => dispatch(addSystemModalActions.toggleAddSystemModal()))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddSystemButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckCircleIcon, QuestionCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\n\nclass StateIcon extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    icon() {\n        let iconClass = '';\n\n        if (this.props.factState === 'SAME') {\n            iconClass = <CheckCircleIcon color='#3E8635' height='20px' width='20px'/>;\n        } else if (this.props.factState === 'DIFFERENT') {\n            iconClass = <ExclamationCircleIcon color='#C9190B' height='20px' width='20px'/>;\n        } else {\n            iconClass = <QuestionCircleIcon color='#151515' height='20px' width='20px'/>;\n        }\n\n        return iconClass;\n    };\n\n    render() {\n        return (\n            this.icon()\n        );\n    }\n}\n\nStateIcon.propTypes = {\n    factState: PropTypes.string\n};\n\nexport default StateIcon;\n","import queryString from 'query-string';\n\nexport function setHistory(history, systemIds = [], baselineIds = [], hspIds = []) {\n    /*eslint-disable camelcase*/\n    history.push({\n        search: '?' + queryString.stringify({ system_ids: systemIds, baseline_ids: baselineIds, hsp_ids: hspIds })\n    });\n    /*eslint-enable camelcase*/\n}\n","import types from './types';\n\nfunction selectHistoricProfile(historicProfileId) {\n    return {\n        type: types.SELECT_HISTORIC_PROFILE,\n        payload: historicProfileId\n    };\n}\n\nexport default {\n    selectHistoricProfile\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { historicProfilesActions } from '../redux';\n\nclass HistoricalProfilesCheckbox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: this.props.selectedHSPIds.some(id => id === this.props.profile.id)\n        };\n    }\n\n    handleChange = () => {\n        const { checked } = this.state;\n        const { selectHistoricProfile, profile } = this.props;\n\n        this.setState({\n            checked: !checked\n        });\n\n        selectHistoricProfile([ profile.id ]);\n    }\n\n    render() {\n        const { profile } = this.props;\n        const { checked } = this.state;\n\n        return (\n            <React.Fragment>\n                <Checkbox\n                    label={ moment.utc(profile.created).format('DD MMM YYYY, HH:mm UTC') }\n                    isChecked={ checked }\n                    onChange={ this.handleChange }\n                    aria-label={ profile.id }\n                    id={ profile.id }\n                    name={ profile.id }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nHistoricalProfilesCheckbox.propTypes = {\n    profile: PropTypes.object,\n    selectHistoricProfile: PropTypes.func,\n    selectedHSPIds: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        selectHistoricProfile: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfile(historicProfileIds))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(HistoricalProfilesCheckbox));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\n\nclass FetchHistoricalProfilesButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    fetchHistoricalComparison = () => {\n        const { baselines, systems, selectedHSPIds } = this.props;\n        let baselineIds = baselines.map(baseline => baseline.id);\n        let systemIds = systems.map(system => system.id);\n\n        this.props.fetchCompare(systemIds, baselineIds, selectedHSPIds);\n    }\n\n    render() {\n        return (\n            <Button\n                style={ { float: 'left' } }\n                variant='primary'\n                onClick={ this.fetchHistoricalComparison }>\n                Compare\n            </Button>\n        );\n    }\n}\n\nFetchHistoricalProfilesButton.propTypes = {\n    fetchHistoricalComparison: PropTypes.func,\n    baselines: PropTypes.array,\n    systems: PropTypes.array,\n    selectedHSPIds: PropTypes.array,\n    fetchCompare: PropTypes.func,\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselines: state.compareState.baselines,\n        systems: state.compareState.systems,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, null)(FetchHistoricalProfilesButton));\n","import React, { Component } from 'react';\nimport { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { UndoIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nimport HistoricalProfilesCheckbox from './HistoricalProfilesCheckbox/HistoricalProfilesCheckbox';\nimport api from '../../api';\nimport FetchHistoricalProfilesButton from './FetchHistoricalProfilesButton/FetchHistoricalProfilesButton';\n\nclass HistoricalProfilesDropdown extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOpen: false,\n            historicalData: this.renderLoadingRows()\n        };\n\n        this.onToggle = () => {\n            const { isOpen } = this.state;\n\n            if (isOpen === false) {\n                this.fetchData(this.props.systemId);\n            }\n\n            this.setState({\n                isOpen: !isOpen\n            });\n        };\n    }\n\n    async fetchData(systemId) {\n        let historicalData = await api.fetchHistoricalData(systemId);\n\n        this.setState({\n            historicalData: this.createDropdownArray(historicalData)\n        });\n    }\n\n    createDropdownArray = (historicalData) => {\n        const { fetchCompare } = this.props;\n\n        let dropdownItems = [];\n\n        historicalData.profiles.forEach(function(profile) {\n            dropdownItems.push(\n                <DropdownItem>\n                    <HistoricalProfilesCheckbox profile={ profile } />\n                </DropdownItem>\n            );\n        });\n\n        dropdownItems.push(<FetchHistoricalProfilesButton fetchCompare={ fetchCompare }/>);\n\n        return dropdownItems;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rows.push(\n                <Skeleton className='pit-dropdown-loading pit-button' size={ SkeletonSize.sm } />\n            );\n            rows.push(<br></br>);\n        }\n\n        return rows;\n    }\n\n    render() {\n        const { isOpen, historicalData } = this.state;\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    toggle={ <DropdownToggle\n                        className='historical-system-profile-dropdown'\n                        iconComponent={ null }\n                        onToggle={ this.onToggle }>\n                        <UndoIcon />\n                    </DropdownToggle> }\n                    isOpen={ isOpen }\n                    isPlain\n                    dropdownItems={ historicalData }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nHistoricalProfilesDropdown.propTypes = {\n    fetchHistoricalData: PropTypes.func,\n    systemId: PropTypes.string,\n    fetchCompare: PropTypes.func\n};\n\nexport default HistoricalProfilesDropdown;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, Title, Tooltip } from '@patternfly/react-core';\nimport queryString from 'query-string';\nimport { AngleDownIcon, AngleRightIcon, LongArrowAltUpIcon, LongArrowAltDownIcon, ArrowsAltVIcon,\n    TimesIcon, ExclamationTriangleIcon, PlusCircleIcon, ServerIcon, BlueprintIcon } from '@patternfly/react-icons';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport moment from 'moment';\n\nimport AddSystemModal from '../../AddSystemModal/AddSystemModal';\nimport AddSystemButton from '../AddSystemButton/AddSystemButton';\nimport StateIcon from '../../StateIcon/StateIcon';\nimport { ASC, DESC } from '../../../constants';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport HistoricalProfilesDropdown from '../../HistoricalProfilesDropdown/HistoricalProfilesDropdown';\nimport { compareActions } from '../../modules';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { historicProfilesActions } from '../../HistoricalProfilesDropdown/redux';\n\nclass DriftTable extends Component {\n    constructor(props) {\n        super(props);\n        this.setSystemIds();\n        this.setBaselineIds();\n        this.setHSPIds();\n        this.fetchCompare = this.fetchCompare.bind(this);\n        this.removeSystem = this.removeSystem.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n        const { fetchCompare } = this.props;\n\n        fetchCompare(this.systemIds, this.baselineIds, this.HSPIds);\n    }\n\n    setSystemIds() {\n        this.systemIds = queryString.parse(this.props.location.search).system_ids;\n        this.systemIds = Array.isArray(this.systemIds) ? this.systemIds : [ this.systemIds ];\n        this.systemIds = this.systemIds.filter(item => item !== undefined);\n    }\n\n    setBaselineIds() {\n        this.baselineIds = queryString.parse(this.props.location.search).baseline_ids;\n        this.baselineIds = Array.isArray(this.baselineIds) ? this.baselineIds : [ this.baselineIds ];\n        this.baselineIds = this.baselineIds.filter(item => item !== undefined);\n    }\n\n    setHSPIds() {\n        const { selectHistoricProfile } = this.props;\n\n        this.HSPIds = queryString.parse(this.props.location.search).hsp_ids;\n        this.HSPIds = Array.isArray(this.HSPIds) ? this.HSPIds : [ this.HSPIds ];\n        this.HSPIds = this.HSPIds.filter(item => item !== undefined);\n        selectHistoricProfile(this.HSPIds);\n    }\n\n    formatDate(dateString) {\n        return moment.utc(dateString).format('DD MMM YYYY, HH:mm UTC');\n    }\n\n    removeSystem = (systemBaseline) => {\n        const { history, clearState, setSelectedBaselines, stateFilters, addStateFilter, hspIds, selectHistoricProfile } = this.props;\n        const newSystemIds = [];\n\n        this.systemIds.forEach((system) => {\n            if (system === systemBaseline.id) {\n                hspIds.forEach((systemProfile) => {\n                    if (systemProfile.display_name === systemBaseline.display_name) {\n                        this.HSPIds = this.HSPIds.filter(item => item !== systemProfile.id);\n                    }\n                });\n            } else {\n                newSystemIds.push(system);\n            }\n        });\n\n        this.systemIds = newSystemIds;\n        this.baselineIds = this.baselineIds.filter(item => item !== systemBaseline.id);\n        this.HSPIds = this.HSPIds.filter(item => item !== systemBaseline.id);\n\n        if ((this.systemIds.length + this.baselineIds.length + this.HSPIds.length) === 1) {\n            stateFilters.forEach((stateFilter) => {\n                if (stateFilter.selected === false) {\n                    addStateFilter(stateFilter);\n                }\n            });\n        }\n\n        if (this.systemIds.length > 0 || this.baselineIds.length > 0 || this.HSPIds.length > 0) {\n            this.fetchCompare(this.systemIds, this.baselineIds, this.HSPIds);\n        } else {\n            setHistory(history, []);\n            clearState();\n        }\n\n        selectHistoricProfile([ systemBaseline.id ]);\n        setSelectedBaselines(this.baselineIds);\n    }\n\n    fetchCompare(systemIds, baselineIds, HSPIds) {\n        this.systemIds = systemIds;\n        this.baselineIds = baselineIds;\n        this.HSPIds = HSPIds;\n\n        if (systemIds.length > 0 || baselineIds.length > 0 || HSPIds.length > 0) {\n            setHistory(this.props.history, systemIds, baselineIds, HSPIds);\n            this.props.fetchCompare(systemIds, baselineIds, HSPIds);\n        }\n    }\n\n    renderRows(facts, systems, baselines, hspIds) {\n        let rows = [];\n        let rowData = [];\n\n        if (facts !== undefined) {\n            for (let i = 0; i < facts.length; i += 1) {\n                rowData = this.renderRowData(facts[i], systems, baselines, hspIds);\n                rows.push(rowData);\n            }\n        }\n\n        return rows;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n        let rowData = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rowData.push(<td><Skeleton size={ SkeletonSize.md } /></td>);\n        }\n\n        for (let i = 0; i < 10; i += 1) {\n            rows.push(<tr>{ rowData }</tr>);\n        }\n\n        return rows;\n    }\n\n    findSystem(fact, systemsBaselinesList) {\n        let row = [];\n\n        for (let i = 0; i < systemsBaselinesList.length; i += 1) {\n            let system = fact.systems.find(function(system) {\n                return system.id === systemsBaselinesList[i].id;\n            });\n            row.push(\n                <td className={ fact.state === 'DIFFERENT' ? 'highlight comparison-cell' : 'comparison-cell' }>\n                    { system.value === null ? 'No Data' : system.value }\n                </td>\n            );\n        }\n\n        return row;\n    }\n\n    renderRowData(fact, systems, baselines, hspIds) {\n        let row = [];\n        let rows = [];\n        let baselineSystemCount = systems.length + baselines.length + hspIds.length;\n\n        if (fact.comparisons) {\n            row.push(\n                <td className={\n                    this.props.expandedRows.includes(fact.name) ?\n                        'nested-fact sticky-column fixed-column-1' :\n                        'sticky-column fixed-column-1' }>\n                    { this.renderExpandableRowButton(this.props.expandedRows, fact.name) } { fact.name }\n                </td>\n            );\n            row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n            for (let i = 0; i < baselineSystemCount; i += 1) {\n                row.push(<td className=\"comparison-cell\"></td>);\n            }\n\n            rows.push(<tr>{ row }</tr>);\n\n            if (this.props.expandedRows.includes(fact.name)) {\n                for (let i = 0; i < fact.comparisons.length; i++) {\n                    row = this.renderRowChild(fact.comparisons[i], systems, baselines, hspIds);\n                    rows.push(<tr>{ row }</tr>);\n                }\n            }\n        } else {\n            row.push(<td className=\"sticky-column fixed-column-1\">{ fact.name }</td>);\n            row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n            row = row.concat(this.findSystem(fact, baselines, 'baselines'));\n            row = row.concat(this.findSystem(fact, systems, 'systems'));\n            row = row.concat(this.findSystem(fact, hspIds, 'system profiles'));\n\n            rows.push(<tr>{ row }</tr>);\n        }\n\n        return rows;\n    }\n\n    renderRowChild(fact, systems, baselines, hspIds) {\n        let row = [];\n\n        row.push(<td className=\"nested-fact sticky-column fixed-column-1\">\n            <p className=\"child-row\">{ fact.name }</p>\n        </td>);\n        row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n        row = row.concat(this.findSystem(fact, baselines, 'baselines'));\n        row = row.concat(this.findSystem(fact, systems, 'systems'));\n        row = row.concat(this.findSystem(fact, hspIds, 'system profiles'));\n\n        return row;\n    }\n\n    addSystems(data) {\n        let row = [];\n        let type = '';\n\n        for (let i = 0; i < data.length; i++) {\n            type = data[i].type;\n\n            row.push(\n                <th key={ data[i].id } className={ data[i].type + '-header drift-header' }>\n                    <div>\n                        <a onClick={ () => this.removeSystem(data[i]) } className=\"remove-system-icon\">\n                            <TimesIcon/>\n                        </a>\n                    </div>\n                    <div className={ type === 'baselines' ? 'comparison-header' : 'comparison-header' }>\n                        <div>\n                            { type === 'baseline' ? <BlueprintIcon/> : <ServerIcon/> }\n                            <span className=\"system-name\">{ data[i].display_name }</span>\n                        </div>\n                        <div className=\"system-updated\">\n                            { data[i].system_profile_exists === false ?\n                                <Tooltip\n                                    position='top'\n                                    content={\n                                        <div>System profile does not exist. Please run insights-client on system to upload archive.</div>\n                                    }\n                                >\n                                    <ExclamationTriangleIcon color=\"#f0ab00\"/>\n                                </Tooltip> : ''\n                            }\n                            { data[i].last_updated\n                                ? this.formatDate(data[i].last_updated)\n                                : this.formatDate(data[i].updated)\n                            }\n                            { insights.chrome.isBeta()\n                                ? data[i].type === 'system'\n                                    ? <HistoricalProfilesDropdown systemId={ data[i].id } fetchCompare={ this.fetchCompare }/>\n                                    : null\n                                : null\n                            }\n                        </div>\n                    </div>\n                </th>\n            );\n        }\n\n        return row;\n    }\n\n    renderSystems(systems, baselines, hspIds) {\n        let baselinesList = [];\n        let systemsList = [];\n        let row = [];\n        let fullHistoricalSystemList = [];\n\n        if (systems.length === 0 && baselines.length === 0 && hspIds.length === 0) {\n            return row;\n        }\n\n        let modifiedSystems = systems.map(function(system) {\n            system.type = 'system';\n            return system;\n        });\n        let modifiedBaselines = baselines.map(function(baseline) {\n            baseline.type = 'baseline';\n            return baseline;\n        });\n        let modifiedHSPs = hspIds.map(function(hsp) {\n            hsp.type = 'historical-system-profile';\n            return hsp;\n        });\n\n        modifiedSystems.forEach(function(system) {\n            fullHistoricalSystemList.push(system);\n            modifiedHSPs.forEach(function(hsp) {\n                if (hsp.display_name === system.display_name) {\n                    fullHistoricalSystemList.push(hsp);\n                }\n            });\n        });\n\n        baselinesList = this.addSystems(modifiedBaselines);\n        systemsList = this.addSystems(fullHistoricalSystemList);\n\n        row = baselinesList.concat(systemsList);\n\n        return row;\n    }\n\n    renderSortButton(sortType, sort) {\n        let sortIcon;\n\n        if (sort === ASC) {\n            sortIcon = <LongArrowAltUpIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else if (sort === DESC) {\n            sortIcon = <LongArrowAltDownIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else {\n            sortIcon = <ArrowsAltVIcon className=\"pointer not-active\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n\n        return sortIcon;\n    }\n\n    toggleSort(sortType, sort) {\n        if (sortType === 'fact') {\n            this.props.toggleFactSort(sort);\n        } else {\n            this.props.toggleStateSort(sort);\n        }\n    }\n\n    renderHeaderRow(systems, baselines, hspIds) {\n        const { stateSort } = this.props;\n\n        return (\n            <tr className=\"sticky-column-header\">\n                <th className=\"fact-header sticky-column fixed-column-1\" key='fact-header'>\n                    <div className=\"active-blue\">Fact { this.renderSortButton('fact', this.props.factSort) }</div>\n                </th>\n                <th className=\"state-header sticky-column fixed-column-2\" key='state-header'>\n                    { stateSort !== '' ?\n                        <div className=\"active-blue\">State { this.renderSortButton('state', this.props.stateSort) }</div> :\n                        <div>State { this.renderSortButton('state', this.props.stateSort) }</div>\n                    }\n                </th>\n                { this.renderSystems(systems, baselines, hspIds) }\n            </tr>\n        );\n    }\n\n    renderExpandableRowButton(expandedRows, factName) {\n        let expandIcon;\n\n        if (expandedRows.includes(factName)) {\n            expandIcon = <AngleDownIcon className=\"pointer active-blue\" onClick={ () => this.props.expandRow(factName) } />;\n        } else {\n            expandIcon = <AngleRightIcon className=\"pointer\" onClick={ () => this.props.expandRow(factName) } />;\n        }\n\n        return expandIcon;\n    }\n\n    renderEmptyState() {\n        return (\n            <center>\n                <EmptyState>\n                    <EmptyStateIcon icon={ PlusCircleIcon } />\n                    <br></br>\n                    <Title size=\"lg\">Add systems or baselines to compare</Title>\n                    <EmptyStateBody>\n                        You currently have no systems or baselines displayed. Add at least two\n                        <br></br>\n                        systems or baselines to compare their facts.\n                    </EmptyStateBody>\n                    <AddSystemButton isTable={ false }/>\n                </EmptyState>\n            </center>\n        );\n    }\n\n    renderTable(compareData, systems, baselines, hspIds, loading) {\n        return (\n            <React.Fragment>\n                <div className=\"drift-table-wrapper\">\n                    <table className=\"pf-c-table pf-m-compact drift-table\">\n                        <thead>\n                            { this.renderHeaderRow(systems, baselines, hspIds, loading) }\n                        </thead>\n                        <tbody>\n                            { loading ? this.renderLoadingRows() : this.renderRows(compareData, systems, baselines, hspIds) }\n                        </tbody>\n                    </table>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { fullCompareData, filteredCompareData, systems, baselines, hspIds, loading } = this.props;\n\n        return (\n            <React.Fragment>\n                <AddSystemModal\n                    selectedSystemIds={ systems.map(system => system.id) }\n                    confirmModal={ this.fetchCompare }\n                />\n                {\n                    systems.length > 0 ||\n                    baselines.length > 0 ||\n                    hspIds.length > 0 ||\n                    loading ||\n                    (fullCompareData.length !== 0 && this.systemIds.length !== 0)\n                        ? this.renderTable(filteredCompareData, systems, baselines, hspIds, loading) : this.renderEmptyState()\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        fullCompareData: state.compareState.fullCompareData,\n        filteredCompareData: state.compareState.filteredCompareData,\n        addSystemModalOpened: state.addSystemModalOpened,\n        stateFilters: state.compareState.stateFilters,\n        factFilter: state.compareState.factFilter,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines,\n        hspIds: state.compareState.hspIds,\n        factSort: state.compareState.factSort,\n        stateSort: state.compareState.stateSort,\n        expandedRows: state.compareState.expandedRows,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchCompare: (systemIds, baselineIds, hspIds) => dispatch(compareActions.fetchCompare(systemIds, baselineIds, hspIds)),\n        toggleFactSort: (sortType) => dispatch(compareActions.toggleFactSort(sortType)),\n        toggleStateSort: (sortType) => dispatch(compareActions.toggleStateSort(sortType)),\n        expandRow: (factName) => dispatch(compareActions.expandRow(factName)),\n        clearState: () => dispatch(compareActions.clearState()),\n        setSelectedBaselines: (selectedBaselineIds) => dispatch(baselinesTableActions.setSelectedBaselines(selectedBaselineIds)),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter)),\n        selectHistoricProfile: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfile(historicProfileIds))\n    };\n}\n\nDriftTable.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object,\n    fetchCompare: PropTypes.func,\n    clearState: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    filteredCompareData: PropTypes.array,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    hspIds: PropTypes.array,\n    addSystemModalOpened: PropTypes.bool,\n    stateFilters: PropTypes.array,\n    factFilter: PropTypes.string,\n    factSort: PropTypes.string,\n    stateSort: PropTypes.string,\n    loading: PropTypes.bool,\n    toggleFactSort: PropTypes.func,\n    toggleStateSort: PropTypes.func,\n    expandRow: PropTypes.func,\n    expandRows: PropTypes.func,\n    expandedRows: PropTypes.array,\n    setSelectedBaselines: PropTypes.func,\n    addStateFilter: PropTypes.func,\n    selectHistoricProfile: PropTypes.func,\n    selectedHSPIds: PropTypes.array\n};\n\nexport default withRouter (connect(mapStateToProps, mapDispatchToProps)(DriftTable));\n","import types from './types';\n\nfunction toggleFilterDropDown() {\n    return {\n        type: types.OPEN_FILTER_DROPDOWN\n    };\n}\n\nexport default {\n    toggleFilterDropDown\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox, Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { filterDropdownActions } from './redux';\n\nclass FilterDropDown extends Component {\n    constructor(props) {\n        super(props);\n        this.onToggle = this.onToggle.bind(this);\n        this.createDropdownItem = this.createDropdownItem.bind(this);\n    }\n\n    onToggle() {\n        this.props.toggleDropDown();\n    }\n\n    createDropdownItem(stateFilter) {\n        let dropdownItem = <Checkbox\n            className=\"state-filter-checkbox\"\n            id={ stateFilter.display }\n            label={ stateFilter.display }\n            isChecked={ stateFilter.selected }\n            onChange={ () =>\n                this.props.addStateFilter(stateFilter)\n            } />;\n\n        return dropdownItem;\n    }\n\n    createDropdownArray(stateFilters) {\n        let dropdownItems = [];\n\n        stateFilters.forEach(function(stateFilter) {\n            let dropdownItem = this.createDropdownItem(stateFilter);\n            dropdownItems.push(dropdownItem);\n        }.bind(this));\n\n        return dropdownItems;\n    }\n\n    createSelectedViewsString(stateFilters) {\n        let selectedViewsArray = [];\n        let selectedViews = '';\n\n        for (let i = 0; i < stateFilters.length; i++) {\n            if (stateFilters[i].selected) {\n                selectedViewsArray.push(stateFilters[i].display);\n            }\n        }\n\n        for (let i = 0; i < selectedViewsArray.length; i++) {\n            selectedViews += selectedViewsArray[i];\n\n            if ((i + 1) < selectedViewsArray.length) {\n                selectedViews += ', ';\n            }\n        }\n\n        return selectedViews;\n    }\n\n    render() {\n        const { stateFilters } = this.props;\n        let dropdownItems = [];\n        let selectedViews = '';\n\n        dropdownItems = this.createDropdownArray(stateFilters);\n        selectedViews = this.createSelectedViewsString(stateFilters);\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    className=\"state-filter-dropdown\"\n                    onSelect={ this.onToggle }\n                    toggle={ <DropdownToggle onToggle={ this.onToggle }>\n                        View: { selectedViews }\n                    </DropdownToggle> }\n                    isOpen={ this.props.filterDropdownOpened }\n                    dropdownItems={ dropdownItems }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nFilterDropDown.propTypes = {\n    toggleDropDown: PropTypes.func,\n    filterDropdownOpened: PropTypes.bool,\n    stateFilters: PropTypes.array,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        filterDropdownOpened: state.filterDropdownOpened,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleDropDown: () => dispatch(filterDropdownActions.toggleFilterDropDown()),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(FilterDropDown));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TextInput } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { compareActions } from '../../modules';\n\nexport class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: this.props.factFilter\n        };\n\n        this.setFactFilter = this.setFactFilter.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.factFilter !== '' && this.props.factFilter === '') {\n            this.setState({ filter: this.props.factFilter });\n        }\n    }\n\n    updateFactFilter = (filter) => {\n        this.setState({ filter });\n        this.setFactFilter(filter);\n    }\n\n    setFactFilter = _.debounce(function(filter) {\n        this.props.changeFactFilter(filter);\n    }, 250);\n\n    render() {\n        return (\n            <React.Fragment>\n                <TextInput\n                    value={ this.state.filter }\n                    id=\"filterByFact\"\n                    placeholder=\"Filter by fact\"\n                    onChange={ this.updateFactFilter }\n                    aria-label=\"filter by fact\"\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nSearchBar.propTypes = {\n    changeFactFilter: PropTypes.func,\n    factFilter: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeFactFilter: (factFilter) => dispatch(compareActions.filterByFact(factFilter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(SearchBar));\n","import types from './types';\n\nfunction toggleKebab() {\n    return {\n        type: types.TOGGLE_KEBAB\n    };\n}\n\nexport default {\n    toggleKebab\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../../modules';\nimport { actionKebabActions } from './redux';\nimport { Dropdown, KebabToggle, DropdownItem } from '@patternfly/react-core';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { historicProfilesActions } from '../../HistoricalProfilesDropdown/redux';\n\nclass ActionKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.removeSystemsSelect = this.removeSystemsSelect.bind(this);\n    }\n\n    removeSystemsSelect() {\n        const { history, toggleKebab, removeSystems, clearSelectedBaselines, selectHistoricProfile, selectedHSPIds } = this.props;\n\n        toggleKebab();\n        removeSystems();\n        clearSelectedBaselines();\n        selectHistoricProfile(selectedHSPIds);\n        setHistory(history, []);\n    }\n\n    render() {\n        const dropdownItems = [\n            <DropdownItem key=\"remove-systems\" component=\"button\" onClick={ this.removeSystemsSelect }>Clear all comparisons</DropdownItem>\n        ];\n        return (\n            <Dropdown\n                id='action-kebab'\n                aria-label='action-kebab'\n                style={ { float: 'left' } }\n                toggle={ <KebabToggle onToggle={ this.props.toggleKebab } /> }\n                isOpen={ this.props.kebabOpened }\n                dropdownItems={ dropdownItems }\n                isPlain\n            />\n        );\n    }\n}\n\nActionKebab.propTypes = {\n    removeSystems: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func,\n    toggleKebab: PropTypes.func,\n    kebabOpened: PropTypes.bool,\n    history: PropTypes.object,\n    selectedHSPIds: PropTypes.array,\n    selectHistoricProfile: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        kebabOpened: state.kebabOpened,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        removeSystems: () => dispatch(compareActions.clearState()),\n        clearSelectedBaselines: () => dispatch(baselinesTableActions.clearSelectedBaselines()),\n        toggleKebab: () => dispatch(actionKebabActions.toggleKebab()),\n        selectHistoricProfile: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfile(historicProfileIds))\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ActionKebab));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../modules';\nimport { errorAlertActions } from './redux';\nimport { setHistory } from '../../Utilities/SetHistory';\n\nclass ErrorAlert extends Component {\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n    }\n\n    confirmModal() {\n        const { toggleModal, revertCompareData, history, previousStateSystems } = this.props;\n\n        toggleModal();\n        revertCompareData();\n        setHistory(history, previousStateSystems.map(system => system.id));\n    }\n\n    render() {\n        const { errorAlertOpened } = this.props;\n        return (\n            <React.Fragment>\n                { errorAlertOpened && (\n                    <Alert\n                        variant=\"danger\"\n                        title=\"Error\"\n                        action={\n                            <AlertActionCloseButton\n                                onClose={ () => this.confirmModal() }\n                            /> }\n                    >\n                        Status Code: { this.props.error.status }<br></br>\n                        { this.props.error.detail }\n                    </Alert>\n                ) }\n            </React.Fragment>\n        );\n    }\n}\n\nErrorAlert.propTypes = {\n    confirmModal: PropTypes.func,\n    errorAlertOpened: PropTypes.bool,\n    error: PropTypes.object,\n    status: PropTypes.number,\n    detail: PropTypes.string,\n    toggleModal: PropTypes.func,\n    history: PropTypes.object,\n    clearState: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    revertCompareData: PropTypes.func,\n    previousStateSystems: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        fullCompareData: state.compareState.fullCompareData,\n        previousStateSystems: state.compareState.previousStateSystems,\n        errorAlertOpened: state.errorAlertOpened,\n        error: state.compareState.error\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        revertCompareData: () => dispatch(compareActions.revertCompareData())\n    };\n}\n\nexport default withRouter (connect(mapStateToProps, mapDispatchToProps)(ErrorAlert));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { Pagination, DropdownDirection } from '@patternfly/react-core';\n\nconst perPageOptions = [\n    { title: '10', value: 10 },\n    { title: '25', value: 25 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nclass TablePagination extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onSetPage = this.onSetPage.bind(this);\n        this.onPerPageSelect = this.onPerPageSelect.bind(this);\n    }\n\n    onSetPage(event, page) {\n        const { perPage } = this.props;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    onPerPageSelect(event, perPage) {\n        const page = 1;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    render() {\n        const { totalFacts, page, perPage } = this.props;\n\n        return (\n            <Pagination\n                itemCount={ totalFacts ? totalFacts : 0 }\n                perPageOptions={ perPageOptions }\n                page={ totalFacts === 0 ? 0 : page }\n                perPage={ perPage }\n                dropDirection={ DropdownDirection.down }\n                onSetPage={ this.onSetPage }\n                onPerPageSelect={ this.onPerPageSelect }\n            />\n        );\n    }\n}\n\nTablePagination.propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    updatePagination: PropTypes.func,\n    totalFacts: PropTypes.number\n};\n\nfunction mapStateToProps(state) {\n    return {\n        page: state.compareState.page,\n        perPage: state.compareState.perPage,\n        totalFacts: state.compareState.totalFacts\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updatePagination: ((pagination) => dispatch(compareActions.updatePagination(pagination)))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePagination);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { ExportIcon } from '@patternfly/react-icons';\nimport { compareActions } from '../../modules';\n\nclass ExportCSVButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { exportToCSV } = this.props;\n\n        return (\n            <ExportIcon className='pointer not-active export-button-margin' onClick={ exportToCSV } />\n        );\n    }\n}\n\nExportCSVButton.propTypes = {\n    exportToCSV: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        exportToCSV: () => dispatch(compareActions.exportToCSV())\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(ExportCSVButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Chip, ChipGroup, ChipGroupToolbarItem } from '@patternfly/react-core';\n\nimport { compareActions } from '../../modules';\n\nexport class DriftFilterChips extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chipGroup: [\n                { category: 'State', chips: this.setStateChips(this.props.stateFilters) },\n                { category: 'Name', chips:\n                    this.props.factFilter !== ''\n                        ? [ this.props.factFilter ]\n                        : []\n                }\n            ]\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { stateFilters, factFilter } = this.props;\n        let newStateChips;\n        let newFactFilter;\n        let newChipGroup;\n\n        if (stateFilters !== prevProps.stateFilters) {\n            let filteredChips = [];\n\n            stateFilters.forEach(function(filter) {\n                if (filter.selected) {\n                    filteredChips.push(filter.display);\n                }\n            });\n\n            newStateChips = { category: 'State', chips: filteredChips };\n\n            newChipGroup = [ newStateChips, this.state.chipGroup[1] ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n\n        if (factFilter !== prevProps.factFilter) {\n            newFactFilter = { category: 'Name', chips:\n                factFilter !== ''\n                    ? [ factFilter ]\n                    : []\n            };\n\n            newChipGroup = [ this.state.chipGroup[0], newFactFilter ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n    }\n\n    setStateChips = (stateFilters) => {\n        let stateChips = [];\n\n        stateFilters.forEach(function(filter) {\n            if (filter.selected) {\n                stateChips.push(filter.display);\n            }\n        });\n\n        return stateChips;\n    }\n\n    removeChip = (chip) => {\n        const { stateFilters, addStateFilter, filterByFact } = this.props;\n\n        if (chip === 'Same' || chip === 'Different' || chip === 'Incomplete data') {\n            stateFilters.forEach(function(stateFilter) {\n                if (stateFilter.display === chip) {\n                    addStateFilter(stateFilter);\n                }\n            });\n        } else {\n            filterByFact('');\n        }\n    }\n\n    render() {\n        const { chipGroup } = this.state;\n        let chipKeyCount = 0;\n\n        return (\n            <ChipGroup withToolbar>\n                { chipGroup.map(currentGroup => (\n                    <ChipGroupToolbarItem key={ currentGroup.category } categoryName={ currentGroup.category }>\n                        { currentGroup.chips.map(chip => (\n                            <Chip key={ currentGroup.category + chipKeyCount++ } onClick={ () => this.removeChip(chip) }>\n                                { chip }\n                            </Chip>\n                        )) }\n                    </ChipGroupToolbarItem>\n                )) }\n            </ChipGroup>\n        );\n    }\n}\n\nDriftFilterChips.propTypes = {\n    factFilter: PropTypes.string,\n    stateFilters: PropTypes.array,\n    filterByFact: PropTypes.func,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        filterByFact: (filter) => dispatch(compareActions.filterByFact(filter)),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DriftFilterChips);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport { errorAlertActions } from '../ErrorAlert/redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nimport DriftTable from './DriftTable/DriftTable';\nimport FilterDropDown from './FilterDropDown/FilterDropDown';\nimport SearchBar from './SearchBar/SearchBar';\nimport ActionKebab from './ActionKebab/ActionKebab';\nimport ErrorAlert from '../ErrorAlert/ErrorAlert';\nimport TablePagination from './Pagination/Pagination';\nimport ExportCSVButton from './ExportCSVButton/ExportCSVButton';\nimport DriftFilterChips from './DriftFilterChips/DriftFilterChips';\nimport AddSystemButton from './AddSystemButton/AddSystemButton';\n\nexport class DriftPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.props.clearSelectedBaselines();\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    render() {\n        const { systems, baselines, loading } = this.props;\n\n        if (this.props.error.detail) {\n            this.props.toggleErrorAlert();\n        }\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='System Comparison'/>\n                </PageHeader>\n                <Main>\n                    <ErrorAlert />\n                    <Card className='pf-t-light pf-m-opaque-100'>\n                        <CardBody>\n                            <div>\n                                { (systems.length > 0 || baselines.length > 0) && !loading ?\n                                    <React.Fragment>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <SearchBar />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <FilterDropDown />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <AddSystemButton/>\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ExportCSVButton />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ActionKebab />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                            <ToolbarGroup className=\"pf-c-pagination\">\n                                                <ToolbarItem>\n                                                    <TablePagination />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <DriftFilterChips />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                    </React.Fragment>\n                                    : null\n                                }\n                                <DriftTable />\n                                { systems.length > 0 && !loading ?\n                                    <Toolbar className=\"drift-toolbar\">\n                                        <ToolbarGroup className=\"pf-c-pagination\">\n                                            <ToolbarItem>\n                                                <TablePagination />\n                                            </ToolbarItem>\n                                        </ToolbarGroup>\n                                    </Toolbar>\n                                    : null\n                                }\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nDriftPage.propTypes = {\n    error: PropTypes.object,\n    loading: PropTypes.bool,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    toggleErrorAlert: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleErrorAlert: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        clearSelectedBaselines: () => dispatch(baselinesTableActions.clearSelectedBaselines())\n    };\n}\n\nfunction mapStateToProps(state) {\n    return {\n        error: state.compareState.error,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftPage));\n"],"sourceRoot":""}