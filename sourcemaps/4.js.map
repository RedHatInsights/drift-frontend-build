{"version":3,"sources":["webpack:///./src/SmartComponents/BaselinesPage/redux/actions.js","webpack:///./src/SmartComponents/BaselinesPage/CreateBaselineButton/CreateBaselineButton.js","webpack:///./src/SmartComponents/BaselinesPage/CreateBaseline/CreateBaseline.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/InlineEdit/constants.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/InlineEdit/utils/utils.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/InlineEdit/editableTableBody.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/CancelButton/CancelButton.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/ConfirmButton/ConfirmButton.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/InlineEdit/css/inline-edit-css.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/InlineEdit/ConfirmButtons.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/InlineEdit/editableRowWrapper.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaseline/EditBaseline.js","webpack:///./src/SmartComponents/BaselinesPage/BaselinesPage.js"],"names":["toggleCreateBaseline","type","types","CREATE_NEW_BASELINE","CreateBaselineButton","props","this","Button","variant","onClick","Component","propTypes","PropTypes","func","connect","dispatch","baselinesPageActions","CreateBaseline","state","baselineName","changeBaselineName","value","setState","EmptyState","EmptyStateVariant","full","EmptyStateIcon","icon","CubesIcon","Title","headingLevel","size","EmptyStateBody","TextInput","onChange","aria-label","submitBaselineName","TableEditConfirmation","NONE","ROW","NO_CONFIRM_ROW","TABLE_TOP","TABLE_BOTTOM","requiredElements","warningCompleted","combineFunctions","functions","realFunctions","filter","f","length","params","forEach","shallowLeftSideEquals","newObject","oldObject","Object","keys","find","key","getBoundingClientRect","element","top","right","bottom","left","width","height","x","y","getClientWindowDimensions","clientWidth","clientHeight","document","documentElement","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_objectSpread","ownKeys","concat","sym","getOwnPropertyDescriptor","enumerable","_defineProperty","obj","defineProperty","configurable","writable","editConfig","shape","editConfirmationType","oneOf","values","onEditCellClicked","onEditConfirmed","onEditCanceled","isRequired","onRowClick","defaultProps","undefined","onRow","event","row","rowProps","computedData","cell","closest","cellNumber","parseInt","getAttribute","Number","isNaN","idElement","elementId","contains","isEditing","isTableEditing","tagName","console","warn","join","showIdWarnings","columnIndex","setTimeout","_ref","BodyComponent","rows","some","mappedRows","map","isRowExpandedIndexes","Set","idx","parent","has","isEditableTogetherWithParent","isChildEditing","isParentEditing","lastVisibleRow","pop","parentRow","isLastVisibleParent","resolveCascadeEditability","createElement","node","array","any","InlineEditBody","_ref2","Table","Consumer","_ref3","consumedProps","CancelButton","ConfirmButton","inlineEditCss","StyleSheet","parse","inlineEditStyles","tableEditingFirstRow","tableEditingLastRow","editing","bold","inject","ConfirmButtons","messages","confirmButtonLabel","cancelButtonLabel","onConfirm","onCancel","environment","buttonsOnTop","boldBorder","window","positionStyle","rowDimensions","boldShift","buttonsTopPosition","buttonsBottomPosition","className","style","onMouseUp","number","bool","string","trRef","onScroll","onResize","isOpen","isExpanded","isFirstVisible","isLastVisible","object","tableConfirmationMapper","hasConfirmationButtons","isTableConfirmation","areButtonsOnTop","hasBoldBorder","getEditStyles","getTableConfirmation","RowWrapperComponent","RowWrapper","super","newState","oldState","tableElem","updateRowDimensions","setStateWith2dEquals","fetchClientDimensions","getDerivedStateFromProps","_this$props","tableConfirmation","confirmButtons","options","actionObject","parentNode","body","trClassName","Fragment","saveRowDimensions","handleScroll","handleResize","getConfirmationButtons","EditBaseline","finishBaselineEdit","bind","makeId","column","rowIndex","name","property","displayName","childEditRenderer","rowData","activeEditId","ExpandableRowContent","data","modules","module","inlineStyle","marginLeft","display","id","TableTextInput","defaultValue","onBlur","newValue","moduleIndex","autoFocus","parentEditRenderer","textInputFormatter","inlineEditFormatterFactory","renderValue","a","renderEdit","Array","index","SkeletonSize","md","baselineData","display_name","columns","editedRowsBackup","shiftedColumnIndex","cells","apiBody","buildApiBody","api","patchBaselineData","baselineFactsArray","childRows","push","baseline_facts","clickedRow","getParentId","rowId","getChildId","onEditActionClick","editedRowBackup","backup","childId","parentId","JSON","stringify","onCollapse","rowKey","actionResolver","title","renderColumns","newColumns","cellFormatters","renderRows","newRows","counter","fact","parentCounter","subFacts","baselineDataLoading","clearBaselineData","ComposedBody","editableTableBody","TableBody","ComposedRowWrapper","editableRowWrapper","InputGroup","rowWrapper","float","baselinesTableState","baselinesTableActions","BaselinesPage","insights","chrome","auth","getUser","fetchBaselines","creatingNewBaseline","Card","CardBody","Toolbar","ToolbarGroup","ToolbarItem","BaselinesTable","baselinesPageState"],"mappings":"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","file":"js/4-14496b8369798bc245b4.js","sourcesContent":["import types from './types';\n\nfunction toggleCreateBaseline() {\n    return {\n        type: types.CREATE_NEW_BASELINE\n    };\n}\n\nexport default {\n    toggleCreateBaseline\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\n\nimport { baselinesPageActions } from '../redux';\n\nclass CreateBaselineButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { toggleCreateBaseline } = this.props;\n\n        return (\n            <Button\n                variant='primary'\n                onClick={ toggleCreateBaseline }>\n                Create Baseline\n            </Button>\n        );\n    }\n}\n\nCreateBaselineButton.propTypes = {\n    toggleCreateBaseline: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleCreateBaseline: (() => dispatch(baselinesPageActions.toggleCreateBaseline()))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(CreateBaselineButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody,\n    TextInput,\n    Title } from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nimport { baselinesPageActions } from '../redux';\n\nclass CreateBaseline extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            baselineName: ''\n        };\n\n        this.changeBaselineName = value => {\n            this.setState({ value });\n        };\n    }\n\n    submitBaselineName() {\n    }\n\n    render() {\n        const { baselineName } = this.state;\n\n        return (\n            <EmptyState variant={ EmptyStateVariant.full }>\n                <EmptyStateIcon icon={ CubesIcon } />\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    Create Baseline\n                </Title>\n                <EmptyStateBody>\n                    Create a baseline name\n                    <TextInput value={ baselineName } type=\"text\" onChange={ this.changeBaselineName } aria-label=\"baseline name\" />\n                    <Button onClick={ this.submitBaselineName }>Submit</Button>\n                </EmptyStateBody>\n            </EmptyState>\n        );\n    }\n}\n\nCreateBaseline.propTypes = {\n    toggleCreateBaseline: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleCreateBaseline: (() => dispatch(baselinesPageActions.toggleCreateBaseline()))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(CreateBaseline);\n","export const TableEditConfirmation = {\n  NONE: 'NONE',\n  ROW: 'ROW',\n  NO_CONFIRM_ROW: 'NO_CONFIRM_ROW',\n  TABLE_TOP: 'TABLE_TOP',\n  TABLE_BOTTOM: 'TABLE_BOTTOM'\n};\n//# sourceMappingURL=constants.js.map","const requiredElements = ['INPUT', 'BUTTON'];\nlet warningCompleted = false;\nexport const showIdWarnings = (row, target) => {\n  if ((row.isEditing || row.isTableEditing) && requiredElements.indexOf(target.tagName) >= 0 && !warningCompleted) {\n    warningCompleted = true; // eslint-disable-next-line no-console\n\n    console.warn(`${requiredElements.join(', ')} elements are required to have an id for editing to work properly.`);\n  }\n};\nexport const combineFunctions = (...functions) => {\n  const realFunctions = functions.filter(f => typeof f === 'function');\n\n  if (realFunctions.length === 1) {\n    return realFunctions[0];\n  }\n\n  if (realFunctions.length > 1) {\n    return (...params) => {\n      realFunctions.forEach(f => f(...params));\n    };\n  }\n\n  return undefined;\n};\nexport const shallowLeftSideEquals = (newObject, oldObject) => !Object.keys(newObject).find(key => newObject[key] !== oldObject[key]);\nexport const getBoundingClientRect = element => {\n  const {\n    top,\n    right,\n    bottom,\n    left,\n    width,\n    height,\n    x,\n    y\n  } = element.getBoundingClientRect();\n  return {\n    top,\n    right,\n    bottom,\n    left,\n    width,\n    height,\n    x,\n    y\n  };\n};\nexport const getClientWindowDimensions = () => {\n  const {\n    clientWidth,\n    clientHeight\n  } = document.documentElement;\n  return {\n    width: clientWidth,\n    height: clientHeight\n  };\n};\n//# sourceMappingURL=utils.js.map","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { TableContext, TableBody, isRowExpanded } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport { TableEditConfirmation } from './constants';\nimport { showIdWarnings } from './utils/utils';\n\nconst propTypes = _objectSpread({}, TableBody.propTypes, {\n  editConfig: PropTypes.shape({\n    editConfirmationType: PropTypes.oneOf(Object.values(TableEditConfirmation)),\n    onEditCellClicked: PropTypes.func,\n    onEditConfirmed: PropTypes.func,\n    onEditCanceled: PropTypes.func\n  }).isRequired,\n\n  /** Function that is fired when user clicks on a row if not editing.  */\n  onRowClick: PropTypes.func\n});\n\nconst defaultProps = _objectSpread({}, TableBody.defaultProps, {\n  editConfig: null,\n  onRowClick: () => undefined\n});\n\nconst resolveCascadeEditability = rows => {\n  const isRowExpandedIndexes = new Set(rows.map((row, idx) => isRowExpanded(row, rows) ? idx : null).filter(row => row !== null)); // flag parents and their children which are edited together\n\n  rows.filter((row, idx) => row.parent !== undefined && row.isEditing && isRowExpandedIndexes.has(idx) && row.isEditableTogetherWithParent && rows[row.parent].isEditing).forEach(row => {\n    rows[row.parent].isChildEditing = true;\n    row.isParentEditing = true;\n  });\n  const lastVisibleRow = rows.filter((row, idx) => !row.parent || isRowExpandedIndexes.has(idx)).pop(); // flag last parent row if there are only descendants under it\n\n  if (lastVisibleRow && lastVisibleRow.isParentEditing) {\n    let parentRow = lastVisibleRow;\n\n    while (parentRow.parent !== undefined && parentRow.isEditableTogetherWithParent) {\n      parentRow = rows[parentRow.parent];\n    }\n\n    parentRow.isLastVisibleParent = true;\n  }\n};\n\nconst onRow = (event, row, rowProps, computedData, {\n  onRowClick,\n  editConfig\n}) => {\n  const {\n    target\n  } = event;\n  const cell = target.closest('[data-key]');\n  const cellNumber = parseInt(cell && cell.getAttribute('data-key'), 10);\n  const hasCellNumber = !Number.isNaN(cellNumber);\n  let onEditCellClicked;\n\n  if (hasCellNumber && editConfig && typeof editConfig.onEditCellClicked === 'function') {\n    // resolve closest (e.g. for dropdowns) usable id of a clicked element inside a cell\n    const idElement = target.closest('[id]');\n    const elementId = idElement && cell.contains(idElement) ? idElement.getAttribute('id') || null : null;\n\n    if (!elementId) {\n      showIdWarnings(row, target);\n    }\n\n    onEditCellClicked = () => {\n      editConfig.onEditCellClicked(event, row, _objectSpread({}, rowProps, {\n        columnIndex: cellNumber,\n        elementId\n      }));\n    };\n  } // give priority to fire onChange/onBlur callbacks\n\n\n  setTimeout(() => {\n    if (!row.isEditing) {\n      onRowClick(event, row, rowProps, computedData);\n\n      if (onEditCellClicked) {\n        // edit cell after rerender\n        setTimeout(onEditCellClicked, 0);\n      }\n    } else if (onEditCellClicked) {\n      onEditCellClicked();\n    }\n  }, 0);\n};\n\nconst Body = (_ref) => {\n  let {\n    BodyComponent,\n    rows,\n    editConfig,\n    onRowClick\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"BodyComponent\", \"rows\", \"editConfig\", \"onRowClick\"]);\n\n  const isTableEditing = rows.some(row => row.isEditing);\n  const mappedRows = rows.map(row => _objectSpread({}, row, {\n    editConfig,\n    isTableEditing\n  }));\n  resolveCascadeEditability(mappedRows);\n  return React.createElement(BodyComponent, _extends({}, props, {\n    rows: mappedRows,\n    onRowClick: (event, row, rowProps, computedData) => onRow(event, row, rowProps, computedData, {\n      onRowClick,\n      editConfig\n    })\n  }));\n};\n\nBody.propTypes = {\n  BodyComponent: PropTypes.node.isRequired,\n  rows: PropTypes.array,\n  editConfig: PropTypes.any,\n  onRowClick: PropTypes.func\n};\nBody.defaultProps = {\n  rows: [],\n  editConfig: null,\n  onRowClick: () => undefined\n};\n\nconst editableTableBody = BodyComponent => {\n  const InlineEditBody = (_ref2) => {\n    let {\n      editConfig,\n      onRowClick\n    } = _ref2,\n        props = _objectWithoutProperties(_ref2, [\"editConfig\", \"onRowClick\"]);\n\n    return React.createElement(TableContext.Consumer, null, (_ref3) => {\n      let {\n        rows\n      } = _ref3,\n          consumedProps = _objectWithoutProperties(_ref3, [\"rows\"]);\n\n      return React.createElement(Body, _extends({}, consumedProps, {\n        rows: rows\n      }, props, {\n        editConfig: editConfig,\n        onRowClick: onRowClick,\n        BodyComponent: BodyComponent\n      }));\n    });\n  };\n\n  InlineEditBody.propTypes = propTypes;\n  InlineEditBody.defaultProps = defaultProps;\n  return InlineEditBody;\n};\n\nexport default editableTableBody;\n//# sourceMappingURL=editableTableBody.js.map","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { CloseIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\n\nconst CancelButton = props => React.createElement(Button, props, React.createElement(CloseIcon, null));\n\nCancelButton.propTypes = _objectSpread({}, Button.propTypes);\nCancelButton.defaultProps = _objectSpread({}, Button.defaultProps, {\n  variant: 'plain'\n});\nexport default CancelButton;\n//# sourceMappingURL=CancelButton.js.map","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { CheckIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\n\nconst ConfirmButton = props => React.createElement(Button, props, React.createElement(CheckIcon, null));\n\nConfirmButton.propTypes = _objectSpread({}, Button.propTypes);\nConfirmButton.defaultProps = _objectSpread({}, Button.defaultProps, {\n  variant: 'primary'\n});\nexport default ConfirmButton;\n//# sourceMappingURL=ConfirmButton.js.map","import { StyleSheet } from '@patternfly/react-styles';\nconst pfColorBlue50 = '#def3ff';\nconst pfColorBlue200 = '#7dc3e8';\nexport const inlineEditCss = StyleSheet.parse(`\n  tr.pf-c-table__editable-row {    \n    &:hover,\n    &.pf-m-editing {\n      background: ${pfColorBlue50} !important;\n      td {\n        border-bottom: 1px solid ${pfColorBlue200} !important;\n        border-top: 1px solid ${pfColorBlue200} !important;\n  \n        &:first-child {\n          border-left: 1px solid ${pfColorBlue200} !important;\n        }\n  \n        &:last-child {\n          border-right: 1px solid ${pfColorBlue200} !important;\n        }\n      }\n    }\n  \n    &.pf-m-table-editing-first-row {\n      border-top: 3px solid ${pfColorBlue200} !important;\n    }\n  \n    &.pf-m-table-editing-last-row {\n      border-bottom: 3px solid ${pfColorBlue200} !important;\n    }\n  \n    input {\n      display: block;\n      background: var(--pf-global--BackgroundColor--100);\n      border: 1px solid var(--pf-global--BorderColor);\n  \n      &:hover {\n        cursor: text;\n      }\n    }\n  }\n  \n  .pf-c-table__inline-edit-buttons {\n    position: fixed;\n    z-index: 1000;\n    padding: 4px;\n    margin: 0;\n    background: ${pfColorBlue50};\n    border: 1px solid ${pfColorBlue200};\n  \n    &.pf-m-top {\n      border-bottom: 0;\n    }\n  \n    &.pf-m-bottom {\n      border-top: 0;\n    }\n  \n    &.pf-m-bold {\n      border-width: 3px;\n    }\n  \n    button {\n      margin-left: 4px;\n  \n      &:first-child {\n        margin-left: 0;\n      }\n    }\n  }\n\n`);\nexport const inlineEditStyles = {\n  tableEditableRow: 'pf-c-table__editable-row',\n  tableInlineEditButtons: 'pf-c-table__inline-edit-buttons',\n  modifiers: {\n    tableEditingFirstRow: 'pf-m-table-editing-first-row ',\n    tableEditingLastRow: 'pf-m-table-editing-last-row',\n    editing: 'pf-m-editing',\n    top: 'pf-m-top',\n    bottom: 'pf-m-bottom',\n    bold: 'pf-m-bold'\n  }\n};\n//# sourceMappingURL=inline-edit-css.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@patternfly/react-styles';\nimport { CancelButton } from '../CancelButton';\nimport { ConfirmButton } from '../ConfirmButton';\nimport { inlineEditCss, inlineEditStyles as styles } from './css/inline-edit-css';\ninlineEditCss.inject();\n\nconst buttonsTopPosition = (window, rowDimensions, bold) => {\n  const boldShift = bold ? -1 : 0;\n  return {\n    bottom: window.height - rowDimensions.top - 1 + boldShift,\n    right: window.width - rowDimensions.right + 10\n  };\n};\n\nconst buttonsBottomPosition = (window, rowDimensions, bold) => {\n  const boldShift = bold ? -1 : 0;\n  return {\n    top: rowDimensions.bottom - 1 + boldShift,\n    right: window.width - rowDimensions.right + 10\n  };\n};\n\nconst ConfirmButtons = ({\n  messages: {\n    confirmButtonLabel,\n    cancelButtonLabel\n  },\n  onConfirm,\n  onCancel,\n  environment,\n  buttonsOnTop,\n  boldBorder\n}) => {\n  if (environment == null) {\n    return null;\n  }\n\n  const {\n    window,\n    row\n  } = environment;\n  const positionStyle = buttonsOnTop ? buttonsTopPosition(window, row, boldBorder) : buttonsBottomPosition(window, row, boldBorder);\n  const className = css(styles.tableInlineEditButtons, buttonsOnTop ? styles.modifiers.top : styles.modifiers.bottom, boldBorder && styles.modifiers.bold);\n  return React.createElement(\"div\", {\n    style: positionStyle,\n    className: className,\n    key: \"confirmButtons\"\n  }, React.createElement(ConfirmButton, {\n    key: \"confirm\",\n    \"aria-label\": confirmButtonLabel,\n    onMouseUp: onConfirm\n  }), React.createElement(CancelButton, {\n    key: \"cancel\",\n    \"aria-label\": cancelButtonLabel,\n    onMouseUp: onCancel\n  }));\n};\n\nConfirmButtons.defaultProps = {\n  onConfirm: () => undefined,\n  onCancel: () => undefined,\n  buttonsOnTop: false,\n  boldBorder: false,\n  environment: undefined,\n  messages: {\n    confirmButtonLabel: 'Save',\n    cancelButtonLabel: 'Cancel'\n  }\n};\nConfirmButtons.propTypes = {\n  /** Confirm edit callback */\n  onConfirm: PropTypes.func,\n\n  /** Cancel edit callback */\n  onCancel: PropTypes.func,\n\n  /** Inject confirm buttons positions */\n  environment: PropTypes.shape({\n    window: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    row: PropTypes.shape({\n      top: PropTypes.number,\n      bottom: PropTypes.number,\n      left: PropTypes.number,\n      right: PropTypes.number\n    })\n  }),\n  buttonsOnTop: PropTypes.bool,\n  boldBorder: PropTypes.bool,\n  messages: PropTypes.shape({\n    confirmButtonLabel: PropTypes.string,\n    cancelButtonLabel: PropTypes.string\n  })\n};\nexport default ConfirmButtons;\n//# sourceMappingURL=ConfirmButtons.js.map","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { css } from '@patternfly/react-styles';\nimport { RowWrapper as ReactTableRowWrapper } from '@patternfly/react-table';\nimport { combineFunctions, shallowLeftSideEquals, getBoundingClientRect, getClientWindowDimensions } from './utils/utils';\nimport ConfirmButtons from './ConfirmButtons';\nimport { TableEditConfirmation } from './constants';\nimport { inlineEditCss, inlineEditStyles as styles } from './css/inline-edit-css';\ninlineEditCss.inject();\n\nconst propTypes = _objectSpread({}, ReactTableRowWrapper.propTypes, {\n  trRef: PropTypes.func,\n  className: PropTypes.string,\n  onScroll: PropTypes.func,\n  onResize: PropTypes.func,\n  row: PropTypes.shape({\n    isOpen: PropTypes.bool,\n    isExpanded: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    isTableEditing: PropTypes.bool,\n    isFirstVisible: PropTypes.bool,\n    isLastVisible: PropTypes.bool,\n    isChildEditing: PropTypes.bool,\n    isParentEditing: PropTypes.bool,\n    isLastVisibleParent: PropTypes.bool,\n    editConfig: PropTypes.object\n  }),\n  rowProps: PropTypes.object\n});\n\nconst defaultProps = _objectSpread({}, ReactTableRowWrapper.defaultProps, {\n  trRef: undefined,\n  className: '',\n  onScroll: undefined,\n  onResize: undefined,\n  row: {\n    isOpen: undefined,\n    isExpanded: undefined,\n    isEditing: undefined,\n    isTableEditing: undefined,\n    isFirstVisible: undefined,\n    isLastVisible: undefined,\n    isChildEditing: undefined,\n    isParentEditing: undefined,\n    isLastVisibleParent: undefined,\n    editConfig: undefined\n  },\n  rowProps: null\n}); // TableEditConfirmation constants like TABLE_TOP cannot be referenced but must be hardcoded due to this issue:\n// https://github.com/reactjs/react-docgen/issues/317#issue-393678795\n\n\nconst tableConfirmationMapper = {\n  TABLE_TOP: {\n    hasConfirmationButtons: ({\n      isTableEditing,\n      isFirstVisible\n    }) => isTableEditing && isFirstVisible,\n    isTableConfirmation: () => true,\n    areButtonsOnTop: () => true,\n    hasBoldBorder: () => true,\n    getEditStyles: ({\n      isTableEditing,\n      isFirstVisible\n    }) => css(styles.tableEditableRow, isTableEditing && isFirstVisible && styles.modifiers.tableEditingFirstRow)\n  },\n  TABLE_BOTTOM: {\n    hasConfirmationButtons: ({\n      isTableEditing,\n      isLastVisible\n    }) => isTableEditing && isLastVisible,\n    isTableConfirmation: () => true,\n    areButtonsOnTop: () => false,\n    hasBoldBorder: () => true,\n    getEditStyles: ({\n      isTableEditing,\n      isLastVisible\n    }) => css(styles.tableEditableRow, isTableEditing && isLastVisible && styles.modifiers.tableEditingLastRow)\n  },\n  ROW: {\n    hasConfirmationButtons: ({\n      isEditing,\n      isParentEditing,\n      isLastVisibleParent,\n      isChildEditing,\n      isLastVisible\n    }) => isEditing && !(isChildEditing && isParentEditing) && // buttons can't appear in the middle\n    !(isParentEditing && isLastVisible) && // parent will show the buttons on top\n    !(isChildEditing && !isLastVisibleParent),\n    // child will show the buttons on bottom\n    isTableConfirmation: () => false,\n    areButtonsOnTop: ({\n      isLastVisible,\n      isLastVisibleParent\n    }) => isLastVisible || isLastVisibleParent,\n    hasBoldBorder: () => false,\n    getEditStyles: ({\n      isEditing\n    }) => css(styles.tableEditableRow, isEditing && styles.modifiers.editing)\n  },\n  NO_CONFIRM_ROW: {\n    hasConfirmationButtons: () => false,\n    isTableConfirmation: () => false,\n    areButtonsOnTop: () => false,\n    hasBoldBorder: () => false,\n    getEditStyles: ({\n      isEditing\n    }) => css(styles.tableEditableRow, isEditing && styles.modifiers.editing)\n  },\n  NONE: {\n    hasConfirmationButtons: () => false,\n    isTableConfirmation: () => false,\n    areButtonsOnTop: () => false,\n    hasBoldBorder: () => false,\n    getEditStyles: () => css(styles.tableEditableRow)\n  }\n};\n\nconst getTableConfirmation = ({\n  editConfig\n}) => tableConfirmationMapper[editConfig && editConfig.editConfirmationType] || tableConfirmationMapper[TableEditConfirmation.NONE];\n\nconst editableRowWrapper = RowWrapperComponent => {\n  class RowWrapper extends React.Component {\n    constructor(props) {\n      super(props);\n\n      _defineProperty(this, \"setStateWith2dEquals\", newState => {\n        this.setState(oldState => Object.keys(newState).find(key => !shallowLeftSideEquals(newState[key], oldState[key])) ? newState : null);\n      });\n\n      _defineProperty(this, \"saveRowDimensions\", element => {\n        if (element) {\n          this.element = element;\n          this.tableElem = element.closest('table');\n        }\n\n        this.updateRowDimensions();\n      });\n\n      _defineProperty(this, \"updateRowDimensions\", () => {\n        if (this.element) {\n          this.setStateWith2dEquals({\n            rowDimensions: getBoundingClientRect(this.element)\n          });\n        }\n      });\n\n      _defineProperty(this, \"handleScroll\", event => {\n        this.updateRowDimensions();\n      });\n\n      _defineProperty(this, \"handleResize\", event => {\n        this.fetchClientDimensions();\n        this.updateRowDimensions();\n      });\n\n      this.state = _objectSpread({\n        rowDimensions: {},\n        window: {}\n      }, RowWrapper.getDerivedStateFromProps(props));\n    }\n\n    componentDidMount() {\n      if (this.state.hasConfirmationButtons) {\n        this.fetchClientDimensions();\n      }\n    }\n\n    fetchClientDimensions() {\n      this.setStateWith2dEquals({\n        window: getClientWindowDimensions()\n      });\n    }\n\n    getConfirmationButtons() {\n      const _this$props = this.props,\n            {\n        row,\n        rowProps\n      } = _this$props,\n            props = _objectWithoutProperties(_this$props, [\"row\", \"rowProps\"]);\n\n      const {\n        isLastVisible,\n        isParentEditing,\n        isLastVisibleParent,\n        editConfig\n      } = row;\n\n      if (!editConfig) {\n        return null;\n      }\n\n      const {\n        onEditConfirmed,\n        onEditCanceled\n      } = editConfig;\n      const tableConfirmation = getTableConfirmation(row);\n      let confirmButtons;\n\n      if (this.element && this.state.rowDimensions) {\n        const options = tableConfirmation.isTableConfirmation() ? {} : rowProps;\n        const actionObject = tableConfirmation.isTableConfirmation() ? null : row;\n        confirmButtons = createPortal(React.createElement(ConfirmButtons, _extends({}, props, {\n          onConfirm: event => onEditConfirmed(event, actionObject, options),\n          onCancel: event => onEditCanceled(event, actionObject, options),\n          buttonsOnTop: tableConfirmation.areButtonsOnTop({\n            isLastVisible,\n            isParentEditing,\n            isLastVisibleParent\n          }),\n          boldBorder: tableConfirmation.hasBoldBorder(),\n          environment: {\n            window: this.state.window,\n            row: getBoundingClientRect(this.element)\n          }\n        })), this.tableElem ? this.tableElem.parentNode : document.body);\n      }\n\n      return confirmButtons;\n    }\n\n    render() {\n      const {\n        trRef,\n        className,\n        onScroll,\n        onResize,\n        row: {\n          isFirstVisible,\n          isLastVisible,\n          isEditing,\n          isTableEditing,\n          editConfig\n        }\n      } = this.props;\n      const {\n        hasConfirmationButtons\n      } = this.state;\n      const trClassName = getTableConfirmation({\n        editConfig\n      }).getEditStyles({\n        isEditing,\n        isTableEditing,\n        isFirstVisible,\n        isLastVisible\n      });\n      return React.createElement(React.Fragment, null, React.createElement(RowWrapperComponent, _extends({}, this.props, {\n        trRef: combineFunctions(this.saveRowDimensions, trRef),\n        className: classNames(trClassName, className),\n        onScroll: combineFunctions(hasConfirmationButtons && this.handleScroll, onScroll),\n        onResize: combineFunctions(hasConfirmationButtons && this.handleResize, onResize)\n      })), hasConfirmationButtons && this.getConfirmationButtons());\n    }\n\n  }\n\n  _defineProperty(RowWrapper, \"getDerivedStateFromProps\", (props, state) => ({\n    hasConfirmationButtons: getTableConfirmation(props.row).hasConfirmationButtons(props.row)\n  }));\n\n  RowWrapper.propTypes = propTypes;\n  RowWrapper.defaultProps = defaultProps;\n  return RowWrapper;\n};\n\nexport default editableRowWrapper;\n//# sourceMappingURL=editableRowWrapper.js.map","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, InputGroup, TextInput } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, RowWrapper, ExpandableRowContent } from '@patternfly/react-table';\nimport {\n    editableTableBody,\n    editableRowWrapper,\n    inlineEditFormatterFactory,\n    TableEditConfirmation,\n    TableTextInput\n} from '@patternfly/react-inline-edit-extension';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nimport { baselinesPageActions } from '../redux';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport api from '../../../api.js';\n\nclass EditBaseline extends Component {\n    constructor(props) {\n        super(props);\n        this.finishBaselineEdit = this.finishBaselineEdit.bind(this);\n\n        this.makeId = ({ column, rowIndex, columnIndex, name }) =>\n            `${column.property}-${rowIndex}-${columnIndex}${name ? `-${name}` : ''}`;\n\n        const childEditRenderer = (value, { column, rowIndex, rowData, columnIndex, activeEditId }) => (\n            <ExpandableRowContent>\n                { rowData.data.modules.map((module, idx) => {\n                    const inlineStyle = {\n                        marginLeft: idx && '1em',\n                        display: 'inline-block',\n                        width: '48%'\n                    };\n\n                    const id = this.makeId({ rowIndex, columnIndex, column, name: `module-${idx}` });\n\n                    return (\n                        <TableTextInput\n                            id={ id }\n                            key={ id }\n                            defaultValue={ module }\n                            style={ inlineStyle }\n                            onBlur={ newValue =>\n                                this.onChange(newValue, {\n                                    rowIndex,\n                                    moduleIndex: idx\n                                })\n                            }\n                            autoFocus={ activeEditId === id }\n                        />\n                    );\n                }) }\n            </ExpandableRowContent>\n        );\n\n        const parentEditRenderer = (value, { column, rowIndex, columnIndex, activeEditId }) => {\n            const id = this.makeId({ rowIndex, columnIndex, column, name: 'parent-repo' });\n            return (\n                <TableTextInput\n                    id={ id }\n                    key={ id }\n                    defaultValue={ value }\n                    onBlur={ newValue =>\n                        this.onChange(newValue, {\n                            rowIndex,\n                            columnIndex\n                        })\n                    }\n                    autoFocus={ activeEditId === id }\n                />\n            );\n        };\n\n        const textInputFormatter = inlineEditFormatterFactory({\n            renderValue: (value, { rowData }) =>\n                rowData.hasOwnProperty('parent') ? (\n                    <ExpandableRowContent>{ rowData.data.modules.filter(a => a).join(', ') }</ExpandableRowContent>\n                ) : (\n                    value\n                ),\n            renderEdit: (value, { column, columnIndex, rowIndex, rowData }, { activeEditId }) => {\n                const renderer = rowData.hasOwnProperty('parent') ? childEditRenderer : parentEditRenderer;\n                return renderer(value, { rowData, column, rowIndex, columnIndex, activeEditId });\n            }\n        });\n\n        let rows = [ ...new Array(5) ].map(() =>\n            [ ...new Array(2) ].map((index) =>\n                <Skeleton key={ index } size={ SkeletonSize.md } />\n            )\n        );\n\n        let displayName;\n\n        if (this.props.baselineData) {\n            displayName = this.props.baselineData.display_name;\n        } else {\n            displayName = '';\n        }\n\n        this.state = {\n            columns: [ 'Fact', 'Value' ],\n            rows,\n            editedRowsBackup: null,\n            activeEditId: null,\n            baselineName: displayName\n        };\n\n        this.changeBaselineName = value => {\n            this.setState({ value });\n        };\n\n        this.submitBaselineName = (/*baselineName*/) => {\n        };\n\n        this.onChange = (value, { rowIndex, columnIndex, moduleIndex }) => {\n            this.setState(({ rows }) => {\n                const { baselineData } = this.props;\n                rows = [ ...rows ];\n                const row = rows[rowIndex];\n                if (moduleIndex !== null && moduleIndex !== undefined) {\n                    row.data.modules[moduleIndex] = value;\n                } else {\n                    const shiftedColumnIndex = columnIndex - 1; // to take Expandable Column into account;\n                    row.cells[shiftedColumnIndex] = value;\n                }\n\n                let apiBody = this.buildApiBody(rows, rowIndex);\n                api.patchBaselineData(baselineData.id, apiBody);\n\n                return { rows, activeEditId: null };\n            });\n        };\n\n        this.buildApiBody = (rows, rowIndex) => {\n            let row = rows[rowIndex];\n            let apiBody = {};\n            let baselineFactsArray = [];\n\n            /*eslint-disable camelcase*/\n            if (row.parent || row.parent === 0) {\n                let parentRow = rows[row.parent];\n                let childRows = rows.filter(function(row) {\n                    return row.parent === rows[rowIndex].parent;\n                })\n                .map(function(row) {\n                    return { name: row.data.modules[0], value: row.data.modules[1] };\n                });\n\n                baselineFactsArray.push({\n                    name: parentRow.cells[0],\n                    values: childRows\n                });\n\n                apiBody.baseline_facts = baselineFactsArray;\n            } else {\n                baselineFactsArray.push({\n                    name: row.cells[0], value: row.cells[1]\n                });\n\n                apiBody.baseline_facts = baselineFactsArray;\n            }\n            /*eslint-enable camelcase*/\n\n            return apiBody;\n        };\n\n        this.onEditCellClicked = (event, clickedRow, { rowIndex, columnIndex, elementId }) => {\n            const EXPANDABLE_COL = 0;\n            const ACTIONS_COL = 4;\n\n            if (elementId !== this.state.activeEditId && clickedRow.isEditing && columnIndex !== ACTIONS_COL) {\n                this.setState(({ rows }) => ({\n                    activeEditId: elementId,\n                    rows: rows.map((row, id) => {\n                        if (id === rowIndex && columnIndex === EXPANDABLE_COL && row.hasOwnProperty('isOpen')) {\n                            row.isOpen = !row.isOpen;\n                        }\n\n                        return row;\n                    })\n                }));\n            }\n        };\n\n        this.getParentId = (rowId, rows) => (rows[rowId].parent === undefined ? rowId : rows[rowId].parent);\n        this.getChildId = (rowId, rows) =>\n            rows[rowId].parent === undefined\n                ? rows.map((row, idx) => (row.parent === rowId ? idx : null)).find(idx => idx !== null)\n                : rowId;\n\n        this.onEditActionClick = (event, rowId) => {\n            this.setState(({ rows, editedRowBackup }) => {\n                if (!editedRowBackup) {\n                    let backup;\n                    if (!rows[rowId].parent) {\n                        backup = {\n                            [rowId]: rows[rowId]\n                        };\n                    } else {\n                        const childId = this.getChildId(rowId, rows);\n                        const parentId = this.getParentId(rowId, rows);\n\n                        backup = {\n                            [parentId]: rows[parentId],\n                            [childId]: rows[childId]\n                        };\n                    }\n\n                    return {\n                        editedRowsBackup: JSON.parse(JSON.stringify(backup)),\n                        rows: rows.map((row, id) => {\n                            row.isEditing = !!backup[id];\n                            return row;\n                        })\n                    };\n                }\n\n                return undefined;\n            });\n        };\n\n        this.onEditConfirmed = () => {\n            this.setState(({ rows, editedRowsBackup }) => {\n                rows = [ ...rows ];\n                Object.keys(editedRowsBackup).forEach(key => {\n                    rows[key].isEditing = false;\n                });\n\n                return {\n                    rows,\n                    editedRowsBackup: null,\n                    activeEditId: null\n                };\n            });\n        };\n\n        this.onEditCanceled = () => {\n            this.setState(({ rows, editedRowsBackup }) => {\n                rows = [ ...rows ];\n                Object.keys(editedRowsBackup).forEach(key => {\n                    rows[key] = editedRowsBackup[key];\n                });\n\n                return {\n                    rows,\n                    editedRowsBackup: null,\n                    activeEditId: null\n                };\n            });\n        };\n\n        this.onCollapse = (event, rowKey, isOpen) => {\n            const { rows } = this.state;\n            rows[rowKey].isOpen = isOpen;\n            this.setState({\n                rows\n            });\n        };\n\n        this.actionResolver = rowData =>\n            rowData.isTableEditing\n                ? null\n                : rowData.cells[1] === ''\n                    ? [\n                        {\n                            title: 'Edit',\n                            onClick: this.onEditActionClick\n                        },\n                        {\n                            title: 'Add fact'\n                        }\n                    ]\n                    : [\n                        {\n                            title: 'Edit',\n                            onClick: this.onEditActionClick\n                        }\n                    ];\n\n        this.renderColumns = () => {\n            let newColumns = [\n                {\n                    title: 'Fact',\n                    cellFormatters: [ textInputFormatter ]\n                },\n                {\n                    title: 'Value',\n                    cellFormatters: [ textInputFormatter ]\n                }\n            ];\n\n            this.setState({\n                columns: newColumns\n            });\n        };\n\n        this.renderRows = () => {\n            const { baselineData } = this.props;\n            let newRows = [];\n            let counter = 0;\n\n            if (!baselineData) {\n                newRows = [];\n            } else {\n                baselineData.baseline_facts.forEach(function(fact) {\n                    let row = [];\n                    let parentCounter = counter;\n                    row.push(fact.name);\n                    if (fact.values) {\n                        row.push('');\n                        newRows.push({\n                            cells: row, isOpen: false\n                        });\n\n                        fact.values.forEach(function(fact) {\n                            let subFacts = [];\n                            counter++;\n                            subFacts.push(fact.name);\n                            subFacts.push(fact.value);\n\n                            newRows.push({\n                                cells: [ null ], data: { modules: subFacts }, parent: parentCounter\n                            });\n                        });\n\n                        counter++;\n                    } else {\n                        row.push(fact.value);\n\n                        newRows.push({\n                            cells: row, isOpen: false\n                        });\n                        counter++;\n                    }\n                });\n            }\n\n            this.setState({\n                rows: newRows\n            });\n        };\n    }\n\n    async componentWillMount() {\n        const { baselineData, baselineDataLoading } = this.props;\n\n        if (baselineData && !baselineDataLoading) {\n            this.renderRows();\n            this.renderColumns();\n        }\n    }\n\n    finishBaselineEdit() {\n        const { clearBaselineData } = this.props;\n\n        clearBaselineData();\n    }\n\n    render() {\n        const { activeEditId, columns, rows, baselineName } = this.state;\n        const { baselineDataLoading } = this.props;\n        const editConfig = {\n            activeEditId,\n            onEditCellClicked: this.onEditCellClicked,\n            editConfirmationType: TableEditConfirmation.ROW,\n            onEditConfirmed: this.onEditConfirmed,\n            onEditCanceled: this.onEditCanceled\n        };\n        const ComposedBody = editableTableBody(TableBody);\n        const ComposedRowWrapper = editableRowWrapper(RowWrapper);\n\n        return (\n            <React.Fragment>\n                <InputGroup>\n                    <TextInput value={ baselineName } type=\"text\" onChange={ this.changeBaselineName } aria-label=\"baseline name\"/>\n                    <Button onClick={ this.submitBaselineName }>Submit</Button>\n                </InputGroup>\n                { baselineDataLoading === false\n                    ? <Table\n                        cells={ columns }\n                        rows={ rows }\n                        rowWrapper={ ComposedRowWrapper }\n                        onCollapse={ this.onCollapse }\n                        actionResolver={ this.actionResolver }\n                    >\n                        <TableHeader />\n                        <ComposedBody editConfig={ editConfig } />\n                    </Table>\n                    : <Table\n                        cells={ columns }\n                        rows={ rows }\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table>\n                }\n                <Button\n                    className=\"button-margin\"\n                    style={ { float: 'right' } }\n                    variant='primary'\n                    onClick={ this.finishBaselineEdit }>\n                    Finish\n                </Button>\n            </React.Fragment>\n        );\n    }\n}\n\nEditBaseline.propTypes = {\n    toggleCreateBaseline: PropTypes.func,\n    clearBaselineData: PropTypes.func,\n    baselineData: PropTypes.object,\n    baselineDataLoading: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselineData: state.baselinesTableState.baselineData,\n        baselineDataLoading: state.baselinesTableState.baselineDataLoading\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleCreateBaseline: () => dispatch(baselinesPageActions.toggleCreateBaseline()),\n        clearBaselineData: () => dispatch(baselinesTableActions.clearBaselineData())\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBaseline);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\n\nimport BaselinesTable from '../BaselinesTable/BaselinesTable';\nimport CreateBaselineButton from './CreateBaselineButton/CreateBaselineButton';\nimport CreateBaseline from './CreateBaseline/CreateBaseline';\nimport EditBaseline from './EditBaseline/EditBaseline';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nclass BaselinesPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    render() {\n        const { fetchBaselines, creatingNewBaseline, baselineData } = this.props;\n\n        fetchBaselines();\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='Baselines'/>\n                </PageHeader>\n                <Main>\n                    <Card className='pf-t-light pf-m-opaque-100'>\n                        { creatingNewBaseline\n                            ? <CardBody>\n                                <div>\n                                    <CreateBaseline />\n                                </div>\n                            </CardBody>\n                            : null\n                        }\n                        { baselineData ?\n                            <CardBody>\n                                <div>\n                                    <EditBaseline />\n                                </div>\n                            </CardBody>\n                            : null\n                        }\n                        { !creatingNewBaseline && !baselineData\n                            ? <CardBody>\n                                <Toolbar className=\"drift-toolbar\">\n                                    <ToolbarGroup>\n                                        <ToolbarItem>\n                                            <CreateBaselineButton />\n                                        </ToolbarItem>\n                                    </ToolbarGroup>\n                                </Toolbar>\n                                <div>\n                                    <BaselinesTable />\n                                </div>\n                            </CardBody>\n                            : null\n                        }\n                    </Card>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nBaselinesPage.propTypes = {\n    fetchBaselines: PropTypes.func,\n    creatingNewBaseline: PropTypes.bool,\n    baselineData: PropTypes.obj\n};\n\nfunction mapStateToProps(state) {\n    return {\n        creatingNewBaseline: state.baselinesPageState.creatingNewBaseline,\n        baselineData: state.baselinesTableState.baselineData\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchBaselines: () => dispatch(baselinesTableActions.fetchBaselines())\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BaselinesPage);\n"],"sourceRoot":""}