{"version":3,"sources":["webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./node_modules/react-cookie/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///./src/SmartComponents/ErrorAlert/redux/actions.js","webpack:///./node_modules/react-cookie/es6/withCookies.js","webpack:///./src/SmartComponents/AddSystemModal/AddSystemModal.js","webpack:///./src/SmartComponents/DriftPage/AddSystemButton/AddSystemButton.js","webpack:///./src/SmartComponents/StateIcon/StateIcon.js","webpack:///./src/Utilities/SetHistory.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/redux/actions.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/HistoricalProfilesCheckbox/HistoricalProfilesCheckbox.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/FetchHistoricalProfilesButton/FetchHistoricalProfilesButton.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/HistoricalProfilesDropdown.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/DriftTable.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/FilterDropDown.js","webpack:///./src/SmartComponents/DriftPage/SearchBar/SearchBar.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/ActionKebab.js","webpack:///./src/SmartComponents/ErrorAlert/ErrorAlert.js","webpack:///./src/SmartComponents/DriftPage/Pagination/Pagination.js","webpack:///./src/SmartComponents/DriftPage/ExportCSVButton/ExportCSVButton.js","webpack:///./src/SmartComponents/DriftPage/DriftFilterChips/DriftFilterChips.js","webpack:///./src/SmartComponents/DriftPage/DriftPage.js"],"names":["strictUriEncode","objectAssign","encode","value","opts","strict","encodeURIComponent","exports","extract","str","split","parse","formatter","result","arrayFormat","key","accumulator","exec","replace","undefined","concat","parserForArrayFormat","ret","Object","create","trim","forEach","param","parts","shift","val","length","join","decodeURIComponent","keys","sort","reduce","Boolean","Array","isArray","keysSorter","input","a","b","Number","map","stringify","obj","index","encoderForArrayFormat","slice","val2","push","filter","x","module","c","charCodeAt","toString","toUpperCase","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","prototype","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","i","descriptor","e","extendStatics","toggleErrorAlert","types","OPEN_ERROR_ALERT","__extends","d","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","__assign","assign","t","s","n","call","apply","__rest","indexOf","propertyIsEnumerable","hoistStatics","AddSystemModal","props","onSelect","event","isSelected","rowId","baselineTableData","selectBaseline","item","confirmModal","bind","cancelSelection","changeActiveTab","state","columns","title","transforms","sortable","window","insights","chrome","auth","getUser","entities","selectedBaselineIds","toggleModal","selectedHSPIds","selectedSystemIds","ids","systems","system","id","baselines","baseline","tabIndex","selectActiveTab","activeTab","addSystemModalOpened","loading","Fragment","Modal","isOpen","onClose","width","isFooterLeftAligned","actions","Button","variant","onClick","Tabs","activeKey","Tab","eventKey","SystemsTable","BaselinesTable","tableId","hasMultiSelect","tableData","Component","cookies","instanceOf","Cookies","isRequired","showModal","PropTypes","bool","number","func","object","array","withCookies","WrappedComponent","CookieWrapper","ForwardedComponent","connect","addSystemModalState","compareState","baselinesTableState","checkboxTable","historicProfilesState","dispatch","addSystemModalActions","toggleAddSystemModal","newActiveTab","baselinesTableActions","_super","_this","onChange","forceUpdate","listen","addChangeListener","unlisten","removeChangeListener","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","_a","forwardedRef","restProps","allCookies","getAll","ref","AddSystemButton","className","isTable","StateIcon","factState","color","height","icon","string","setHistory","history","systemIds","baselineIds","hspIds","search","queryString","system_ids","baseline_ids","hsp_ids","selectHistoricProfiles","historicProfileIds","SELECT_HISTORIC_PROFILES","payload","setSelectedHistoricProfiles","SET_SELECTED_HISTORIC_PROFILES","HistoricalProfilesCheckbox","handleChange","checked","profile","setState","some","Checkbox","label","moment","utc","created","format","isChecked","aria-label","historicProfilesActions","FetchHistoricalProfilesButton","fetchHistoricalComparison","fetchCompare","style","float","location","withRouter","HistoricalProfilesDropdown","createDropdownArray","historicalData","dropdownItems","profiles","DropdownItem","renderLoadingRows","onToggle","fetchData","systemId","api","fetchHistoricalData","rows","size","SkeletonSize","sm","Dropdown","toggle","DropdownToggle","iconComponent","isPlain","DriftTable","removeSystem","HSPIds","historicalProfiles","system_id","masterList","setSystemIds","setBaselineIds","setHSPIds","formatDate","fullHistoricalSystemList","hsp","dateString","setSelectedBaselines","facts","fact","renderRow","rowData","md","row","find","sys","comparisons","expandedRows","includes","renderExpandableRowButton","comparison","renderRowChild","findSystem","typeIcon","header-id","display_name","system_profile_exists","Tooltip","position","content","last_updated","updated","isBeta","sortType","ASC","toggleSort","DESC","toggleFactSort","toggleStateSort","stateSort","renderSortButton","factSort","renderSystemHeaders","factName","expandRow","EmptyState","EmptyStateIcon","PlusCircleIcon","Title","EmptyStateBody","compareData","renderHeaderRow","renderRows","fullCompareData","filteredCompareData","formatEntities","renderTable","renderEmptyState","compareActions","HPIds","toggleFilterDropDown","OPEN_FILTER_DROPDOWN","FilterDropDown","createDropdownItem","toggleDropDown","stateFilter","display","selected","addStateFilter","stateFilters","dropdownItem","selectedViewsArray","selectedViews","createSelectedViewsString","filterDropdownOpened","filterDropdownActions","SearchBar","updateFactFilter","setFactFilter","changeFactFilter","factFilter","TextInput","placeholder","filterByFact","toggleKebab","TOGGLE_KEBAB","ActionKebab","removeSystemsSelect","removeSystems","clearSelectedBaselines","KebabToggle","kebabOpened","clearState","actionKebabActions","ErrorAlert","revertCompareData","previousStateSystems","errorAlertOpened","Alert","action","AlertActionCloseButton","error","status","detail","errorAlertActions","perPageOptions","TablePagination","onSetPage","onPerPageSelect","page","pagination","perPage","updatePagination","totalFacts","Pagination","itemCount","dropDirection","DropdownDirection","down","isCompact","ExportCSVButton","exportToCSV","DriftFilterChips","setStateChips","stateChips","removeChip","chip","chipGroup","category","chips","newFactFilter","newChipGroup","filteredChips","chipKeyCount","ChipGroup","withToolbar","currentGroup","ChipGroupToolbarItem","categoryName","Chip","DriftPage","Card","CardBody","Toolbar","ToolbarGroup","ToolbarItem"],"mappings":"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","file":"js/4-0ffe7db4538c36fb2827.js","sourcesContent":["'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tformatter(decodeURIComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n};\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n","'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import types from './types';\n\nfunction toggleErrorAlert() {\n    return {\n        type: types.OPEN_ERROR_ALERT\n    };\n}\n\nexport default {\n    toggleErrorAlert\n};\n","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport * as React from 'react';\r\nimport { Consumer } from './CookiesContext';\r\n// Only way to make function modules work with both TypeScript and Rollup\r\nvar hoistStatics = require('hoist-non-react-statics');\r\nexport default function withCookies(WrappedComponent) {\r\n    // @ts-ignore\r\n    var name = WrappedComponent.displayName || WrappedComponent.name;\r\n    var CookieWrapper = /** @class */ (function (_super) {\r\n        __extends(CookieWrapper, _super);\r\n        function CookieWrapper() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.onChange = function () {\r\n                // Make sure to update children with new values\r\n                _this.forceUpdate();\r\n            };\r\n            return _this;\r\n        }\r\n        CookieWrapper.prototype.listen = function () {\r\n            this.props.cookies.addChangeListener(this.onChange);\r\n        };\r\n        CookieWrapper.prototype.unlisten = function (cookies) {\r\n            (cookies || this.props.cookies).removeChangeListener(this.onChange);\r\n        };\r\n        CookieWrapper.prototype.componentDidMount = function () {\r\n            this.listen();\r\n        };\r\n        CookieWrapper.prototype.componentDidUpdate = function (prevProps) {\r\n            if (prevProps.cookies !== this.props.cookies) {\r\n                this.unlisten(prevProps.cookies);\r\n                this.listen();\r\n            }\r\n        };\r\n        CookieWrapper.prototype.componentWillUnmount = function () {\r\n            this.unlisten();\r\n        };\r\n        CookieWrapper.prototype.render = function () {\r\n            var _a = this.props, forwardedRef = _a.forwardedRef, cookies = _a.cookies, restProps = __rest(_a, [\"forwardedRef\", \"cookies\"]);\r\n            var allCookies = cookies.getAll();\r\n            return (React.createElement(WrappedComponent, __assign({}, restProps, { ref: forwardedRef, cookies: cookies, allCookies: allCookies })));\r\n        };\r\n        CookieWrapper.displayName = \"withCookies(\" + name + \")\";\r\n        CookieWrapper.WrappedComponent = WrappedComponent;\r\n        return CookieWrapper;\r\n    }(React.Component));\r\n    var ForwardedComponent = React.forwardRef(function (props, ref) {\r\n        return (React.createElement(Consumer, null, function (cookies) { return (React.createElement(CookieWrapper, __assign({ cookies: cookies }, props, { forwardedRef: ref }))); }));\r\n    });\r\n    ForwardedComponent.displayName = CookieWrapper.displayName;\r\n    ForwardedComponent.WrappedComponent = CookieWrapper.WrappedComponent;\r\n    return hoistStatics(ForwardedComponent, WrappedComponent);\r\n}\r\n","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Tab, Tabs } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { sortable } from '@patternfly/react-table';\n\nimport SystemsTable from '../SystemsTable/SystemsTable';\nimport BaselinesTable from '../BaselinesTable/BaselinesTable';\nimport { addSystemModalActions } from './redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nclass AddSystemModal extends Component {\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n        this.cancelSelection = this.cancelSelection.bind(this);\n        this.changeActiveTab = this.changeActiveTab.bind(this);\n\n        this.state = {\n            columns: [\n                { title: 'Name', transforms: [ sortable ]},\n                { title: 'Last updated', transforms: [ sortable ]}\n            ]\n        };\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    onSelect = (event, isSelected, rowId) => {\n        const { baselineTableData, selectBaseline } = this.props;\n        let ids;\n\n        if (rowId === -1) {\n            ids = baselineTableData.map(function(item) {\n                return item[0];\n            });\n        } else {\n            ids = [ baselineTableData[rowId][0] ];\n        }\n\n        selectBaseline(ids, isSelected, 'CHECKBOX');\n    }\n\n    confirmModal() {\n        const { confirmModal, entities, selectedBaselineIds, toggleModal, selectedHSPIds } = this.props;\n\n        confirmModal(entities.selectedSystemIds, selectedBaselineIds, selectedHSPIds);\n        toggleModal();\n    }\n\n    cancelSelection() {\n        this.props.toggleModal();\n    }\n\n    selectedSystemIds() {\n        let ids = this.props.systems.map(function (system) {\n            return system.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    selectedBaselineIds() {\n        let ids = this.props.baselines.map(function (baseline) {\n            return baseline.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    changeActiveTab(event, tabIndex) {\n        const { selectActiveTab } = this.props;\n\n        selectActiveTab(tabIndex);\n    }\n\n    render() {\n        const { activeTab, addSystemModalOpened, baselineTableData, loading } = this.props;\n        const { columns } = this.state;\n\n        return (\n            <React.Fragment>\n                <Modal\n                    title=\"Choose systems\"\n                    isOpen={ addSystemModalOpened }\n                    onClose={ this.cancelSelection }\n                    width=\"auto\"\n                    isFooterLeftAligned\n                    actions={ [\n                        <Button\n                            key=\"confirm\"\n                            variant=\"primary\"\n                            onClick={ this.confirmModal }>\n                            Submit\n                        </Button>\n                    ] }\n                >\n                    <Tabs\n                        activeKey={ activeTab }\n                        onSelect={ this.changeActiveTab }\n                    >\n                        <Tab\n                            eventKey={ 0 }\n                            title=\"Systems\"\n                        >\n                            <SystemsTable selectedSystemIds={ this.selectedSystemIds() }/>\n                        </Tab>\n                        <Tab\n                            eventKey={ 1 }\n                            title=\"Baselines\"\n                        >\n                            <BaselinesTable\n                                tableId='CHECKBOX'\n                                hasMultiSelect={ true }\n                                onSelect={ this.onSelect }\n                                tableData={ baselineTableData }\n                                loading={ loading }\n                                columns={ columns }/>\n                        </Tab>\n                    </Tabs>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nAddSystemModal.propTypes = {\n    showModal: PropTypes.bool,\n    addSystemModalOpened: PropTypes.bool,\n    activeTab: PropTypes.number,\n    confirmModal: PropTypes.func,\n    cancelSelection: PropTypes.func,\n    toggleModal: PropTypes.func,\n    selectActiveTab: PropTypes.func,\n    entities: PropTypes.object,\n    systems: PropTypes.array,\n    selectedBaselineIds: PropTypes.array,\n    baselines: PropTypes.array,\n    selectedHSPIds: PropTypes.array,\n    loading: PropTypes.bool,\n    baselineTableData: PropTypes.array,\n    selectBaseline: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        systems: state.compareState.systems,\n        activeTab: state.addSystemModalState.activeTab,\n        entities: state.entities,\n        selectedBaselineIds: state.baselinesTableState.checkboxTable.selectedBaselineIds,\n        baselines: state.compareState.baselines,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds,\n        loading: state.baselinesTableState.checkboxTable.loading,\n        baselineTableData: state.baselinesTableState.checkboxTable.baselineTableData\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(addSystemModalActions.toggleAddSystemModal()),\n        selectActiveTab: (newActiveTab) => dispatch(addSystemModalActions.selectActiveTab(newActiveTab)),\n        selectBaseline: (id, isSelected, tableId) => dispatch(baselinesTableActions.selectBaseline(id, isSelected, tableId))\n    };\n}\n\nexport default withCookies(connect(mapStateToProps, mapDispatchToProps)(AddSystemModal));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\n\nimport { addSystemModalActions } from '../../AddSystemModal/redux';\n\nclass AddSystemButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Button\n                className=\"add-system-button\"\n                variant='primary'\n                onClick={ this.props.toggleAddSystemModal }>\n                { this.props.isTable ? 'Add' : 'Add systems or baselines' }\n            </Button>\n        );\n    }\n}\n\nAddSystemButton.propTypes = {\n    toggleAddSystemModal: PropTypes.func,\n    isTable: PropTypes.bool\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleAddSystemModal: (() => dispatch(addSystemModalActions.toggleAddSystemModal()))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddSystemButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckCircleIcon, QuestionCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\n\nclass StateIcon extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    icon() {\n        let iconClass = '';\n\n        if (this.props.factState === 'SAME') {\n            iconClass = <CheckCircleIcon color='#3E8635' height='20px' width='20px'/>;\n        } else if (this.props.factState === 'DIFFERENT') {\n            iconClass = <ExclamationCircleIcon color='#C9190B' height='20px' width='20px'/>;\n        } else {\n            iconClass = <QuestionCircleIcon color='#151515' height='20px' width='20px'/>;\n        }\n\n        return iconClass;\n    };\n\n    render() {\n        return (\n            this.icon()\n        );\n    }\n}\n\nStateIcon.propTypes = {\n    factState: PropTypes.string\n};\n\nexport default StateIcon;\n","import queryString from 'query-string';\n\nexport function setHistory(history, systemIds = [], baselineIds = [], hspIds = []) {\n    /*eslint-disable camelcase*/\n    history.push({\n        search: '?' + queryString.stringify({ system_ids: systemIds, baseline_ids: baselineIds, hsp_ids: hspIds })\n    });\n    /*eslint-enable camelcase*/\n}\n","import types from './types';\n\nfunction selectHistoricProfiles(historicProfileIds) {\n    return {\n        type: types.SELECT_HISTORIC_PROFILES,\n        payload: historicProfileIds\n    };\n}\n\nfunction setSelectedHistoricProfiles(historicProfileIds) {\n    return {\n        type: types.SET_SELECTED_HISTORIC_PROFILES,\n        payload: historicProfileIds\n    };\n}\n\nexport default {\n    selectHistoricProfiles,\n    setSelectedHistoricProfiles\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { historicProfilesActions } from '../redux';\n\nclass HistoricalProfilesCheckbox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: this.props.selectedHSPIds.some(id => id === this.props.profile.id)\n        };\n    }\n\n    handleChange = () => {\n        const { checked } = this.state;\n        const { selectHistoricProfiles, profile } = this.props;\n\n        this.setState({\n            checked: !checked\n        });\n\n        selectHistoricProfiles([ profile.id ]);\n    }\n\n    render() {\n        const { profile } = this.props;\n        const { checked } = this.state;\n\n        return (\n            <React.Fragment>\n                <Checkbox\n                    label={ moment.utc(profile.created).format('DD MMM YYYY, HH:mm UTC') }\n                    isChecked={ checked }\n                    onChange={ this.handleChange }\n                    aria-label={ profile.id }\n                    id={ profile.id }\n                    name={ profile.id }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nHistoricalProfilesCheckbox.propTypes = {\n    profile: PropTypes.object,\n    selectHistoricProfiles: PropTypes.func,\n    selectedHSPIds: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        selectHistoricProfiles: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfiles(historicProfileIds))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(HistoricalProfilesCheckbox));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\n\nclass FetchHistoricalProfilesButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    fetchHistoricalComparison = () => {\n        const { baselines, systems, selectedHSPIds } = this.props;\n        let baselineIds = baselines.map(baseline => baseline.id);\n        let systemIds = systems.map(system => system.id);\n\n        this.props.fetchCompare(systemIds, baselineIds, selectedHSPIds);\n    }\n\n    render() {\n        return (\n            <Button\n                style={ { float: 'left' } }\n                variant='primary'\n                onClick={ this.fetchHistoricalComparison }>\n                Compare\n            </Button>\n        );\n    }\n}\n\nFetchHistoricalProfilesButton.propTypes = {\n    fetchHistoricalComparison: PropTypes.func,\n    baselines: PropTypes.array,\n    systems: PropTypes.array,\n    selectedHSPIds: PropTypes.array,\n    fetchCompare: PropTypes.func,\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselines: state.compareState.baselines,\n        systems: state.compareState.systems,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, null)(FetchHistoricalProfilesButton));\n","import React, { Component } from 'react';\nimport { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { UndoIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nimport HistoricalProfilesCheckbox from './HistoricalProfilesCheckbox/HistoricalProfilesCheckbox';\nimport api from '../../api';\nimport FetchHistoricalProfilesButton from './FetchHistoricalProfilesButton/FetchHistoricalProfilesButton';\n\nclass HistoricalProfilesDropdown extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOpen: false,\n            historicalData: this.renderLoadingRows()\n        };\n\n        this.onToggle = () => {\n            const { isOpen } = this.state;\n\n            if (isOpen === false) {\n                this.fetchData(this.props.systemId);\n            }\n\n            this.setState({\n                isOpen: !isOpen\n            });\n        };\n    }\n\n    async fetchData(systemId) {\n        let historicalData = await api.fetchHistoricalData(systemId);\n\n        this.setState({\n            historicalData: this.createDropdownArray(historicalData)\n        });\n    }\n\n    createDropdownArray = (historicalData) => {\n        const { fetchCompare } = this.props;\n\n        let dropdownItems = [];\n\n        historicalData.profiles.forEach(function(profile) {\n            dropdownItems.push(\n                <DropdownItem>\n                    <HistoricalProfilesCheckbox profile={ profile } />\n                </DropdownItem>\n            );\n        });\n\n        dropdownItems.push(<div className='hsp-button'><FetchHistoricalProfilesButton fetchCompare={ fetchCompare } /></div>);\n\n        return dropdownItems;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rows.push(\n                <Skeleton className='hsp-dropdown-loading hsp-button' size={ SkeletonSize.sm } />\n            );\n            rows.push(<br></br>);\n        }\n\n        return rows;\n    }\n\n    render() {\n        const { isOpen, historicalData } = this.state;\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    toggle={ <DropdownToggle\n                        className='historical-system-profile-dropdown'\n                        iconComponent={ null }\n                        onToggle={ this.onToggle }>\n                        <UndoIcon />\n                    </DropdownToggle> }\n                    isOpen={ isOpen }\n                    isPlain\n                    dropdownItems={ historicalData }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nHistoricalProfilesDropdown.propTypes = {\n    fetchHistoricalData: PropTypes.func,\n    systemId: PropTypes.string,\n    fetchCompare: PropTypes.func\n};\n\nexport default HistoricalProfilesDropdown;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, Title, Tooltip } from '@patternfly/react-core';\nimport queryString from 'query-string';\nimport { ClockIcon, TimesIcon, ExclamationTriangleIcon, PlusCircleIcon, ServerIcon, BlueprintIcon } from '@patternfly/react-icons';\nimport { AngleDownIcon, AngleRightIcon, LongArrowAltUpIcon, LongArrowAltDownIcon, ArrowsAltVIcon } from '@patternfly/react-icons';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport moment from 'moment';\n\nimport AddSystemModal from '../../AddSystemModal/AddSystemModal';\nimport AddSystemButton from '../AddSystemButton/AddSystemButton';\nimport StateIcon from '../../StateIcon/StateIcon';\nimport { ASC, DESC } from '../../../constants';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport HistoricalProfilesDropdown from '../../HistoricalProfilesDropdown/HistoricalProfilesDropdown';\nimport { compareActions } from '../../modules';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { historicProfilesActions } from '../../HistoricalProfilesDropdown/redux';\n\nexport class DriftTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.masterList = [];\n\n        this.setSystemIds();\n        this.setBaselineIds();\n        this.setHSPIds();\n        this.fetchCompare = this.fetchCompare.bind(this);\n        this.removeSystem = this.removeSystem.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n        const { fetchCompare } = this.props;\n\n        fetchCompare(this.systemIds, this.baselineIds, this.HSPIds);\n    }\n\n    formatEntities(systems, baselines, historicalProfiles) {\n        let fullHistoricalSystemList = [];\n\n        if (systems.length === 0 && baselines.length === 0 && historicalProfiles.length === 0) {\n            return [];\n        }\n\n        systems = systems.map(function(system) {\n            system.type = 'system';\n            return system;\n        });\n        baselines = baselines.map(function(baseline) {\n            baseline.type = 'baseline';\n            return baseline;\n        });\n        historicalProfiles = historicalProfiles.map(function(hsp) {\n            hsp.type = 'historical-system-profile';\n            return hsp;\n        });\n\n        systems.forEach(function(system) {\n            fullHistoricalSystemList.push(system);\n            historicalProfiles.forEach(function(hsp) {\n                if (hsp.system_id === system.id) {\n                    fullHistoricalSystemList.push(hsp);\n                }\n            });\n        });\n\n        return baselines.concat(fullHistoricalSystemList);\n    }\n\n    setSystemIds() {\n        this.systemIds = queryString.parse(this.props.location.search).system_ids;\n        this.systemIds = Array.isArray(this.systemIds) ? this.systemIds : [ this.systemIds ];\n        this.systemIds = this.systemIds.filter(item => item !== undefined);\n    }\n\n    setBaselineIds() {\n        this.baselineIds = queryString.parse(this.props.location.search).baseline_ids;\n        this.baselineIds = Array.isArray(this.baselineIds) ? this.baselineIds : [ this.baselineIds ];\n        this.baselineIds = this.baselineIds.filter(item => item !== undefined);\n    }\n\n    setHSPIds() {\n        const { selectHistoricProfiles } = this.props;\n\n        this.HSPIds = queryString.parse(this.props.location.search).hsp_ids;\n        this.HSPIds = Array.isArray(this.HSPIds) ? this.HSPIds : [ this.HSPIds ];\n        this.HSPIds = this.HSPIds.filter(item => item !== undefined);\n        selectHistoricProfiles(this.HSPIds);\n    }\n\n    formatDate(dateString) {\n        return moment.utc(dateString).format('DD MMM YYYY, HH:mm UTC');\n    }\n\n    removeSystem = (item) => {\n        if (item.type === 'system') {\n            this.systemIds = this.systemIds.filter(id => id !== item.id);\n\n            this.HSPIds = this.props.historicalProfiles.filter((profile) => {\n                return profile.system_id !== item.id;\n            }).map(profile => profile.id);\n\n        } else if (item.type === 'baseline') {\n            this.baselineIds = this.baselineIds.filter(id => id !== item.id);\n        } else if (item.type === 'historical-system-profile') {\n            this.HSPIds = this.HSPIds.filter(id => id !== item.id);\n        }\n\n        this.props.setSelectedHistoricProfiles(this.HSPIds);\n        this.fetchCompare(this.systemIds, this.baselineIds, this.HSPIds);\n    }\n\n    fetchCompare(systemIds, baselineIds, HSPIds) {\n        this.systemIds = systemIds;\n        this.baselineIds = baselineIds;\n        this.HSPIds = HSPIds;\n\n        setHistory(this.props.history, systemIds, baselineIds, HSPIds);\n        this.props.setSelectedBaselines(this.baselineIds, 'CHECKBOX');\n        this.props.fetchCompare(systemIds, baselineIds, HSPIds);\n    }\n\n    renderRows(facts) {\n        let rows = [];\n\n        if (facts !== undefined) {\n            facts.forEach(fact => {\n                rows.push(this.renderRow(fact));\n            });\n        }\n\n        return rows;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n        let rowData = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rowData.push(<td><Skeleton size={ SkeletonSize.md } /></td>);\n        }\n\n        for (let i = 0; i < 10; i += 1) {\n            rows.push(<tr>{ rowData }</tr>);\n        }\n\n        return rows;\n    }\n\n    findSystem(fact) {\n        let row = [];\n        let system = undefined;\n\n        this.masterList.forEach(item => {\n            system = fact.systems.find(function(sys) {\n                return sys.id === item.id;\n            });\n\n            row.push(\n                <td className={ fact.state === 'DIFFERENT' ? 'highlight comparison-cell' : 'comparison-cell' }>\n                    { system.value === null ? 'No Data' : system.value }\n                </td>\n            );\n        });\n\n        return row;\n    }\n\n    renderRow(fact) {\n        let row = [];\n        let rows = [];\n\n        if (fact.comparisons) {\n            row.push(\n                <td className={\n                    this.props.expandedRows.includes(fact.name) ?\n                        'nested-fact sticky-column fixed-column-1' :\n                        'sticky-column fixed-column-1' }>\n                    { this.renderExpandableRowButton(this.props.expandedRows, fact.name) } { fact.name }\n                </td>\n            );\n            row.push(\n                <td className=\"fact-state sticky-column fixed-column-2\">\n                    <StateIcon factState={ fact.state }/>\n                </td>\n            );\n\n            this.masterList.forEach(() => {\n                row.push(<td className=\"comparison-cell\"></td>);\n            });\n\n            rows.push(<tr>{ row }</tr>);\n\n            if (this.props.expandedRows.includes(fact.name)) {\n                fact.comparisons.forEach(comparison => {\n                    row = this.renderRowChild(comparison);\n                    rows.push(<tr>{ row }</tr>);\n                });\n            }\n        } else {\n            row.push(<td className=\"sticky-column fixed-column-1\">{ fact.name }</td>);\n            row.push(\n                <td className=\"fact-state sticky-column fixed-column-2\">\n                    <StateIcon factState={ fact.state }/>\n                </td>\n            );\n\n            row = row.concat(this.findSystem(fact));\n\n            rows.push(<tr>{ row }</tr>);\n        }\n\n        return rows;\n    }\n\n    renderRowChild(fact) {\n        let row = [];\n\n        row.push(<td className=\"nested-fact sticky-column fixed-column-1\">\n            <p className=\"child-row\">{ fact.name }</p>\n        </td>);\n        row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n        row = row.concat(this.findSystem(fact));\n\n        return row;\n    }\n\n    renderSystemHeaders() {\n        let row = [];\n        let typeIcon = '';\n\n        this.masterList.forEach(item => {\n            if (item.type === 'system') {\n                typeIcon = <ServerIcon/>;\n            } else if (item.type === 'baseline') {\n                typeIcon = <BlueprintIcon/>;\n            } else if (item.type === 'historical-system-profile') {\n                typeIcon = <ClockIcon />;\n            }\n\n            row.push(\n                <th header-id={ item.id } key={ item.id } className={ `drift-header ${item.type}-header` }>\n                    <div>\n                        <a onClick={ () => this.removeSystem(item) } className=\"remove-system-icon\">\n                            <TimesIcon/>\n                        </a>\n                    </div>\n                    <div className='comparison-header'>\n                        <div className=\"drift-header-icon\">\n                            { typeIcon }\n                        </div>\n                        <div className=\"system-name\">{ item.display_name }</div>\n                        <div className=\"system-updated\">\n                            { item.system_profile_exists === false ?\n                                <Tooltip\n                                    position='top'\n                                    content={\n                                        <div>System profile does not exist. Please run insights-client on system to upload archive.</div>\n                                    }\n                                >\n                                    <ExclamationTriangleIcon color=\"#f0ab00\"/>\n                                </Tooltip> : ''\n                            }\n                            { item.last_updated\n                                ? this.formatDate(item.last_updated)\n                                : this.formatDate(item.updated)\n                            }\n                            { insights.chrome.isBeta()\n                                ? item.type === 'system'\n                                    ? <HistoricalProfilesDropdown systemId={ item.id } fetchCompare={ this.fetchCompare }/>\n                                    : null\n                                : null\n                            }\n                        </div>\n                    </div>\n                </th>\n            );\n        });\n\n        return row;\n    }\n\n    renderSortButton(sortType, sort) {\n        let sortIcon;\n\n        if (sort === ASC) {\n            sortIcon = <LongArrowAltUpIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else if (sort === DESC) {\n            sortIcon = <LongArrowAltDownIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else {\n            sortIcon = <ArrowsAltVIcon className=\"pointer not-active\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n\n        return sortIcon;\n    }\n\n    toggleSort(sortType, sort) {\n        if (sortType === 'fact') {\n            this.props.toggleFactSort(sort);\n        } else {\n            this.props.toggleStateSort(sort);\n        }\n    }\n\n    renderHeaderRow() {\n        const { stateSort } = this.props;\n\n        return (\n            <tr className=\"sticky-column-header\">\n                <th className=\"fact-header sticky-column fixed-column-1\" key='fact-header'>\n                    <div className=\"active-blue\">Fact { this.renderSortButton('fact', this.props.factSort) }</div>\n                </th>\n                <th className=\"state-header sticky-column fixed-column-2\" key='state-header'>\n                    { stateSort !== '' ?\n                        <div className=\"active-blue\">State { this.renderSortButton('state', this.props.stateSort) }</div> :\n                        <div>State { this.renderSortButton('state', this.props.stateSort) }</div>\n                    }\n                </th>\n                { this.renderSystemHeaders() }\n            </tr>\n        );\n    }\n\n    renderExpandableRowButton(expandedRows, factName) {\n        let expandIcon;\n\n        if (expandedRows.includes(factName)) {\n            expandIcon = <AngleDownIcon className=\"pointer active-blue\" onClick={ () => this.props.expandRow(factName) } />;\n        } else {\n            expandIcon = <AngleRightIcon className=\"pointer\" onClick={ () => this.props.expandRow(factName) } />;\n        }\n\n        return expandIcon;\n    }\n\n    renderEmptyState() {\n        return (\n            <center>\n                <EmptyState>\n                    <EmptyStateIcon icon={ PlusCircleIcon } />\n                    <br></br>\n                    <Title size=\"lg\">Add systems or baselines to compare</Title>\n                    <EmptyStateBody>\n                        You currently have no systems or baselines displayed. Add at least two\n                        <br></br>\n                        systems or baselines to compare their facts.\n                    </EmptyStateBody>\n                    <AddSystemButton isTable={ false }/>\n                </EmptyState>\n            </center>\n        );\n    }\n\n    renderTable(compareData, loading) {\n        return (\n            <React.Fragment>\n                <div className=\"drift-table-wrapper\">\n                    <table className=\"pf-c-table pf-m-compact drift-table\">\n                        <thead>\n                            { this.renderHeaderRow() }\n                        </thead>\n                        <tbody>\n                            { loading ? this.renderLoadingRows() : this.renderRows(compareData) }\n                        </tbody>\n                    </table>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { fullCompareData, filteredCompareData, systems, baselines, historicalProfiles, loading } = this.props;\n\n        this.masterList = this.formatEntities(systems, baselines, historicalProfiles);\n\n        return (\n            <React.Fragment>\n                <AddSystemModal\n                    selectedSystemIds={ systems.map(system => system.id) }\n                    confirmModal={ this.fetchCompare }\n                />\n                {\n                    this.masterList.length !== 0 ||\n                    loading ||\n                    (fullCompareData.length !== 0 && this.systemIds.length !== 0)\n                        ? this.renderTable(filteredCompareData, loading) : this.renderEmptyState()\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        fullCompareData: state.compareState.fullCompareData,\n        filteredCompareData: state.compareState.filteredCompareData,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines,\n        historicalProfiles: state.compareState.historicalProfiles,\n        factSort: state.compareState.factSort,\n        stateSort: state.compareState.stateSort,\n        expandedRows: state.compareState.expandedRows\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchCompare: ((systemIds, baselineIds, historicalProfiles) =>\n            dispatch(compareActions.fetchCompare(systemIds, baselineIds, historicalProfiles))\n        ),\n        toggleFactSort: (sortType) => dispatch(compareActions.toggleFactSort(sortType)),\n        toggleStateSort: (sortType) => dispatch(compareActions.toggleStateSort(sortType)),\n        expandRow: (factName) => dispatch(compareActions.expandRow(factName)),\n        setSelectedBaselines: ((selectedBaselineIds, tableId) =>\n            dispatch(baselinesTableActions.setSelectedBaselines(selectedBaselineIds, tableId))\n        ),\n        selectHistoricProfiles: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfiles(historicProfileIds)),\n        setSelectedHistoricProfiles: (HPIds) => dispatch(historicProfilesActions.setSelectedHistoricProfiles(HPIds))\n    };\n}\n\nDriftTable.propTypes = {\n    addSystemModalOpened: PropTypes.bool,\n    location: PropTypes.object,\n    history: PropTypes.object,\n    fetchCompare: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    filteredCompareData: PropTypes.array,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    historicalProfiles: PropTypes.array,\n    factSort: PropTypes.string,\n    stateSort: PropTypes.string,\n    loading: PropTypes.bool,\n    toggleFactSort: PropTypes.func,\n    toggleStateSort: PropTypes.func,\n    expandRow: PropTypes.func,\n    expandedRows: PropTypes.array,\n    setSelectedBaselines: PropTypes.func,\n    setSelectedHistoricProfiles: PropTypes.func,\n    selectHistoricProfiles: PropTypes.func\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftTable));\n","import types from './types';\n\nfunction toggleFilterDropDown() {\n    return {\n        type: types.OPEN_FILTER_DROPDOWN\n    };\n}\n\nexport default {\n    toggleFilterDropDown\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox, Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { filterDropdownActions } from './redux';\n\nclass FilterDropDown extends Component {\n    constructor(props) {\n        super(props);\n        this.onToggle = this.onToggle.bind(this);\n        this.createDropdownItem = this.createDropdownItem.bind(this);\n    }\n\n    onToggle() {\n        this.props.toggleDropDown();\n    }\n\n    createDropdownItem(stateFilter) {\n        let dropdownItem = <Checkbox\n            className=\"state-filter-checkbox\"\n            id={ stateFilter.display }\n            label={ stateFilter.display }\n            isChecked={ stateFilter.selected }\n            onChange={ () =>\n                this.props.addStateFilter(stateFilter)\n            } />;\n\n        return dropdownItem;\n    }\n\n    createDropdownArray(stateFilters) {\n        let dropdownItems = [];\n\n        stateFilters.forEach(function(stateFilter) {\n            let dropdownItem = this.createDropdownItem(stateFilter);\n            dropdownItems.push(dropdownItem);\n        }.bind(this));\n\n        return dropdownItems;\n    }\n\n    createSelectedViewsString(stateFilters) {\n        let selectedViewsArray = [];\n        let selectedViews = '';\n\n        for (let i = 0; i < stateFilters.length; i++) {\n            if (stateFilters[i].selected) {\n                selectedViewsArray.push(stateFilters[i].display);\n            }\n        }\n\n        for (let i = 0; i < selectedViewsArray.length; i++) {\n            selectedViews += selectedViewsArray[i];\n\n            if ((i + 1) < selectedViewsArray.length) {\n                selectedViews += ', ';\n            }\n        }\n\n        return selectedViews;\n    }\n\n    render() {\n        const { stateFilters } = this.props;\n        let dropdownItems = [];\n        let selectedViews = '';\n\n        dropdownItems = this.createDropdownArray(stateFilters);\n        selectedViews = this.createSelectedViewsString(stateFilters);\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    className=\"state-filter-dropdown\"\n                    onSelect={ this.onToggle }\n                    toggle={ <DropdownToggle onToggle={ this.onToggle }>\n                        View: { selectedViews }\n                    </DropdownToggle> }\n                    isOpen={ this.props.filterDropdownOpened }\n                    dropdownItems={ dropdownItems }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nFilterDropDown.propTypes = {\n    toggleDropDown: PropTypes.func,\n    filterDropdownOpened: PropTypes.bool,\n    stateFilters: PropTypes.array,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        filterDropdownOpened: state.filterDropdownOpened,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleDropDown: () => dispatch(filterDropdownActions.toggleFilterDropDown()),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(FilterDropDown));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TextInput } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { compareActions } from '../../modules';\n\nexport class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: this.props.factFilter\n        };\n\n        this.setFactFilter = this.setFactFilter.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.factFilter !== '' && this.props.factFilter === '') {\n            this.setState({ filter: this.props.factFilter });\n        }\n    }\n\n    updateFactFilter = (filter) => {\n        this.setState({ filter });\n        this.setFactFilter(filter);\n    }\n\n    setFactFilter = _.debounce(function(filter) {\n        this.props.changeFactFilter(filter);\n    }, 250);\n\n    render() {\n        return (\n            <React.Fragment>\n                <TextInput\n                    value={ this.state.filter }\n                    id=\"filterByFact\"\n                    placeholder=\"Filter by fact\"\n                    onChange={ this.updateFactFilter }\n                    aria-label=\"filter by fact\"\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nSearchBar.propTypes = {\n    changeFactFilter: PropTypes.func,\n    factFilter: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeFactFilter: (factFilter) => dispatch(compareActions.filterByFact(factFilter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(SearchBar));\n","import types from './types';\n\nfunction toggleKebab() {\n    return {\n        type: types.TOGGLE_KEBAB\n    };\n}\n\nexport default {\n    toggleKebab\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../../modules';\nimport { actionKebabActions } from './redux';\nimport { Dropdown, KebabToggle, DropdownItem } from '@patternfly/react-core';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { historicProfilesActions } from '../../HistoricalProfilesDropdown/redux';\n\nclass ActionKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.removeSystemsSelect = this.removeSystemsSelect.bind(this);\n    }\n\n    removeSystemsSelect() {\n        const { history, toggleKebab, removeSystems, clearSelectedBaselines, selectHistoricProfiles, selectedHSPIds } = this.props;\n\n        toggleKebab();\n        removeSystems();\n        clearSelectedBaselines();\n        selectHistoricProfiles(selectedHSPIds);\n        setHistory(history, []);\n    }\n\n    render() {\n        const dropdownItems = [\n            <DropdownItem key=\"remove-systems\" component=\"button\" onClick={ this.removeSystemsSelect }>Clear all comparisons</DropdownItem>\n        ];\n        return (\n            <Dropdown\n                id='action-kebab'\n                aria-label='action-kebab'\n                style={ { float: 'left' } }\n                toggle={ <KebabToggle onToggle={ this.props.toggleKebab } /> }\n                isOpen={ this.props.kebabOpened }\n                dropdownItems={ dropdownItems }\n                isPlain\n            />\n        );\n    }\n}\n\nActionKebab.propTypes = {\n    removeSystems: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func,\n    toggleKebab: PropTypes.func,\n    kebabOpened: PropTypes.bool,\n    history: PropTypes.object,\n    selectedHSPIds: PropTypes.array,\n    selectHistoricProfiles: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        kebabOpened: state.kebabOpened,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        removeSystems: () => dispatch(compareActions.clearState()),\n        clearSelectedBaselines: () => dispatch(baselinesTableActions.clearSelectedBaselines()),\n        toggleKebab: () => dispatch(actionKebabActions.toggleKebab()),\n        selectHistoricProfiles: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfiles(historicProfileIds))\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ActionKebab));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../modules';\nimport { errorAlertActions } from './redux';\nimport { setHistory } from '../../Utilities/SetHistory';\n\nclass ErrorAlert extends Component {\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n    }\n\n    confirmModal() {\n        const { toggleModal, revertCompareData, history, previousStateSystems } = this.props;\n\n        toggleModal();\n        revertCompareData();\n        setHistory(history, previousStateSystems.map(system => system.id));\n    }\n\n    render() {\n        const { errorAlertOpened } = this.props;\n        return (\n            <React.Fragment>\n                { errorAlertOpened && (\n                    <Alert\n                        variant=\"danger\"\n                        title=\"Error\"\n                        action={\n                            <AlertActionCloseButton\n                                onClose={ () => this.confirmModal() }\n                            /> }\n                    >\n                        Status Code: { this.props.error.status }<br></br>\n                        { this.props.error.detail }\n                    </Alert>\n                ) }\n            </React.Fragment>\n        );\n    }\n}\n\nErrorAlert.propTypes = {\n    confirmModal: PropTypes.func,\n    errorAlertOpened: PropTypes.bool,\n    error: PropTypes.object,\n    status: PropTypes.number,\n    detail: PropTypes.string,\n    toggleModal: PropTypes.func,\n    history: PropTypes.object,\n    clearState: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    revertCompareData: PropTypes.func,\n    previousStateSystems: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        fullCompareData: state.compareState.fullCompareData,\n        previousStateSystems: state.compareState.previousStateSystems,\n        errorAlertOpened: state.errorAlertOpened,\n        error: state.compareState.error\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        revertCompareData: () => dispatch(compareActions.revertCompareData())\n    };\n}\n\nexport default withRouter (connect(mapStateToProps, mapDispatchToProps)(ErrorAlert));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { Pagination, DropdownDirection } from '@patternfly/react-core';\n\nconst perPageOptions = [\n    { title: '10', value: 10 },\n    { title: '25', value: 25 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nclass TablePagination extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onSetPage = this.onSetPage.bind(this);\n        this.onPerPageSelect = this.onPerPageSelect.bind(this);\n    }\n\n    onSetPage(event, page) {\n        const { perPage } = this.props;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    onPerPageSelect(event, perPage) {\n        const page = 1;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    render() {\n        const { totalFacts, page, perPage } = this.props;\n\n        return (\n            <Pagination\n                itemCount={ totalFacts ? totalFacts : 0 }\n                perPageOptions={ perPageOptions }\n                page={ totalFacts === 0 ? 0 : page }\n                perPage={ perPage }\n                dropDirection={ DropdownDirection.down }\n                onSetPage={ this.onSetPage }\n                onPerPageSelect={ this.onPerPageSelect }\n                isCompact={ true }\n            />\n        );\n    }\n}\n\nTablePagination.propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    updatePagination: PropTypes.func,\n    totalFacts: PropTypes.number\n};\n\nfunction mapStateToProps(state) {\n    return {\n        page: state.compareState.page,\n        perPage: state.compareState.perPage,\n        totalFacts: state.compareState.totalFacts\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updatePagination: ((pagination) => dispatch(compareActions.updatePagination(pagination)))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePagination);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { ExportIcon } from '@patternfly/react-icons';\nimport { compareActions } from '../../modules';\n\nclass ExportCSVButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { exportToCSV } = this.props;\n\n        return (\n            <ExportIcon className='pointer not-active export-button-margin' onClick={ exportToCSV } />\n        );\n    }\n}\n\nExportCSVButton.propTypes = {\n    exportToCSV: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        exportToCSV: () => dispatch(compareActions.exportToCSV())\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(ExportCSVButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Chip, ChipGroup, ChipGroupToolbarItem } from '@patternfly/react-core';\n\nimport { compareActions } from '../../modules';\n\nexport class DriftFilterChips extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chipGroup: [\n                { category: 'State', chips: this.setStateChips(this.props.stateFilters) },\n                { category: 'Name', chips:\n                    this.props.factFilter !== ''\n                        ? [ this.props.factFilter ]\n                        : []\n                }\n            ]\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { stateFilters, factFilter } = this.props;\n        let newStateChips;\n        let newFactFilter;\n        let newChipGroup;\n\n        if (stateFilters !== prevProps.stateFilters) {\n            let filteredChips = [];\n\n            stateFilters.forEach(function(filter) {\n                if (filter.selected) {\n                    filteredChips.push(filter.display);\n                }\n            });\n\n            newStateChips = { category: 'State', chips: filteredChips };\n\n            newChipGroup = [ newStateChips, this.state.chipGroup[1] ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n\n        if (factFilter !== prevProps.factFilter) {\n            newFactFilter = { category: 'Name', chips:\n                factFilter !== ''\n                    ? [ factFilter ]\n                    : []\n            };\n\n            newChipGroup = [ this.state.chipGroup[0], newFactFilter ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n    }\n\n    setStateChips = (stateFilters) => {\n        let stateChips = [];\n\n        stateFilters.forEach(function(filter) {\n            if (filter.selected) {\n                stateChips.push(filter.display);\n            }\n        });\n\n        return stateChips;\n    }\n\n    removeChip = (chip) => {\n        const { stateFilters, addStateFilter, filterByFact } = this.props;\n\n        if (chip === 'Same' || chip === 'Different' || chip === 'Incomplete data') {\n            stateFilters.forEach(function(stateFilter) {\n                if (stateFilter.display === chip) {\n                    addStateFilter(stateFilter);\n                }\n            });\n        } else {\n            filterByFact('');\n        }\n    }\n\n    render() {\n        const { chipGroup } = this.state;\n        let chipKeyCount = 0;\n\n        return (\n            <ChipGroup withToolbar>\n                { chipGroup.map(currentGroup => (\n                    <ChipGroupToolbarItem key={ currentGroup.category } categoryName={ currentGroup.category }>\n                        { currentGroup.chips.map(chip => (\n                            <Chip key={ currentGroup.category + chipKeyCount++ } onClick={ () => this.removeChip(chip) }>\n                                { chip }\n                            </Chip>\n                        )) }\n                    </ChipGroupToolbarItem>\n                )) }\n            </ChipGroup>\n        );\n    }\n}\n\nDriftFilterChips.propTypes = {\n    factFilter: PropTypes.string,\n    stateFilters: PropTypes.array,\n    filterByFact: PropTypes.func,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        filterByFact: (filter) => dispatch(compareActions.filterByFact(filter)),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DriftFilterChips);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport { errorAlertActions } from '../ErrorAlert/redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nimport DriftTable from './DriftTable/DriftTable';\nimport FilterDropDown from './FilterDropDown/FilterDropDown';\nimport SearchBar from './SearchBar/SearchBar';\nimport ActionKebab from './ActionKebab/ActionKebab';\nimport ErrorAlert from '../ErrorAlert/ErrorAlert';\nimport TablePagination from './Pagination/Pagination';\nimport ExportCSVButton from './ExportCSVButton/ExportCSVButton';\nimport DriftFilterChips from './DriftFilterChips/DriftFilterChips';\nimport AddSystemButton from './AddSystemButton/AddSystemButton';\n\nexport class DriftPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.props.clearSelectedBaselines();\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    render() {\n        const { systems, baselines, loading } = this.props;\n\n        if (this.props.error.detail) {\n            this.props.toggleErrorAlert();\n        }\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='System Comparison'/>\n                </PageHeader>\n                <Main>\n                    <ErrorAlert />\n                    <Card className='pf-t-light pf-m-opaque-100'>\n                        <CardBody>\n                            <div>\n                                { (systems.length > 0 || baselines.length > 0) && !loading ?\n                                    <React.Fragment>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <SearchBar />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <FilterDropDown />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <AddSystemButton/>\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ExportCSVButton />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ActionKebab />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                            <ToolbarGroup className=\"pf-c-pagination\">\n                                                <ToolbarItem>\n                                                    <TablePagination />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <DriftFilterChips />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                    </React.Fragment>\n                                    : null\n                                }\n                                <DriftTable />\n                                { systems.length > 0 && !loading ?\n                                    <Toolbar className=\"drift-toolbar\">\n                                        <ToolbarGroup className=\"pf-c-pagination\">\n                                            <ToolbarItem>\n                                                <TablePagination />\n                                            </ToolbarItem>\n                                        </ToolbarGroup>\n                                    </Toolbar>\n                                    : null\n                                }\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nDriftPage.propTypes = {\n    error: PropTypes.object,\n    loading: PropTypes.bool,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    toggleErrorAlert: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleErrorAlert: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        clearSelectedBaselines: () => dispatch(baselinesTableActions.clearSelectedBaselines())\n    };\n}\n\nfunction mapStateToProps(state) {\n    return {\n        error: state.compareState.error,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftPage));\n"],"sourceRoot":""}