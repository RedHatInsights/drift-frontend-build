{"version":3,"sources":["webpack:///./src/SmartComponents/BaselinesPage/redux/actions.js","webpack:///./src/SmartComponents/BaselinesPage/CreateBaselineButton/CreateBaselineButton.js","webpack:///./src/SmartComponents/BaselinesPage/CreateBaseline/CreateBaseline.js","webpack:///./src/SmartComponents/BaselinesPage/BaselinesKebab/redux/actions.js","webpack:///./src/SmartComponents/BaselinesPage/BaselinesKebab/BaselinesKebab.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/TableTextInput/TableTextInput.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/InlineEdit/utils/formatters/inlineEditFormatterFactory.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/InlineEdit/constants.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/InlineEdit/utils/utils.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/InlineEdit/editableTableBody.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/CancelButton/CancelButton.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/ConfirmButton/ConfirmButton.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/InlineEdit/css/inline-edit-css.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/InlineEdit/ConfirmButtons.js","webpack:///./node_modules/@patternfly/react-inline-edit-extension/dist/esm/components/InlineEdit/editableRowWrapper.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaseline/EditBaseline.js","webpack:///./src/SmartComponents/BaselinesPage/BaselinesPage.js"],"names":["toggleCreateBaseline","type","types","CREATE_NEW_BASELINE","CreateBaselineButton","props","this","Button","variant","onClick","Component","propTypes","PropTypes","func","connect","dispatch","baselinesPageActions","CreateBaseline","submitBaselineName","bind","state","baselineName","updateBaselineName","value","setState","createBaseline","display_name","baseline_facts","Fragment","EmptyState","EmptyStateVariant","full","EmptyStateIcon","icon","CubesIcon","Title","headingLevel","size","EmptyStateBody","InputGroup","TextInput","onChange","aria-label","newBaselineObject","baselinesTableActions","exportToCSV","exportType","baselineData","data","exportData","baselineRowData","EXPORT_BASELINES_LIST_TO_CSV","payload","BaselinesKebab","kebabOpened","exportSelect","toggleKebab","baselineTableData","dropdownItems","DropdownItem","key","component","Dropdown","style","float","className","toggle","KebabToggle","onToggle","isOpen","isPlain","array","string","withRouter","baselinesTableState","baselinesKebabActions","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_objectSpread","ownKeys","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","_defineProperty","obj","defineProperty","configurable","writable","textInputProptypes","textInputDefaultProptypes","defaultProps","defaultValue","onBlur","autoFocus","bool","args","super","event","currentTarget","_this$props","textInputProps","createElement","undefined","handleBlur","renderEdit","renderValue","resolveValue","isEditable","additionalData","rowData","isEditing","computedData","activeEditId","editConfig","TableEditConfirmation","NONE","ROW","NO_CONFIRM_ROW","TABLE_TOP","TABLE_BOTTOM","requiredElements","warningCompleted","combineFunctions","functions","realFunctions","f","params","shallowLeftSideEquals","newObject","oldObject","find","getBoundingClientRect","element","top","right","bottom","left","width","height","x","y","getClientWindowDimensions","clientWidth","clientHeight","document","documentElement","shape","editConfirmationType","oneOf","values","onEditCellClicked","onEditConfirmed","onEditCanceled","isRequired","onRowClick","onRow","row","rowProps","cell","closest","cellNumber","parseInt","getAttribute","Number","isNaN","idElement","elementId","contains","isTableEditing","tagName","console","warn","join","showIdWarnings","columnIndex","setTimeout","_ref","BodyComponent","rows","some","mappedRows","map","isRowExpandedIndexes","Set","idx","parent","has","isEditableTogetherWithParent","isChildEditing","isParentEditing","lastVisibleRow","pop","parentRow","isLastVisibleParent","resolveCascadeEditability","node","any","InlineEditBody","_ref2","Table","Consumer","_ref3","consumedProps","CancelButton","ConfirmButton","inlineEditCss","StyleSheet","parse","inlineEditStyles","tableEditingFirstRow","tableEditingLastRow","editing","bold","inject","ConfirmButtons","messages","confirmButtonLabel","cancelButtonLabel","onConfirm","onCancel","environment","buttonsOnTop","boldBorder","window","positionStyle","rowDimensions","boldShift","buttonsTopPosition","buttonsBottomPosition","onMouseUp","number","trRef","onScroll","onResize","isExpanded","isFirstVisible","isLastVisible","object","tableConfirmationMapper","hasConfirmationButtons","isTableConfirmation","areButtonsOnTop","hasBoldBorder","getEditStyles","getTableConfirmation","RowWrapperComponent","RowWrapper","newState","oldState","tableElem","updateRowDimensions","setStateWith2dEquals","fetchClientDimensions","getDerivedStateFromProps","tableConfirmation","confirmButtons","options","actionObject","parentNode","body","trClassName","saveRowDimensions","handleScroll","handleResize","getConfirmationButtons","EditBaseline","finishBaselineEdit","addFact","renderAddNewFact","renderEditBaselineName","fetchBaselineData","baselineUUID","makeId","column","rowIndex","name","property","displayName","childEditRenderer","ExpandableRowContent","modules","module","inlineStyle","marginLeft","display","id","newValue","moduleIndex","parentEditRenderer","textInputFormatter","inlineEditFormatterFactory","a","Array","index","SkeletonSize","md","loadingColumns","columns","title","cellFormatters","editedRowsBackup","factName","valueName","showAddNewFact","showAddNewParentFact","parentRowId","isEditingBaselineName","changeBaselineName","changeFactName","changeValueName","apiBody","patchBaseline","clearFactAndValueData","toggleIsEditingBaselineName","shiftedColumnIndex","cells","buildApiBody","baselineFactsArray","childRows","push","clickedRow","getParentId","rowId","getChildId","onEditActionClick","editedRowBackup","backup","JSON","stringify","onCollapse","rowKey","onNewFactActionClick","actionResolver","toggleNewFact","toggleNewParentFact","clearBaselineData","Toolbar","ToolbarGroup","ToolbarItem","newBaselineBody","ComposedBody","editableTableBody","TableBody","ComposedRowWrapper","editableRowWrapper","rowWrapper","baselineDataLoading","newRows","counter","fact","parentCounter","subFacts","baselineId","BaselinesPage","insights","chrome","auth","getUser","creatingNewBaseline","Card","CardBody","BaselinesTable","baselinesPageState"],"mappings":"oVAQe,OACXA,qBAPJ,WACI,MAAO,CACHC,KAAMC,IAAMC,uBCGdC,E,YACF,WAAYC,GAAO,6CACTA,I,sDAGD,IACGL,EAAyBM,KAAKD,MAA9BL,qBAER,OACI,kBAACO,EAAA,EAAD,CACIC,QAAQ,UACRC,QAAUT,GAFd,uB,GATuBU,aAkBnCN,EAAqBO,UAAY,CAC7BX,qBAAsBY,IAAUC,MASrBC,wBAAQ,KANvB,SAA4BC,GACxB,MAAO,CACHf,qBAAuB,kBAAMe,EAASC,EAAqBhB,2BAIpDc,CAAkCV,G,yFCnB3Ca,E,YACF,WAAYZ,GAAO,0BACf,4BAAMA,KACDa,mBAAqB,EAAKA,mBAAmBC,KAAxB,aAE1B,EAAKC,MAAQ,CACTC,aAAc,IAGlB,EAAKC,mBAAqB,SAAAC,GACtB,EAAKC,SAAS,CAAEH,aAAcE,KATnB,E,kEAaE,IACTF,EAAiBf,KAAKc,MAAtBC,aADS,EAEgCf,KAAKD,MAA9CoB,EAFS,EAETA,eAAgBzB,EAFP,EAEOA,qBAKxByB,EAHwB,CAAEC,aAAcL,EAAcM,eAAgB,KAItE3B,M,+BAGK,IACGqB,EAAiBf,KAAKc,MAAtBC,aAER,OACI,kBAAC,IAAMO,SAAP,KACI,kBAACC,EAAA,EAAD,CAAYrB,QAAUsB,IAAkBC,MACpC,kBAACC,EAAA,EAAD,CAAgBC,KAAOC,MACvB,kBAACC,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAA9B,mBAGA,kBAACC,EAAA,EAAD,8BAEI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWjB,MAAQF,EAAepB,KAAK,OAAOwC,SAAWnC,KAAKgB,mBAAqBoB,aAAW,kBAC9F,kBAACnC,EAAA,EAAD,CAAQE,QAAUH,KAAKY,oBAAvB,kB,GAvCCR,aAgD7BO,EAAeN,UAAY,CACvBX,qBAAsBY,IAAUC,KAChCY,eAAgBb,IAAUC,MAUfC,wBAAQ,KAPvB,SAA4BC,GACxB,MAAO,CACHf,qBAAsB,kBAAMe,EAASC,EAAqBhB,yBAC1DyB,eAAgB,SAACkB,GAAD,OAAuB5B,EAAS6B,IAAsBnB,eAAekB,OAI9E7B,CAAkCG,G,gBC7DlC,OACX4B,YAdJ,SAAqBC,EAAYC,GAAoC,IAC7DC,EAAO,CACPF,aACAG,WAAYF,EACZG,gBAJ6D,uDAAJ,IAO7D,MAAO,CACHjD,KAAMC,IAAMiD,6BACZC,QAASJ,K,2BCHXK,E,YACF,WAAYhD,GAAO,0BACf,4BAAMA,KAEDe,MAAQ,CACTkC,aAAa,GAGjB,EAAKC,aAAe,EAAKA,aAAapC,KAAlB,aAEpB,EAAKqC,YAAc,WAAM,IACbF,EAAgB,EAAKlC,MAArBkC,YACR,EAAK9B,SAAS,CACV8B,aAAcA,KAZP,E,4DAiBJ,MAC8DhD,KAAKD,MAAtEyC,EADG,EACHA,WAAYW,EADT,EACSA,kBAAmBV,EAD5B,EAC4BA,aAAcG,EAD1C,EAC0CA,gBACrD5C,KAAKkD,cACc,kBAAfV,EACAxC,KAAKD,MAAMwC,YAAYC,EAAYW,GACb,mBAAfX,GACPxC,KAAKD,MAAMwC,YAAYC,EAAYC,EAAcG,K,+BAIhD,IACGI,EAAgBhD,KAAKc,MAArBkC,YACFI,EAAgB,CAClB,kBAACC,EAAA,EAAD,CAAcC,IAAI,SAASC,UAAU,SAASpD,QAAUH,KAAKiD,cAA7D,kBAEJ,OACI,kBAACO,EAAA,EAAD,CACIC,MAAQ,CAAEC,MAAO,QACjBC,UAAY,eACZC,OAAS,kBAACC,EAAA,EAAD,CAAaC,SAAW9D,KAAKkD,cACtCa,OAASf,EACTI,cAAgBA,EAChBY,SAAO,Q,GAxCM5D,aA8C7B2C,EAAe1C,UAAY,CACvBkC,YAAajC,IAAUC,KACvB4C,kBAAmB7C,IAAU2D,MAC7BzB,WAAYlC,IAAU4D,OACtBzB,aAAcnC,IAAU2D,MACxBrB,gBAAiBtC,IAAU2D,OAkBhBE,kBAAW3D,kBAf1B,SAAyBM,GACrB,MAAO,CACHqC,kBAAmBrC,EAAMsD,oBAAoBjB,kBAC7CV,aAAc3B,EAAMsD,oBAAoB3B,eAIhD,SAA4BhC,GACxB,MAAO,CACH8B,YAAa,SAACC,EAAYG,EAAYC,GAClCnC,EAAS4D,EAAsB9B,YAAYC,EAAYG,EAAYC,OAKrDpC,CAA6CuC,I,0FC7EvE,SAASuB,KAA2Q,OAA9PA,GAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAIpB,KAAOuB,EAAcN,OAAOO,UAAUC,eAAeC,KAAKH,EAAQvB,KAAQmB,EAAOnB,GAAOuB,EAAOvB,IAAY,OAAOmB,IAA2BQ,MAAMjF,KAAM2E,WAEhT,SAASO,GAAyBL,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkEvB,EAAKoB,EAAnED,EAEzF,SAAuCI,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DvB,EAAKoB,EAA5DD,EAAS,GAAQW,EAAab,OAAOc,KAAKR,GAAqB,IAAKH,EAAI,EAAGA,EAAIU,EAAWR,OAAQF,IAAOpB,EAAM8B,EAAWV,GAAQS,EAASG,QAAQhC,IAAQ,IAAamB,EAAOnB,GAAOuB,EAAOvB,IAAQ,OAAOmB,EAFxMc,CAA8BV,EAAQM,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBX,GAAS,IAAKH,EAAI,EAAGA,EAAIe,EAAiBb,OAAQF,IAAOpB,EAAMmC,EAAiBf,GAAQS,EAASG,QAAQhC,IAAQ,GAAkBiB,OAAOO,UAAUY,qBAAqBV,KAAKH,EAAQvB,KAAgBmB,EAAOnB,GAAOuB,EAAOvB,IAAU,OAAOmB,EAIne,SAASkB,GAAclB,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQkB,EAAUrB,OAAOc,KAAKR,GAAqD,mBAAjCN,OAAOiB,wBAAwCI,EAAUA,EAAQC,OAAOtB,OAAOiB,sBAAsBX,GAAQiB,OAAO,SAAUC,GAAO,OAAOxB,OAAOyB,yBAAyBnB,EAAQkB,GAAKE,eAAmBL,EAAQM,QAAQ,SAAU5C,GAAO6C,GAAgB1B,EAAQnB,EAAKuB,EAAOvB,MAAa,OAAOmB,EAExd,SAAS0B,GAAgBC,EAAK9C,EAAKrC,GAAiK,OAApJqC,KAAO8C,EAAO7B,OAAO8B,eAAeD,EAAK9C,EAAK,CAAErC,MAAOA,EAAOgF,YAAY,EAAMK,cAAc,EAAMC,UAAU,IAAkBH,EAAI9C,GAAOrC,EAAgBmF,EAM3M,MAAMI,GAAqBb,GAAc,GAAIzD,EAAA,EAAU7B,WAEjDoG,GAA4Bd,GAAc,GAAIzD,EAAA,EAAUwE,cAE9D,CAACF,GAAoBC,IAA2BP,QAAQtG,IACtD,CAAC,QAAS,YAAYsG,QAAQjF,WACrBrB,EAAMqB,OAIjB,MAAMZ,GAAYsF,GAAc,GAAIa,GAAoB,CACtDG,aAAc,IAAUzC,OACxB0C,OAAQ,IAAUrG,KAClBsG,UAAW,IAAUC,OAGjBJ,GAAef,GAAc,GAAIc,GAA2B,CAChEE,aAAc,KACdC,OAAQ,KACRC,WAAW,IAGb,MAAM,WAAuB,IAAMzG,UACjC,eAAe2G,GACbC,SAASD,GAETZ,GAAgBnG,KAAM,aAAciH,IAClCjH,KAAKD,MAAM6G,OAAOK,EAAMC,cAAcjG,MAAOgG,KAIjD,SACE,MAAME,EAAcnH,KAAKD,OACnB,aACJ4G,EAAY,OACZC,EAAM,UACNC,EAAS,MACT5F,EAAK,SACLkB,GACEgF,EACEC,EAAiBlC,GAAyBiC,EAAa,CAAC,eAAgB,SAAU,YAAa,QAAS,aAE9G,OAAO,IAAME,cAAc,IAAM/F,SAAU,KAAM,IAAM+F,cAAcnF,EAAA,EAAWoC,GAAS,GAAI8C,EAAgB,CAC3GnG,WAAOqG,EACPX,aAAcA,EACdC,OAAQ5G,KAAKuH,WACbV,UAAWA,OAMjB,GAAexG,UAAYA,GAC3B,GAAeqG,aAAeA,GACf,UC1CA,OA1BoB,EACjCc,aACAC,cACAC,eACAC,aAAa,MACX,KAAO,CAAC1G,EAAO2G,KACjB,MAAM,QACJC,GACED,EAMJ,GAJIF,IACFzG,EAAQyG,EAAazG,EAAO2G,IAG1BJ,GAAcK,EAAQC,aAAeH,GAAcA,EAAWC,IAAkB,CAClF,MAAMG,EAAe,CACnBC,aAAcH,EAAQI,YAAcJ,EAAQI,WAAWD,cAEzD,OAAOR,EAAWvG,EAAO2G,EAAgBG,GACpC,OAAIN,EACFA,EAAYxG,EAAO2G,GAGrB3G,GCvBF,MAAMiH,GAAwB,CACnCC,KAAM,OACNC,IAAK,MACLC,eAAgB,iBAChBC,UAAW,YACXC,aAAc,gB,cCLhB,MAAMC,GAAmB,CAAC,QAAS,UACnC,IAAIC,IAAmB,EAChB,MAOMC,GAAmB,IAAIC,KAClC,MAAMC,EAAgBD,EAAU7C,OAAO+C,GAAkB,mBAANA,GAEnD,OAA6B,IAAzBD,EAAchE,OACTgE,EAAc,GAGnBA,EAAchE,OAAS,EAClB,IAAIkE,KACTF,EAAc1C,QAAQ2C,GAAKA,KAAKC,UAFpC,GAQWC,GAAwB,CAACC,EAAWC,KAAe1E,OAAOc,KAAK2D,GAAWE,KAAK5F,GAAO0F,EAAU1F,KAAS2F,EAAU3F,IACnH6F,GAAwBC,IACnC,MAAM,IACJC,EAAG,MACHC,EAAK,OACLC,EAAM,KACNC,EAAI,MACJC,EAAK,OACLC,EAAM,EACNC,EAAC,EACDC,GACER,EAAQD,wBACZ,MAAO,CACLE,MACAC,QACAC,SACAC,OACAC,QACAC,SACAC,IACAC,MAGSC,GAA4B,KACvC,MAAM,YACJC,EAAW,aACXC,GACEC,SAASC,gBACb,MAAO,CACLR,MAAOK,EACPJ,OAAQK,ICtDZ,SAAS,KAA2Q,OAA9P,GAAWxF,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAIpB,KAAOuB,EAAcN,OAAOO,UAAUC,eAAeC,KAAKH,EAAQvB,KAAQmB,EAAOnB,GAAOuB,EAAOvB,IAAY,OAAOmB,IAA2BQ,MAAMjF,KAAM2E,WAEhT,SAAS,GAAyBE,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkEvB,EAAKoB,EAAnED,EAEzF,SAAuCI,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DvB,EAAKoB,EAA5DD,EAAS,GAAQW,EAAab,OAAOc,KAAKR,GAAqB,IAAKH,EAAI,EAAGA,EAAIU,EAAWR,OAAQF,IAAOpB,EAAM8B,EAAWV,GAAQS,EAASG,QAAQhC,IAAQ,IAAamB,EAAOnB,GAAOuB,EAAOvB,IAAQ,OAAOmB,EAFxM,CAA8BI,EAAQM,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBX,GAAS,IAAKH,EAAI,EAAGA,EAAIe,EAAiBb,OAAQF,IAAOpB,EAAMmC,EAAiBf,GAAQS,EAASG,QAAQhC,IAAQ,GAAkBiB,OAAOO,UAAUY,qBAAqBV,KAAKH,EAAQvB,KAAgBmB,EAAOnB,GAAOuB,EAAOvB,IAAU,OAAOmB,EAIne,SAAS,GAAcA,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQkB,EAAUrB,OAAOc,KAAKR,GAAqD,mBAAjCN,OAAOiB,wBAAwCI,EAAUA,EAAQC,OAAOtB,OAAOiB,sBAAsBX,GAAQiB,OAAO,SAAUC,GAAO,OAAOxB,OAAOyB,yBAAyBnB,EAAQkB,GAAKE,eAAmBL,EAAQM,QAAQ,SAAU5C,GAAO,GAAgBmB,EAAQnB,EAAKuB,EAAOvB,MAAa,OAAOmB,EAExd,SAAS,GAAgB2B,EAAK9C,EAAKrC,GAAiK,OAApJqC,KAAO8C,EAAO7B,OAAO8B,eAAeD,EAAK9C,EAAK,CAAErC,MAAOA,EAAOgF,YAAY,EAAMK,cAAc,EAAMC,UAAU,IAAkBH,EAAI9C,GAAOrC,EAAgBmF,EAQ3M,MAAM,GAAY,GAAc,GAAI,KAAU/F,UAAW,CACvD4H,WAAY,IAAUiC,MAAM,CAC1BC,qBAAsB,IAAUC,MAAM7F,OAAO8F,OAAOnC,KACpDoC,kBAAmB,IAAU/J,KAC7BgK,gBAAiB,IAAUhK,KAC3BiK,eAAgB,IAAUjK,OACzBkK,WAGHC,WAAY,IAAUnK,OAGlB,GAAe,GAAc,GAAI,KAAUmG,aAAc,CAC7DuB,WAAY,KACZyC,WAAY,SAAMpD,IAuBdqD,GAAQ,CAAC1D,EAAO2D,EAAKC,EAAU9C,GACnC2C,aACAzC,iBAEA,MAAM,OACJxD,GACEwC,EACE6D,EAAOrG,EAAOsG,QAAQ,cACtBC,EAAaC,SAASH,GAAQA,EAAKI,aAAa,YAAa,IAEnE,IAAIZ,EAEJ,IAHuBa,OAAOC,MAAMJ,IAGf/C,GAAsD,mBAAjCA,EAAWqC,kBAAkC,CAErF,MAAMe,EAAY5G,EAAOsG,QAAQ,QAC3BO,EAAYD,GAAaP,EAAKS,SAASF,IAAaA,EAAUH,aAAa,OAAgB,KAE5FI,GDpEqB,EAACV,EAAKnG,MAC7BmG,EAAI9C,WAAa8C,EAAIY,iBAAmBhD,GAAiBlD,QAAQb,EAAOgH,UAAY,IAAMhD,KAC7FA,IAAmB,EAEnBiD,QAAQC,QAAQnD,GAAiBoD,KAAK,6ECiEpCC,CAAejB,EAAKnG,GAGtB6F,EAAoB,KAClBrC,EAAWqC,kBAAkBrD,EAAO2D,EAAK,GAAc,GAAIC,EAAU,CACnEiB,YAAad,EACbM,gBAMNS,WAAW,KACJnB,EAAI9C,UAOEwC,GACTA,KAPAI,EAAWzD,EAAO2D,EAAKC,EAAU9C,GAE7BuC,GAEFyB,WAAWzB,EAAmB,KAKjC,IAGC,GAAQ0B,IACZ,IAAI,cACFC,EAAa,KACbC,EAAI,WACJjE,EAAU,WACVyC,GACEsB,EACAjM,EAAQ,GAAyBiM,EAAM,CAAC,gBAAiB,OAAQ,aAAc,eAEnF,MAAMR,EAAiBU,EAAKC,KAAKvB,GAAOA,EAAI9C,WACtCsE,EAAaF,EAAKG,IAAIzB,GAAO,GAAc,GAAIA,EAAK,CACxD3C,aACAuD,oBAGF,MA/EgCU,KAChC,MAAMI,EAAuB,IAAIC,IAAIL,EAAKG,IAAI,CAACzB,EAAK4B,IAAQ,aAAc5B,EAAKsB,GAAQM,EAAM,MAAM1G,OAAO8E,GAAe,OAARA,IAEjHsB,EAAKpG,OAAO,CAAC8E,EAAK4B,SAAuBlF,IAAfsD,EAAI6B,QAAwB7B,EAAI9C,WAAawE,EAAqBI,IAAIF,IAAQ5B,EAAI+B,8BAAgCT,EAAKtB,EAAI6B,QAAQ3E,WAAW5B,QAAQ0E,IAC9KsB,EAAKtB,EAAI6B,QAAQG,gBAAiB,EAClChC,EAAIiC,iBAAkB,IAExB,MAAMC,EAAiBZ,EAAKpG,OAAO,CAAC8E,EAAK4B,KAAS5B,EAAI6B,QAAUH,EAAqBI,IAAIF,IAAMO,MAE/F,GAAID,GAAkBA,EAAeD,gBAAiB,CACpD,IAAIG,EAAYF,EAEhB,UAA4BxF,IAArB0F,EAAUP,QAAwBO,EAAUL,8BACjDK,EAAYd,EAAKc,EAAUP,QAG7BO,EAAUC,qBAAsB,IA8DlCC,CAA0Bd,GACnB,IAAM/E,cAAc4E,EAAe,GAAS,GAAIlM,EAAO,CAC5DmM,KAAME,EACN1B,WAAY,CAACzD,EAAO2D,EAAKC,EAAU9C,IAAiB4C,GAAM1D,EAAO2D,EAAKC,EAAU9C,EAAc,CAC5F2C,aACAzC,mBAKN,GAAK5H,UAAY,CACf4L,cAAe,IAAUkB,KAAK1C,WAC9ByB,KAAM,IAAUjI,MAChBgE,WAAY,IAAUmF,IACtB1C,WAAY,IAAUnK,MAExB,GAAKmG,aAAe,CAClBwF,KAAM,GACNjE,WAAY,KACZyC,WAAY,SAAMpD,GAgCL,OA7BW2E,IACxB,MAAMoB,EAAkBC,IACtB,IAAI,WACFrF,EAAU,WACVyC,GACE4C,EACAvN,EAAQ,GAAyBuN,EAAO,CAAC,aAAc,eAE3D,OAAO,IAAMjG,cAAckG,GAAA,EAAaC,SAAU,KAAOC,IACvD,IAAI,KACFvB,GACEuB,EACAC,EAAgB,GAAyBD,EAAO,CAAC,SAErD,OAAO,IAAMpG,cAAc,GAAM,GAAS,GAAIqG,EAAe,CAC3DxB,KAAMA,GACLnM,EAAO,CACRkI,WAAYA,EACZyC,WAAYA,EACZuB,cAAeA,QAOrB,OAFAoB,EAAehN,UAAY,GAC3BgN,EAAe3G,aAAe,GACvB2G,G,kDC/JT,SAAS,GAAc5I,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQkB,EAAUrB,OAAOc,KAAKR,GAAqD,mBAAjCN,OAAOiB,wBAAwCI,EAAUA,EAAQC,OAAOtB,OAAOiB,sBAAsBX,GAAQiB,OAAO,SAAUC,GAAO,OAAOxB,OAAOyB,yBAAyBnB,EAAQkB,GAAKE,eAAmBL,EAAQM,QAAQ,SAAU5C,GAAO,GAAgBmB,EAAQnB,EAAKuB,EAAOvB,MAAa,OAAOmB,EAExd,SAAS,GAAgB2B,EAAK9C,EAAKrC,GAAiK,OAApJqC,KAAO8C,EAAO7B,OAAO8B,eAAeD,EAAK9C,EAAK,CAAErC,MAAOA,EAAOgF,YAAY,EAAMK,cAAc,EAAMC,UAAU,IAAkBH,EAAI9C,GAAOrC,EAAgBmF,EAM3M,MAAMuH,GAAe5N,GAAS,IAAMsH,cAAcpH,EAAA,EAAQF,EAAO,IAAMsH,cAAc,KAAW,OAEhGsG,GAAatN,UAAY,GAAc,GAAIJ,EAAA,EAAOI,WAClDsN,GAAajH,aAAe,GAAc,GAAIzG,EAAA,EAAOyG,aAAc,CACjExG,QAAS,UAEI,U,UCdf,SAAS,GAAcuE,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQkB,EAAUrB,OAAOc,KAAKR,GAAqD,mBAAjCN,OAAOiB,wBAAwCI,EAAUA,EAAQC,OAAOtB,OAAOiB,sBAAsBX,GAAQiB,OAAO,SAAUC,GAAO,OAAOxB,OAAOyB,yBAAyBnB,EAAQkB,GAAKE,eAAmBL,EAAQM,QAAQ,SAAU5C,GAAO,GAAgBmB,EAAQnB,EAAKuB,EAAOvB,MAAa,OAAOmB,EAExd,SAAS,GAAgB2B,EAAK9C,EAAKrC,GAAiK,OAApJqC,KAAO8C,EAAO7B,OAAO8B,eAAeD,EAAK9C,EAAK,CAAErC,MAAOA,EAAOgF,YAAY,EAAMK,cAAc,EAAMC,UAAU,IAAkBH,EAAI9C,GAAOrC,EAAgBmF,EAM3M,MAAMwH,GAAgB7N,GAAS,IAAMsH,cAAcpH,EAAA,EAAQF,EAAO,IAAMsH,cAAc,KAAW,OAEjGuG,GAAcvN,UAAY,GAAc,GAAIJ,EAAA,EAAOI,WACnDuN,GAAclH,aAAe,GAAc,GAAIzG,EAAA,EAAOyG,aAAc,CAClExG,QAAS,YAEI,UCbf,MAEa2N,GAAgBC,GAAA,EAAWC,MAAM,oyCAoEjCC,GACO,2BADPA,GAEa,kCAFbA,GAGA,CACTC,qBAAsB,gCACtBC,oBAAqB,8BACrBC,QAAS,eACT9E,IAAK,WACLE,OAAQ,cACR6E,KAAM,aC1EVP,GAAcQ,SAEd,MAgBMC,GAAiB,EACrBC,UACEC,qBACAC,qBAEFC,YACAC,WACAC,cACAC,eACAC,iBAEA,GAAmB,MAAfF,EACF,OAAO,KAGT,MAAM,OACJG,EAAM,IACNnE,GACEgE,EACEI,EAAgBH,EAnCG,EAACE,EAAQE,EAAeb,KACjD,MAAMc,EAAYd,GAAQ,EAAI,EAC9B,MAAO,CACL7E,OAAQwF,EAAOrF,OAASuF,EAAc5F,IAAM,EAAI6F,EAChD5F,MAAOyF,EAAOtF,MAAQwF,EAAc3F,MAAQ,KA+BT6F,CAAmBJ,EAAQnE,EAAKkE,GA3BzC,EAACC,EAAQE,EAAeb,KACpD,MAAMc,EAAYd,GAAQ,EAAI,EAC9B,MAAO,CACL/E,IAAK4F,EAAc1F,OAAS,EAAI2F,EAChC5F,MAAOyF,EAAOtF,MAAQwF,EAAc3F,MAAQ,KAuBqC8F,CAAsBL,EAAQnE,EAAKkE,GAChHnL,EAAY,aAAI,GAA+BkL,EAAe,GAAiBxF,IAAM,GAAiBE,OAAQuF,GAAc,GAAiBV,MACnJ,OAAO,IAAM/G,cAAc,MAAO,CAChC5D,MAAOuL,EACPrL,UAAWA,EACXL,IAAK,kBACJ,IAAM+D,cAAc,GAAe,CACpC/D,IAAK,UACL,aAAckL,EACda,UAAWX,IACT,IAAMrH,cAAc,GAAc,CACpC/D,IAAK,SACL,aAAcmL,EACdY,UAAWV,MAIfL,GAAe5H,aAAe,CAC5BgI,UAAW,SAAMpH,EACjBqH,SAAU,SAAMrH,EAChBuH,cAAc,EACdC,YAAY,EACZF,iBAAatH,EACbiH,SAAU,CACRC,mBAAoB,OACpBC,kBAAmB,WAGvBH,GAAejO,UAAY,CAEzBqO,UAAW,IAAUnO,KAGrBoO,SAAU,IAAUpO,KAGpBqO,YAAa,IAAU1E,MAAM,CAC3B6E,OAAQ,IAAU7E,MAAM,CACtBT,MAAO,IAAU6F,OACjB5F,OAAQ,IAAU4F,SAEpB1E,IAAK,IAAUV,MAAM,CACnBb,IAAK,IAAUiG,OACf/F,OAAQ,IAAU+F,OAClB9F,KAAM,IAAU8F,OAChBhG,MAAO,IAAUgG,WAGrBT,aAAc,IAAU/H,KACxBgI,WAAY,IAAUhI,KACtByH,SAAU,IAAUrE,MAAM,CACxBsE,mBAAoB,IAAUtK,OAC9BuK,kBAAmB,IAAUvK,UAGlB,UClGf,SAAS,KAA2Q,OAA9P,GAAWK,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAIpB,KAAOuB,EAAcN,OAAOO,UAAUC,eAAeC,KAAKH,EAAQvB,KAAQmB,EAAOnB,GAAOuB,EAAOvB,IAAY,OAAOmB,IAA2BQ,MAAMjF,KAAM2E,WAEhT,SAAS,GAAyBE,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAAkEvB,EAAKoB,EAAnED,EAEzF,SAAuCI,EAAQM,GAAY,GAAc,MAAVN,EAAgB,MAAO,GAAI,IAA2DvB,EAAKoB,EAA5DD,EAAS,GAAQW,EAAab,OAAOc,KAAKR,GAAqB,IAAKH,EAAI,EAAGA,EAAIU,EAAWR,OAAQF,IAAOpB,EAAM8B,EAAWV,GAAQS,EAASG,QAAQhC,IAAQ,IAAamB,EAAOnB,GAAOuB,EAAOvB,IAAQ,OAAOmB,EAFxM,CAA8BI,EAAQM,GAAuB,GAAIZ,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBX,GAAS,IAAKH,EAAI,EAAGA,EAAIe,EAAiBb,OAAQF,IAAOpB,EAAMmC,EAAiBf,GAAQS,EAASG,QAAQhC,IAAQ,GAAkBiB,OAAOO,UAAUY,qBAAqBV,KAAKH,EAAQvB,KAAgBmB,EAAOnB,GAAOuB,EAAOvB,IAAU,OAAOmB,EAIne,SAAS,GAAcA,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQkB,EAAUrB,OAAOc,KAAKR,GAAqD,mBAAjCN,OAAOiB,wBAAwCI,EAAUA,EAAQC,OAAOtB,OAAOiB,sBAAsBX,GAAQiB,OAAO,SAAUC,GAAO,OAAOxB,OAAOyB,yBAAyBnB,EAAQkB,GAAKE,eAAmBL,EAAQM,QAAQ,SAAU5C,GAAO,GAAgBmB,EAAQnB,EAAKuB,EAAOvB,MAAa,OAAOmB,EAExd,SAAS,GAAgB2B,EAAK9C,EAAKrC,GAAiK,OAApJqC,KAAO8C,EAAO7B,OAAO8B,eAAeD,EAAK9C,EAAK,CAAErC,MAAOA,EAAOgF,YAAY,EAAMK,cAAc,EAAMC,UAAU,IAAkBH,EAAI9C,GAAOrC,EAAgBmF,EAY3MyH,GAAcQ,SAEd,MAAM,GAAY,GAAc,GAAI,KAAqBhO,UAAW,CAClEkP,MAAO,IAAUhP,KACjBoD,UAAW,IAAUO,OACrBsL,SAAU,IAAUjP,KACpBkP,SAAU,IAAUlP,KACpBqK,IAAK,IAAUV,MAAM,CACnBnG,OAAQ,IAAU+C,KAClB4I,WAAY,IAAU5I,KACtBgB,UAAW,IAAUhB,KACrB0E,eAAgB,IAAU1E,KAC1B6I,eAAgB,IAAU7I,KAC1B8I,cAAe,IAAU9I,KACzB8F,eAAgB,IAAU9F,KAC1B+F,gBAAiB,IAAU/F,KAC3BmG,oBAAqB,IAAUnG,KAC/BmB,WAAY,IAAU4H,SAExBhF,SAAU,IAAUgF,SAGhB,GAAe,GAAc,GAAI,KAAqBnJ,aAAc,CACxE6I,WAAOjI,EACP3D,UAAW,GACX6L,cAAUlI,EACVmI,cAAUnI,EACVsD,IAAK,CACH7G,YAAQuD,EACRoI,gBAAYpI,EACZQ,eAAWR,EACXkE,oBAAgBlE,EAChBqI,oBAAgBrI,EAChBsI,mBAAetI,EACfsF,oBAAgBtF,EAChBuF,qBAAiBvF,EACjB2F,yBAAqB3F,EACrBW,gBAAYX,GAEduD,SAAU,OAKNiF,GAA0B,CAC9BxH,UAAW,CACTyH,uBAAwB,EACtBvE,iBACAmE,oBACInE,GAAkBmE,EACxBK,oBAAqB,KAAM,EAC3BC,gBAAiB,KAAM,EACvBC,cAAe,KAAM,EACrBC,cAAe,EACb3E,iBACAmE,oBACI,aAAI,GAAyBnE,GAAkBmE,GAAkB,GAAiB1B,uBAE1F1F,aAAc,CACZwH,uBAAwB,EACtBvE,iBACAoE,mBACIpE,GAAkBoE,EACxBI,oBAAqB,KAAM,EAC3BC,gBAAiB,KAAM,EACvBC,cAAe,KAAM,EACrBC,cAAe,EACb3E,iBACAoE,mBACI,aAAI,GAAyBpE,GAAkBoE,GAAiB,GAAiB1B,sBAEzF9F,IAAK,CACH2H,uBAAwB,EACtBjI,YACA+E,kBACAI,sBACAL,iBACAgD,mBACI9H,KAAe8E,GAAkBC,MACrCA,GAAmB+C,MACnBhD,IAAmBK,GAErB+C,oBAAqB,KAAM,EAC3BC,gBAAiB,EACfL,gBACA3C,yBACI2C,GAAiB3C,EACvBiD,cAAe,KAAM,EACrBC,cAAe,EACbrI,eACI,aAAI,GAAyBA,GAAa,GAAiBqG,UAEnE9F,eAAgB,CACd0H,uBAAwB,KAAM,EAC9BC,oBAAqB,KAAM,EAC3BC,gBAAiB,KAAM,EACvBC,cAAe,KAAM,EACrBC,cAAe,EACbrI,eACI,aAAI,GAAyBA,GAAa,GAAiBqG,UAEnEhG,KAAM,CACJ4H,uBAAwB,KAAM,EAC9BC,oBAAqB,KAAM,EAC3BC,gBAAiB,KAAM,EACvBC,cAAe,KAAM,EACrBC,cAAe,IAAM,aAAI,MAIvBC,GAAuB,EAC3BnI,gBACI6H,GAAwB7H,GAAcA,EAAWkC,uBAAyB2F,GAAwB5H,GAAsBC,MAmJ/G,OAjJYkI,IACzB,MAAMC,UAAmB,IAAMlQ,UAC7B,YAAYL,GACViH,MAAMjH,GAEN,GAAgBC,KAAM,uBAAwBuQ,IAC5CvQ,KAAKkB,SAASsP,GAAYjM,OAAOc,KAAKkL,GAAUrH,KAAK5F,IAAQyF,GAAsBwH,EAASjN,GAAMkN,EAASlN,KAASiN,EAAW,QAGjI,GAAgBvQ,KAAM,oBAAqBoJ,IACrCA,IACFpJ,KAAKoJ,QAAUA,EACfpJ,KAAKyQ,UAAYrH,EAAQ2B,QAAQ,UAGnC/K,KAAK0Q,wBAGP,GAAgB1Q,KAAM,sBAAuB,KACvCA,KAAKoJ,SACPpJ,KAAK2Q,qBAAqB,CACxB1B,cAAe9F,GAAsBnJ,KAAKoJ,aAKhD,GAAgBpJ,KAAM,eAAgBiH,IACpCjH,KAAK0Q,wBAGP,GAAgB1Q,KAAM,eAAgBiH,IACpCjH,KAAK4Q,wBACL5Q,KAAK0Q,wBAGP1Q,KAAKc,MAAQ,GAAc,CACzBmO,cAAe,GACfF,OAAQ,IACPuB,EAAWO,yBAAyB9Q,IAGzC,oBACMC,KAAKc,MAAMiP,wBACb/P,KAAK4Q,wBAIT,wBACE5Q,KAAK2Q,qBAAqB,CACxB5B,OAAQlF,OAIZ,yBACE,MAAM1C,EAAcnH,KAAKD,OACnB,IACJ6K,EAAG,SACHC,GACE1D,EACEpH,EAAQ,GAAyBoH,EAAa,CAAC,MAAO,cAEtD,cACJyI,EAAa,gBACb/C,EAAe,oBACfI,EAAmB,WACnBhF,GACE2C,EAEJ,IAAK3C,EACH,OAAO,KAGT,MAAM,gBACJsC,EAAe,eACfC,GACEvC,EACE6I,EAAoBV,GAAqBxF,GAC/C,IAAImG,EAEJ,GAAI/Q,KAAKoJ,SAAWpJ,KAAKc,MAAMmO,cAAe,CAC5C,MAAM+B,EAAUF,EAAkBd,sBAAwB,GAAKnF,EACzDoG,EAAeH,EAAkBd,sBAAwB,KAAOpF,EACtEmG,EAAiB,wBAAa,IAAM1J,cAAc,GAAgB,GAAS,GAAItH,EAAO,CACpF2O,UAAWzH,GAASsD,EAAgBtD,EAAOgK,EAAcD,GACzDrC,SAAU1H,GAASuD,EAAevD,EAAOgK,EAAcD,GACvDnC,aAAciC,EAAkBb,gBAAgB,CAC9CL,gBACA/C,kBACAI,wBAEF6B,WAAYgC,EAAkBZ,gBAC9BtB,YAAa,CACXG,OAAQ/O,KAAKc,MAAMiO,OACnBnE,IAAKzB,GAAsBnJ,KAAKoJ,aAE/BpJ,KAAKyQ,UAAYzQ,KAAKyQ,UAAUS,WAAalH,SAASmH,MAG7D,OAAOJ,EAGT,SACE,MAAM,MACJxB,EAAK,UACL5L,EAAS,SACT6L,EAAQ,SACRC,EACA7E,KAAK,eACH+E,EAAc,cACdC,EAAa,UACb9H,EAAS,eACT0D,EAAc,WACdvD,IAEAjI,KAAKD,OACH,uBACJgQ,GACE/P,KAAKc,MACHsQ,EAAchB,GAAqB,CACvCnI,eACCkI,cAAc,CACfrI,YACA0D,iBACAmE,iBACAC,kBAEF,OAAO,IAAMvI,cAAc,IAAM/F,SAAU,KAAM,IAAM+F,cAAcgJ,EAAqB,GAAS,GAAIrQ,KAAKD,MAAO,CACjHwP,MAAO7G,GAAiB1I,KAAKqR,kBAAmB9B,GAChD5L,UAAW,KAAWyN,EAAazN,GACnC6L,SAAU9G,GAAiBqH,GAA0B/P,KAAKsR,aAAc9B,GACxEC,SAAU/G,GAAiBqH,GAA0B/P,KAAKuR,aAAc9B,MACrEM,GAA0B/P,KAAKwR,2BAWxC,OANA,GAAgBlB,EAAY,2BAA4B,CAACvQ,EAAOe,KAAU,CACxEiP,uBAAwBK,GAAqBrQ,EAAM6K,KAAKmF,uBAAuBhQ,EAAM6K,QAGvF0F,EAAWjQ,UAAY,GACvBiQ,EAAW5J,aAAe,GACnB4J,G,wBCvNHmB,G,YACF,WAAY1R,GAAO,mBACf,4BAAMA,KACD2R,mBAAqB,EAAKA,mBAAmB7Q,KAAxB,aAC1B,EAAK8Q,QAAU,EAAKA,QAAQ9Q,KAAb,aACf,EAAK+Q,iBAAmB,EAAKA,iBAAiB/Q,KAAtB,aACxB,EAAKgR,uBAAyB,EAAKA,uBAAuBhR,KAA5B,aAE9B,EAAKd,MAAM+R,kBAAkB,EAAK/R,MAAMgS,cAExC,EAAKC,OAAS,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAUpG,EAArB,EAAqBA,YAAaqG,EAAlC,EAAkCA,KAAlC,gBACPF,EAAOG,SADA,YACYF,EADZ,YACwBpG,GADxB,OACsCqG,EAAO,IAAH,OAAOA,GAAS,KAExE,IAmEIE,EAnEEC,EAAoB,SAACrR,EAAD,OAAUgR,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,SAAUrK,EAA5B,EAA4BA,QAASiE,EAArC,EAAqCA,YAAa9D,EAAlD,EAAkDA,aAAlD,OACtB,kBAACuK,GAAA,EAAD,KACM1K,EAAQnF,KAAK8P,QAAQnG,IAAI,SAACoG,EAAQjG,GAChC,IAAMkG,EAAc,CAChBC,WAAYnG,GAAO,MACnBoG,QAAS,eACTnJ,MAAO,OAGLoJ,EAAK,EAAKb,OAAO,CAAEE,WAAUpG,cAAamG,SAAQE,KAAM,UAAF,OAAY3F,KAExE,OACI,kBAAC,GAAD,CACIqG,GAAKA,EACLvP,IAAMuP,EACNlM,aAAe8L,EACfhP,MAAQiP,EACR9L,OAAS,SAAAkM,GAAQ,OACb,EAAK3Q,SAAS2Q,EAAU,CACpBZ,WACAa,YAAavG,KAGrB3F,UAAYmB,IAAiB6K,QAO3CG,EAAqB,SAAC/R,EAAD,GAA4D,IAAlDgR,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,SAAUpG,EAAgC,EAAhCA,YAAa9D,EAAmB,EAAnBA,aAC1D6K,EAAK,EAAKb,OAAO,CAAEE,WAAUpG,cAAamG,SAAQE,KAAM,gBAC9D,OACI,kBAAC,GAAD,CACIU,GAAKA,EACLvP,IAAMuP,EACNlM,aAAe1F,EACf2F,OAAS,SAAAkM,GAAQ,OACb,EAAK3Q,SAAS2Q,EAAU,CACpBZ,WACApG,iBAGRjF,UAAYmB,IAAiB6K,KAKnCI,EAAqBC,GAA2B,CAClDzL,YAAa,SAACxG,EAAD,OAAU4G,EAAV,EAAUA,QAAV,OACTA,EAAQ9C,eAAe,UACnB,kBAACwN,GAAA,EAAD,KAAwB1K,EAAQnF,KAAK8P,QAAQ1M,OAAO,SAAAqN,GAAC,OAAIA,IAAGvH,KAAK,OAEjE3K,GAERuG,WAAY,SAACvG,EAAD,KAAyE,IAA/DgR,EAA+D,EAA/DA,OAAQnG,EAAuD,EAAvDA,YAAaoG,EAA0C,EAA1CA,SAAUrK,EAAgC,EAAhCA,QAAaG,EAAmB,EAAnBA,aAE9D,OADiBH,EAAQ9C,eAAe,UAAYuN,EAAoBU,GACxD/R,EAAO,CAAE4G,UAASoK,SAAQC,WAAUpG,cAAa9D,oBAIrEkE,EAAO,KAAK,IAAIkH,MAAM,IAAK/G,IAAI,kBAC/B,KAAK,IAAI+G,MAAM,IAAK/G,IAAI,SAACgH,GAAD,OACpB,kBAAC,WAAD,CAAU/P,IAAM+P,EAAQtR,KAAOuR,eAAaC,SA3ErC,OAkFXlB,EADA,EAAKtS,MAAM0C,aACG,EAAK1C,MAAM0C,aAAarB,aAExB,GAGlB,EAAKN,MAAQ,CACT0S,eAAgB,CAAE,OAAQ,SAC1BC,QAAS,CACL,CACIC,MAAO,OACPC,eAAgB,CAAEV,IAEtB,CACIS,MAAO,QACPC,eAAgB,CAAEV,KAG1B/G,OACA0H,iBAAkB,KAClB5L,aAAc,KACdjH,aAAcsR,EACdwB,SAAU,GACVC,UAAW,GACXC,gBAAgB,EAChBC,sBAAsB,EACtBC,iBAAa3M,EACb4M,uBAAuB,GAG3B,EAAKC,mBAAqB,SAAAlT,GACtB,EAAKC,SAAS,CAAEH,aAAcE,KAGlC,EAAKmT,eAAiB,SAAAnT,GAClB,EAAKC,SAAS,CAAE2S,SAAU5S,KAG9B,EAAKoT,gBAAkB,SAAApT,GACnB,EAAKC,SAAS,CAAE4S,UAAW7S,KAG/B,EAAKL,mBAAqB,WAAM,IACpBG,EAAiB,EAAKD,MAAtBC,aADoB,EAEY,EAAKhB,MAEzCuU,EAAU,CAAElT,aAAcL,IAG9BwT,EAP4B,EAEpBA,eAFoB,EAEL9R,aAKIoQ,GAAIyB,GAC/B,EAAKE,wBACL,EAAKC,+BAGT,EAAKtS,SAAW,SAAClB,EAAD,GAAmD,IAAzCiR,EAAyC,EAAzCA,SAAUpG,EAA+B,EAA/BA,YAAaiH,EAAkB,EAAlBA,YAC7C,EAAK7R,SAAS,YAAc,IAAXgL,EAAW,EAAXA,KAAW,EACgB,EAAKnM,MAArC0C,EADgB,EAChBA,aAAc8R,EADE,EACFA,cAEhB3J,GADNsB,EAAO,KAAKA,IACKgG,GACjB,GAAIa,QACAnI,EAAIlI,KAAK8P,QAAQO,GAAe9R,MAC7B,CACH,IAAMyT,EAAqB5I,EAAc,EACzClB,EAAI+J,MAAMD,GAAsBzT,EAGpC,IAAIqT,EAAU,EAAKM,aAAa1I,EAAMgG,GAGtC,OAFAqC,EAAc9R,EAAaoQ,GAAIyB,GAExB,CAAEpI,OAAMlE,aAAc,SAIrC,EAAK4M,aAAe,SAAC1I,EAAMgG,GACvB,IAAItH,EAAMsB,EAAKgG,GACXoC,EAAU,GACVO,EAAqB,GAGzB,GAAIjK,EAAI6B,QAAyB,IAAf7B,EAAI6B,OAAc,CAChC,IAAIO,EAAYd,EAAKtB,EAAI6B,QACrBqI,EAAY5I,EAAKpG,OAAO,SAAS8E,GACjC,OAAOA,EAAI6B,SAAWP,EAAKgG,GAAUzF,SAExCJ,IAAI,SAASzB,GACV,MAAO,CAAEuH,KAAMvH,EAAIlI,KAAK8P,QAAQ,GAAIvR,MAAO2J,EAAIlI,KAAK8P,QAAQ,MAGhEqC,EAAmBE,KAAK,CACpB5C,KAAMnF,EAAU2H,MAAM,GACtBtK,OAAQyK,IAGZR,EAAQjT,eAAiBwT,OAEzBA,EAAmBE,KAAK,CACpB5C,KAAMvH,EAAI+J,MAAM,GAAI1T,MAAO2J,EAAI+J,MAAM,KAGzCL,EAAQjT,eAAiBwT,EAI7B,OAAOP,GAGX,EAAKhK,kBAAoB,SAACrD,EAAO+N,EAAR,GAA6D,IAAvC9C,EAAuC,EAAvCA,SAAUpG,EAA6B,EAA7BA,YAAaR,EAAgB,EAAhBA,UAI9DA,IAAc,EAAKxK,MAAMkH,cAAgBgN,EAAWlN,WAFpC,IAEiDgE,GACjE,EAAK5K,SAAS,gBAAGgL,EAAH,EAAGA,KAAH,MAAe,CACzBlE,aAAcsD,EACdY,KAAMA,EAAKG,IAAI,SAACzB,EAAKiI,GAKjB,OAJIA,IAAOX,GAPA,IAOYpG,GAAkClB,EAAI7F,eAAe,YACxE6F,EAAI7G,QAAU6G,EAAI7G,QAGf6G,QAMvB,EAAKqK,YAAc,SAACC,EAAOhJ,GAAR,YAAyC5E,IAAvB4E,EAAKgJ,GAAOzI,OAAuByI,EAAQhJ,EAAKgJ,GAAOzI,QAC5F,EAAK0I,WAAa,SAACD,EAAOhJ,GAAR,YACS5E,IAAvB4E,EAAKgJ,GAAOzI,OACNP,EAAKG,IAAI,SAACzB,EAAK4B,GAAN,OAAe5B,EAAI6B,SAAWyI,EAAQ1I,EAAM,OAAOtD,KAAK,SAAAsD,GAAG,OAAY,OAARA,IACxE0I,GAEV,EAAKE,kBAAoB,SAACnO,EAAOiO,GAC7B,EAAKhU,SAAS,YAA+B,IAA5BgL,EAA4B,EAA5BA,KACb,IADyC,EAAtBmJ,gBACG,CAClB,IAAIC,EAAS,QACRJ,EAAQhJ,EAAKgJ,IAGlB,MAAO,CACHtB,iBAAkB2B,KAAKxH,MAAMwH,KAAKC,UAAUF,IAC5CpJ,KAAMA,EAAKG,IAAI,SAACzB,EAAKiI,GAEjB,OADAjI,EAAI9C,YAAcwN,EAAOzC,GAClBjI,SAS3B,EAAKL,gBAAkB,WACnB,EAAKrJ,SAAS,YAAgC,IAA7BgL,EAA6B,EAA7BA,KAAM0H,EAAuB,EAAvBA,iBAMnB,OALA1H,EAAO,KAAKA,GACZ3H,OAAOc,KAAKuO,GAAkB1N,QAAQ,SAAA5C,GAClC4I,EAAK5I,GAAKwE,WAAY,IAGnB,CACHoE,OACA0H,iBAAkB,KAClB5L,aAAc,SAK1B,EAAKwC,eAAiB,WAClB,EAAKtJ,SAAS,YAAgC,IAA7BgL,EAA6B,EAA7BA,KAAM0H,EAAuB,EAAvBA,iBAMnB,OALA1H,EAAO,KAAKA,GACZ3H,OAAOc,KAAKuO,GAAkB1N,QAAQ,SAAA5C,GAClC4I,EAAK5I,GAAOsQ,EAAiBtQ,KAG1B,CACH4I,OACA0H,iBAAkB,KAClB5L,aAAc,SAK1B,EAAKyN,WAAa,SAACxO,EAAOyO,EAAQ3R,GAAW,IACjCmI,EAAS,EAAKpL,MAAdoL,KACRA,EAAKwJ,GAAQ3R,OAASA,EACtB,EAAK7C,SAAS,CACVgL,UAIR,EAAKyJ,qBAAuB,SAAC1O,EAAOiO,GAChC,EAAKhU,SAAS,CACV+S,YAAaiB,EACbnB,gBAAgB,KAIxB,EAAK6B,eAAiB,SAAA/N,GAAO,OACzBA,EAAQ2D,eACF,KACqB,KAArB3D,EAAQ8M,MAAM,GACV,CACE,CACIjB,MAAO,WACPvT,QAAS,EAAKwV,uBAGpB,CACE,CACIjC,MAAO,OACPvT,QAAS,EAAKiV,qBAIlC,EAAKS,cAAgB,WAAM,IACf9B,EAAmB,EAAKjT,MAAxBiT,eACR,EAAK7S,SAAS,CACV6S,gBAAiBA,EACjBF,SAAU,GACVC,UAAW,MAInB,EAAKgC,oBAAsB,WAAM,IACrB9B,EAAyB,EAAKlT,MAA9BkT,qBACR,EAAK9S,SAAS,CACV8S,sBAAuBA,EACvBH,SAAU,MAIlB,EAAKW,sBAAwB,WACzB,EAAKtT,SAAS,CACV2S,SAAU,GACVC,UAAW,GACXC,gBAAgB,EAChBC,sBAAsB,EACtBC,iBAAa3M,KAIrB,EAAKmN,4BAA8B,WAAM,IAC7BP,EAA0B,EAAKpT,MAA/BoT,sBAER,EAAKhT,SAAS,CACVgT,uBAAwBA,KApUjB,E,mEAsVf6B,EAF8B/V,KAAKD,MAA3BgW,uB,yCAKO,MACuD/V,KAAKc,MAAnEiT,EADO,EACPA,eAAgBC,EADT,EACSA,qBAAsBH,EAD/B,EAC+BA,SAAUC,EADzC,EACyCA,UAuExD,OApEKC,GAAmBC,EAwBH,kBAAC,IAAM1S,SAAP,KACb,kBAAC0U,EAAA,EAAD,CAASrS,UAAU,kBACf,kBAACsS,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,aAEI,kBAAChU,EAAA,EAAD,CAAWjB,MAAQ4S,EAAWlU,KAAK,OAAOwC,SAAWnC,KAAKoU,eAAiBhS,aAAW,eAExF2R,EACI,kBAACmC,EAAA,EAAD,cAEE,kBAAChU,EAAA,EAAD,CAAWjB,MAAQ6S,EAAYnU,KAAK,OAAOwC,SAAWnC,KAAKqU,gBAAkBjS,aAAW,gBAE1F,OAId,kBAAC4T,EAAA,EAAD,CAASrS,UAAU,kBACf,kBAACsS,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACjW,EAAA,EAAD,CACIC,QAAQ,UACRC,QAAUH,KAAK2R,SAFnB,WAMJ,kBAACuE,EAAA,EAAD,KACMnC,EACI,kBAAC9T,EAAA,EAAD,CACEC,QAAQ,SACRC,QAAUH,KAAK6V,eAFjB,UAKA,kBAAC5V,EAAA,EAAD,CACEC,QAAQ,SACRC,QAAUH,KAAK8V,qBAFjB,cAvDL,kBAACE,EAAA,EAAD,CAASrS,UAAU,kBAChC,kBAACsS,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACjW,EAAA,EAAD,CACIC,QAAQ,UACRC,QAAUH,KAAK8V,qBACf,kBAAC,KAAD,MAHJ,qBAQR,kBAACG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACjW,EAAA,EAAD,CACIC,QAAQ,UACRC,QAAUH,KAAK6V,eACf,kBAAC,KAAD,MAHJ,iB,gCAyDV,IAGFM,EAHE,EAC6CnW,KAAKc,MAAhD+S,EADF,EACEA,SAAUC,EADZ,EACYA,UAAWG,EADvB,EACuBA,YAAa/H,EADpC,EACoCA,KADpC,EAEkClM,KAAKD,MAArC0C,EAFF,EAEEA,aAAc8R,EAFhB,EAEgBA,cAItB,GAAIT,EACA,GAAIG,GAA+B,IAAhBA,EAAmB,CAClC,IAAIjH,EAAYd,EAAK+H,GACjBY,EAAqB,GAGrBC,EAAY5I,EAAKpG,OAAO,SAAS8E,GACjC,OAAOA,EAAI6B,SAAWwH,IAEzB5H,IAAI,SAASzB,GACV,MAAO,CAAEuH,KAAMvH,EAAIlI,KAAK8P,QAAQ,GAAIvR,MAAO2J,EAAIlI,KAAK8P,QAAQ,MAGhEsC,EAAUC,KAAK,CACX5C,KAAM0B,EACN5S,MAAO6S,IAGXe,EAAmBE,KAAK,CACpB5C,KAAMnF,EAAU2H,MAAM,GACtBtK,OAAQyK,IAGZqB,EAAkB,CAAE9U,eAAgBwT,QAEpCsB,EAAkB,CACd9U,eAAgB,CACZ,CACI8Q,KAAM0B,EACN5S,MAAO6S,UAMvBqC,EAAkB,CACd9U,eAAgB,CACZ,CACI8Q,KAAM0B,EACNxJ,OAAQ,MAOxBkK,EAAc9R,EAAaoQ,GAAIsD,GAC/BnW,KAAKwU,0B,+CAGgB,MAC2BxU,KAAKc,MAA7CoT,EADa,EACbA,sBAAuBnT,EADV,EACUA,aAsB/B,OAnBImT,EACmB,kBAAC8B,EAAA,EAAD,CAASrS,UAAU,kBAClC,kBAAC1B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIjB,MAAQF,EACRpB,KAAK,OACLwC,SAAWnC,KAAKmU,mBAChB/R,aAAW,kBAEf,kBAACnC,EAAA,EAAD,CAAQE,QAAUH,KAAKY,oBAAvB,UACA,kBAACX,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAAUH,KAAKyU,6BAAxC,YAIW,yBAAK9Q,UAAU,kBAC5B5C,EADa,IACE,kBAAC,KAAD,CAAU4C,UAAU,aAAaxD,QAAUH,KAAKyU,iC,+BAOpE,MACmDzU,KAAKc,MAArDkH,EADH,EACGA,aAAcwL,EADjB,EACiBA,eAAgBC,EADjC,EACiCA,QAASvH,EAD1C,EAC0CA,KACvCzJ,EAAiBzC,KAAKD,MAAtB0C,aACFwF,EAAa,CACfD,eACAsC,kBAAmBtK,KAAKsK,kBACxBH,qBAAsBjC,GAAsBE,IAC5CmC,gBAAiBvK,KAAKuK,gBACtBC,eAAgBxK,KAAKwK,gBAEnB4L,EAAeC,GAAkBC,MACjCC,EAAqBC,GAAmBlG,MAE9C,OACI,kBAAC,IAAMhP,SAAP,KACMtB,KAAK6R,yBACLpP,EACI,kBAAC8K,GAAA,EAAD,CACEoH,MAAQlB,EACRvH,KAAOA,EACPuK,WAAaF,EACbd,WAAazV,KAAKyV,WAClBG,eAAiB5V,KAAK4V,gBAEtB,kBAAC,KAAD,MACA,kBAACQ,EAAD,CAAcnO,WAAaA,KAE7B,kBAACsF,GAAA,EAAD,CACEoH,MAAQnB,EACRtH,KAAOA,GAEP,kBAAC,KAAD,MACA,kBAAC,KAAD,OAGR,6BACElM,KAAK4R,mBACP,kBAAC3R,EAAA,EAAD,CACI0D,UAAU,6BACVF,MAAQ,CAAEC,MAAO,SACjBxD,QAAQ,UACRC,QAAUH,KAAK0R,oBAJnB,c,gDAlNoB3R,EAAOe,GACnC,GAAIf,EAAM0C,cAAiB1C,EAAM2W,sBAAwB5V,EAAM4V,oBAC3D,MAAO,CACHxK,MAxXIzJ,EAwXa1C,EAAM0C,aAvX/BkU,EAAU,GACVC,EAAU,EAETnU,EAGDA,EAAapB,eAAe6E,QAAQ,SAAS2Q,GACzC,IAAIjM,EAAM,GACNkM,EAAgBF,EACpBhM,EAAImK,KAAK8B,EAAK1E,MACV0E,EAAKxM,QACLO,EAAImK,KAAK,IACT4B,EAAQ5B,KAAK,CACTJ,MAAO/J,EAAK7G,QAAQ,IAGxB8S,EAAKxM,OAAOnE,QAAQ,SAAS2Q,GACzB,IAAIE,EAAW,GACfH,IACAG,EAAShC,KAAK8B,EAAK1E,MACnB4E,EAAShC,KAAK8B,EAAK5V,OAEnB0V,EAAQ5B,KAAK,CACTJ,MAAO,CAAE,MAAQjS,KAAM,CAAE8P,QAASuE,GAAYtK,OAAQqK,MAI9DF,MAEAhM,EAAImK,KAAK8B,EAAK5V,OAEd0V,EAAQ5B,KAAK,CACTJ,MAAO/J,EAAK7G,QAAQ,IAExB6S,OA9BRD,EAAU,GAmCPA,GAiVK5V,aAAchB,EAAM0C,aAAarB,aACjCsV,oBAAqB3W,EAAM2W,qBA1X3C,IAAoBjU,EACZkU,EACAC,M,GAyCmBxW,aAwiB3BqR,GAAapR,UAAY,CACrBX,qBAAsBY,IAAUC,KAChCwV,kBAAmBzV,IAAUC,KAC7BwR,aAAczR,IAAU4D,OACxBzB,aAAcnC,IAAUuP,OACxB6G,oBAAqBpW,IAAUwG,KAC/ByN,cAAejU,IAAUC,KACzBuR,kBAAmBxR,IAAUC,MAoBlBC,yBAjBf,SAAyBM,GACrB,MAAO,CACHiR,aAAcjR,EAAMsD,oBAAoB2N,aACxCtP,aAAc3B,EAAMsD,oBAAoB3B,aACxCiU,oBAAqB5V,EAAMsD,oBAAoBsS,sBAIvD,SAA4BjW,GACxB,MAAO,CACHqR,kBAAmB,SAACC,GAAD,OAAkBtR,EAAS6B,IAAsBwP,kBAAkBC,KACtFrS,qBAAsB,kBAAMe,EAASC,EAAqBhB,yBAC1DqW,kBAAmB,kBAAMtV,EAAS6B,IAAsByT,sBACxDxB,cAAe,SAACyC,EAAYb,GAAb,OAAiC1V,EAAS6B,IAAsBiS,cAAcyC,EAAYb,OAIlG3V,CAA6CiR,ICnnBtDwF,G,YACF,WAAYlX,GAAO,6CACTA,I,yKAIAgP,OAAOmI,SAASC,OAAOC,KAAKC,U,0HAG7B,MACyCrX,KAAKD,MAA3CuX,EADH,EACGA,oBAAqBvF,EADxB,EACwBA,aAE7B,OACI,kBAAC,IAAMzQ,SAAP,KACI,kBAAC,aAAD,KACI,kBAAC,kBAAD,CAAiBoS,MAAM,eAE3B,kBAAC,OAAD,KACI,kBAAC6D,EAAA,EAAD,CAAM5T,UAAU,8BACV2T,EACI,kBAACE,EAAA,EAAD,KACE,6BACI,kBAAC,EAAD,QAGN,KAEa,KAAjBzF,EACE,kBAACyF,EAAA,EAAD,KACI,6BACI,kBAAC,GAAD,QAGN,KAEHF,GAAwC,KAAjBvF,EAgBpB,KAfA,kBAACyF,EAAA,EAAD,KACE,kBAACxB,EAAA,EAAD,CAASrS,UAAU,iBACf,kBAACsS,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,OAEJ,kBAACA,EAAA,EAAD,KACI,kBAAC,EAAD,CAAgB1T,WAAW,qBAIvC,6BACI,kBAACiV,EAAA,EAAD,e,GAhDRrX,aA4D5B6W,GAAc5W,UAAY,CACtBiX,oBAAqBhX,IAAUwG,KAC/BiL,aAAczR,IAAU4D,QAUb1D,4BAPf,SAAyBM,GACrB,MAAO,CACHwW,oBAAqBxW,EAAM4W,mBAAmBJ,oBAC9CvF,aAAcjR,EAAMsD,oBAAoB2N,eAIR,KAAzBvR,CAA+ByW","file":"js/4-9501574c66b63fa30e05.js","sourcesContent":["import types from './types';\n\nfunction toggleCreateBaseline() {\n    return {\n        type: types.CREATE_NEW_BASELINE\n    };\n}\n\nexport default {\n    toggleCreateBaseline\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\n\nimport { baselinesPageActions } from '../redux';\n\nclass CreateBaselineButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { toggleCreateBaseline } = this.props;\n\n        return (\n            <Button\n                variant='primary'\n                onClick={ toggleCreateBaseline }>\n                Create Baseline\n            </Button>\n        );\n    }\n}\n\nCreateBaselineButton.propTypes = {\n    toggleCreateBaseline: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleCreateBaseline: (() => dispatch(baselinesPageActions.toggleCreateBaseline()))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(CreateBaselineButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody,\n    InputGroup,\n    TextInput,\n    Title } from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nimport { baselinesPageActions } from '../redux';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\n\nclass CreateBaseline extends Component {\n    constructor(props) {\n        super(props);\n        this.submitBaselineName = this.submitBaselineName.bind(this);\n\n        this.state = {\n            baselineName: ''\n        };\n\n        this.updateBaselineName = value => {\n            this.setState({ baselineName: value });\n        };\n    }\n\n    submitBaselineName() {\n        const { baselineName } = this.state;\n        const { createBaseline, toggleCreateBaseline } = this.props;\n        /*eslint-disable camelcase*/\n        let newBaselineObject = { display_name: baselineName, baseline_facts: []};\n        /*eslint-enable camelcase*/\n\n        createBaseline(newBaselineObject);\n        toggleCreateBaseline();\n    }\n\n    render() {\n        const { baselineName } = this.state;\n\n        return (\n            <React.Fragment>\n                <EmptyState variant={ EmptyStateVariant.full }>\n                    <EmptyStateIcon icon={ CubesIcon } />\n                    <Title headingLevel=\"h5\" size=\"lg\">\n                        Create Baseline\n                    </Title>\n                    <EmptyStateBody>\n                        Create a baseline name\n                        <InputGroup>\n                            <TextInput value={ baselineName } type=\"text\" onChange={ this.updateBaselineName } aria-label=\"baseline name\" />\n                            <Button onClick={ this.submitBaselineName }>Submit</Button>\n                        </InputGroup>\n                    </EmptyStateBody>\n                </EmptyState>\n            </React.Fragment>\n        );\n    }\n}\n\nCreateBaseline.propTypes = {\n    toggleCreateBaseline: PropTypes.func,\n    createBaseline: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleCreateBaseline: () => dispatch(baselinesPageActions.toggleCreateBaseline()),\n        createBaseline: (newBaselineObject) => dispatch(baselinesTableActions.createBaseline(newBaselineObject))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(CreateBaseline);\n","import types from './types';\n\nfunction exportToCSV(exportType, baselineData, baselineRowData = []) {\n    let data = {\n        exportType,\n        exportData: baselineData,\n        baselineRowData\n    };\n\n    return {\n        type: types.EXPORT_BASELINES_LIST_TO_CSV,\n        payload: data\n    };\n}\n\nexport default {\n    exportToCSV\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { baselinesKebabActions } from './redux';\nimport { Dropdown, KebabToggle, DropdownItem } from '@patternfly/react-core';\n\nclass BaselinesKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            kebabOpened: false\n        };\n\n        this.exportSelect = this.exportSelect.bind(this);\n\n        this.toggleKebab = () => {\n            const { kebabOpened } = this.state;\n            this.setState({\n                kebabOpened: !kebabOpened\n            });\n        };\n    }\n\n    exportSelect() {\n        const { exportType, baselineTableData, baselineData, baselineRowData } = this.props;\n        this.toggleKebab();\n        if (exportType === 'baseline list') {\n            this.props.exportToCSV(exportType, baselineTableData);\n        } else if (exportType === 'baselines data') {\n            this.props.exportToCSV(exportType, baselineData, baselineRowData);\n        }\n    }\n\n    render() {\n        const { kebabOpened } = this.state;\n        const dropdownItems = [\n            <DropdownItem key=\"export\" component=\"button\" onClick={ this.exportSelect }>Export as CSV</DropdownItem>\n        ];\n        return (\n            <Dropdown\n                style={ { float: 'left' } }\n                className={ 'action-kebab' }\n                toggle={ <KebabToggle onToggle={ this.toggleKebab } /> }\n                isOpen={ kebabOpened }\n                dropdownItems={ dropdownItems }\n                isPlain\n            />\n        );\n    }\n}\n\nBaselinesKebab.propTypes = {\n    exportToCSV: PropTypes.func,\n    baselineTableData: PropTypes.array,\n    exportType: PropTypes.string,\n    baselineData: PropTypes.array,\n    baselineRowData: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselineTableData: state.baselinesTableState.baselineTableData,\n        baselineData: state.baselinesTableState.baselineData\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        exportToCSV: (exportType, exportData, baselineRowData) => {\n            dispatch(baselinesKebabActions.exportToCSV(exportType, exportData, baselineRowData));\n        }\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BaselinesKebab));\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { TextInput } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst textInputProptypes = _objectSpread({}, TextInput.propTypes);\n\nconst textInputDefaultProptypes = _objectSpread({}, TextInput.defaultProps);\n\n[textInputProptypes, textInputDefaultProptypes].forEach(types => {\n  ['value', 'onChange'].forEach(value => {\n    delete types[value];\n  });\n});\n\nconst propTypes = _objectSpread({}, textInputProptypes, {\n  defaultValue: PropTypes.string,\n  onBlur: PropTypes.func,\n  autoFocus: PropTypes.bool\n});\n\nconst defaultProps = _objectSpread({}, textInputDefaultProptypes, {\n  defaultValue: null,\n  onBlur: null,\n  autoFocus: false\n});\n\nclass TableTextInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleBlur\", event => {\n      this.props.onBlur(event.currentTarget.value, event);\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      defaultValue,\n      onBlur,\n      autoFocus,\n      value,\n      onChange\n    } = _this$props,\n          textInputProps = _objectWithoutProperties(_this$props, [\"defaultValue\", \"onBlur\", \"autoFocus\", \"value\", \"onChange\"]);\n\n    return React.createElement(React.Fragment, null, React.createElement(TextInput, _extends({}, textInputProps, {\n      value: undefined,\n      defaultValue: defaultValue,\n      onBlur: this.handleBlur,\n      autoFocus: autoFocus\n    })));\n  }\n\n}\n\nTableTextInput.propTypes = propTypes;\nTableTextInput.defaultProps = defaultProps;\nexport default TableTextInput;\n//# sourceMappingURL=TableTextInput.js.map","const inlineEditFormatterFactory = ({\n  renderEdit,\n  renderValue,\n  resolveValue,\n  isEditable = null\n} = {}) => (value, additionalData) => {\n  const {\n    rowData\n  } = additionalData;\n\n  if (resolveValue) {\n    value = resolveValue(value, additionalData);\n  }\n\n  if (renderEdit && rowData.isEditing && (!isEditable || isEditable(additionalData))) {\n    const computedData = {\n      activeEditId: rowData.editConfig && rowData.editConfig.activeEditId\n    };\n    return renderEdit(value, additionalData, computedData);\n  } else if (renderValue) {\n    return renderValue(value, additionalData);\n  }\n\n  return value;\n};\n\nexport default inlineEditFormatterFactory;\n//# sourceMappingURL=inlineEditFormatterFactory.js.map","export const TableEditConfirmation = {\n  NONE: 'NONE',\n  ROW: 'ROW',\n  NO_CONFIRM_ROW: 'NO_CONFIRM_ROW',\n  TABLE_TOP: 'TABLE_TOP',\n  TABLE_BOTTOM: 'TABLE_BOTTOM'\n};\n//# sourceMappingURL=constants.js.map","const requiredElements = ['INPUT', 'BUTTON'];\nlet warningCompleted = false;\nexport const showIdWarnings = (row, target) => {\n  if ((row.isEditing || row.isTableEditing) && requiredElements.indexOf(target.tagName) >= 0 && !warningCompleted) {\n    warningCompleted = true; // eslint-disable-next-line no-console\n\n    console.warn(`${requiredElements.join(', ')} elements are required to have an id for editing to work properly.`);\n  }\n};\nexport const combineFunctions = (...functions) => {\n  const realFunctions = functions.filter(f => typeof f === 'function');\n\n  if (realFunctions.length === 1) {\n    return realFunctions[0];\n  }\n\n  if (realFunctions.length > 1) {\n    return (...params) => {\n      realFunctions.forEach(f => f(...params));\n    };\n  }\n\n  return undefined;\n};\nexport const shallowLeftSideEquals = (newObject, oldObject) => !Object.keys(newObject).find(key => newObject[key] !== oldObject[key]);\nexport const getBoundingClientRect = element => {\n  const {\n    top,\n    right,\n    bottom,\n    left,\n    width,\n    height,\n    x,\n    y\n  } = element.getBoundingClientRect();\n  return {\n    top,\n    right,\n    bottom,\n    left,\n    width,\n    height,\n    x,\n    y\n  };\n};\nexport const getClientWindowDimensions = () => {\n  const {\n    clientWidth,\n    clientHeight\n  } = document.documentElement;\n  return {\n    width: clientWidth,\n    height: clientHeight\n  };\n};\n//# sourceMappingURL=utils.js.map","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { TableContext, TableBody, isRowExpanded } from '@patternfly/react-table';\nimport PropTypes from 'prop-types';\nimport { TableEditConfirmation } from './constants';\nimport { showIdWarnings } from './utils/utils';\n\nconst propTypes = _objectSpread({}, TableBody.propTypes, {\n  editConfig: PropTypes.shape({\n    editConfirmationType: PropTypes.oneOf(Object.values(TableEditConfirmation)),\n    onEditCellClicked: PropTypes.func,\n    onEditConfirmed: PropTypes.func,\n    onEditCanceled: PropTypes.func\n  }).isRequired,\n\n  /** Function that is fired when user clicks on a row if not editing.  */\n  onRowClick: PropTypes.func\n});\n\nconst defaultProps = _objectSpread({}, TableBody.defaultProps, {\n  editConfig: null,\n  onRowClick: () => undefined\n});\n\nconst resolveCascadeEditability = rows => {\n  const isRowExpandedIndexes = new Set(rows.map((row, idx) => isRowExpanded(row, rows) ? idx : null).filter(row => row !== null)); // flag parents and their children which are edited together\n\n  rows.filter((row, idx) => row.parent !== undefined && row.isEditing && isRowExpandedIndexes.has(idx) && row.isEditableTogetherWithParent && rows[row.parent].isEditing).forEach(row => {\n    rows[row.parent].isChildEditing = true;\n    row.isParentEditing = true;\n  });\n  const lastVisibleRow = rows.filter((row, idx) => !row.parent || isRowExpandedIndexes.has(idx)).pop(); // flag last parent row if there are only descendants under it\n\n  if (lastVisibleRow && lastVisibleRow.isParentEditing) {\n    let parentRow = lastVisibleRow;\n\n    while (parentRow.parent !== undefined && parentRow.isEditableTogetherWithParent) {\n      parentRow = rows[parentRow.parent];\n    }\n\n    parentRow.isLastVisibleParent = true;\n  }\n};\n\nconst onRow = (event, row, rowProps, computedData, {\n  onRowClick,\n  editConfig\n}) => {\n  const {\n    target\n  } = event;\n  const cell = target.closest('[data-key]');\n  const cellNumber = parseInt(cell && cell.getAttribute('data-key'), 10);\n  const hasCellNumber = !Number.isNaN(cellNumber);\n  let onEditCellClicked;\n\n  if (hasCellNumber && editConfig && typeof editConfig.onEditCellClicked === 'function') {\n    // resolve closest (e.g. for dropdowns) usable id of a clicked element inside a cell\n    const idElement = target.closest('[id]');\n    const elementId = idElement && cell.contains(idElement) ? idElement.getAttribute('id') || null : null;\n\n    if (!elementId) {\n      showIdWarnings(row, target);\n    }\n\n    onEditCellClicked = () => {\n      editConfig.onEditCellClicked(event, row, _objectSpread({}, rowProps, {\n        columnIndex: cellNumber,\n        elementId\n      }));\n    };\n  } // give priority to fire onChange/onBlur callbacks\n\n\n  setTimeout(() => {\n    if (!row.isEditing) {\n      onRowClick(event, row, rowProps, computedData);\n\n      if (onEditCellClicked) {\n        // edit cell after rerender\n        setTimeout(onEditCellClicked, 0);\n      }\n    } else if (onEditCellClicked) {\n      onEditCellClicked();\n    }\n  }, 0);\n};\n\nconst Body = (_ref) => {\n  let {\n    BodyComponent,\n    rows,\n    editConfig,\n    onRowClick\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"BodyComponent\", \"rows\", \"editConfig\", \"onRowClick\"]);\n\n  const isTableEditing = rows.some(row => row.isEditing);\n  const mappedRows = rows.map(row => _objectSpread({}, row, {\n    editConfig,\n    isTableEditing\n  }));\n  resolveCascadeEditability(mappedRows);\n  return React.createElement(BodyComponent, _extends({}, props, {\n    rows: mappedRows,\n    onRowClick: (event, row, rowProps, computedData) => onRow(event, row, rowProps, computedData, {\n      onRowClick,\n      editConfig\n    })\n  }));\n};\n\nBody.propTypes = {\n  BodyComponent: PropTypes.node.isRequired,\n  rows: PropTypes.array,\n  editConfig: PropTypes.any,\n  onRowClick: PropTypes.func\n};\nBody.defaultProps = {\n  rows: [],\n  editConfig: null,\n  onRowClick: () => undefined\n};\n\nconst editableTableBody = BodyComponent => {\n  const InlineEditBody = (_ref2) => {\n    let {\n      editConfig,\n      onRowClick\n    } = _ref2,\n        props = _objectWithoutProperties(_ref2, [\"editConfig\", \"onRowClick\"]);\n\n    return React.createElement(TableContext.Consumer, null, (_ref3) => {\n      let {\n        rows\n      } = _ref3,\n          consumedProps = _objectWithoutProperties(_ref3, [\"rows\"]);\n\n      return React.createElement(Body, _extends({}, consumedProps, {\n        rows: rows\n      }, props, {\n        editConfig: editConfig,\n        onRowClick: onRowClick,\n        BodyComponent: BodyComponent\n      }));\n    });\n  };\n\n  InlineEditBody.propTypes = propTypes;\n  InlineEditBody.defaultProps = defaultProps;\n  return InlineEditBody;\n};\n\nexport default editableTableBody;\n//# sourceMappingURL=editableTableBody.js.map","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { CloseIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\n\nconst CancelButton = props => React.createElement(Button, props, React.createElement(CloseIcon, null));\n\nCancelButton.propTypes = _objectSpread({}, Button.propTypes);\nCancelButton.defaultProps = _objectSpread({}, Button.defaultProps, {\n  variant: 'plain'\n});\nexport default CancelButton;\n//# sourceMappingURL=CancelButton.js.map","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { CheckIcon } from '@patternfly/react-icons';\nimport { Button } from '@patternfly/react-core';\n\nconst ConfirmButton = props => React.createElement(Button, props, React.createElement(CheckIcon, null));\n\nConfirmButton.propTypes = _objectSpread({}, Button.propTypes);\nConfirmButton.defaultProps = _objectSpread({}, Button.defaultProps, {\n  variant: 'primary'\n});\nexport default ConfirmButton;\n//# sourceMappingURL=ConfirmButton.js.map","import { StyleSheet } from '@patternfly/react-styles';\nconst pfColorBlue50 = '#def3ff';\nconst pfColorBlue200 = '#7dc3e8';\nexport const inlineEditCss = StyleSheet.parse(`\n  tr.pf-c-table__editable-row {    \n    &:hover,\n    &.pf-m-editing {\n      background: ${pfColorBlue50} !important;\n      td {\n        border-bottom: 1px solid ${pfColorBlue200} !important;\n        border-top: 1px solid ${pfColorBlue200} !important;\n  \n        &:first-child {\n          border-left: 1px solid ${pfColorBlue200} !important;\n        }\n  \n        &:last-child {\n          border-right: 1px solid ${pfColorBlue200} !important;\n        }\n      }\n    }\n  \n    &.pf-m-table-editing-first-row {\n      border-top: 3px solid ${pfColorBlue200} !important;\n    }\n  \n    &.pf-m-table-editing-last-row {\n      border-bottom: 3px solid ${pfColorBlue200} !important;\n    }\n  \n    input {\n      display: block;\n      background: var(--pf-global--BackgroundColor--100);\n      border: 1px solid var(--pf-global--BorderColor);\n  \n      &:hover {\n        cursor: text;\n      }\n    }\n  }\n  \n  .pf-c-table__inline-edit-buttons {\n    position: fixed;\n    z-index: 1000;\n    padding: 4px;\n    margin: 0;\n    background: ${pfColorBlue50};\n    border: 1px solid ${pfColorBlue200};\n  \n    &.pf-m-top {\n      border-bottom: 0;\n    }\n  \n    &.pf-m-bottom {\n      border-top: 0;\n    }\n  \n    &.pf-m-bold {\n      border-width: 3px;\n    }\n  \n    button {\n      margin-left: 4px;\n  \n      &:first-child {\n        margin-left: 0;\n      }\n    }\n  }\n\n`);\nexport const inlineEditStyles = {\n  tableEditableRow: 'pf-c-table__editable-row',\n  tableInlineEditButtons: 'pf-c-table__inline-edit-buttons',\n  modifiers: {\n    tableEditingFirstRow: 'pf-m-table-editing-first-row ',\n    tableEditingLastRow: 'pf-m-table-editing-last-row',\n    editing: 'pf-m-editing',\n    top: 'pf-m-top',\n    bottom: 'pf-m-bottom',\n    bold: 'pf-m-bold'\n  }\n};\n//# sourceMappingURL=inline-edit-css.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@patternfly/react-styles';\nimport { CancelButton } from '../CancelButton';\nimport { ConfirmButton } from '../ConfirmButton';\nimport { inlineEditCss, inlineEditStyles as styles } from './css/inline-edit-css';\ninlineEditCss.inject();\n\nconst buttonsTopPosition = (window, rowDimensions, bold) => {\n  const boldShift = bold ? -1 : 0;\n  return {\n    bottom: window.height - rowDimensions.top - 1 + boldShift,\n    right: window.width - rowDimensions.right + 10\n  };\n};\n\nconst buttonsBottomPosition = (window, rowDimensions, bold) => {\n  const boldShift = bold ? -1 : 0;\n  return {\n    top: rowDimensions.bottom - 1 + boldShift,\n    right: window.width - rowDimensions.right + 10\n  };\n};\n\nconst ConfirmButtons = ({\n  messages: {\n    confirmButtonLabel,\n    cancelButtonLabel\n  },\n  onConfirm,\n  onCancel,\n  environment,\n  buttonsOnTop,\n  boldBorder\n}) => {\n  if (environment == null) {\n    return null;\n  }\n\n  const {\n    window,\n    row\n  } = environment;\n  const positionStyle = buttonsOnTop ? buttonsTopPosition(window, row, boldBorder) : buttonsBottomPosition(window, row, boldBorder);\n  const className = css(styles.tableInlineEditButtons, buttonsOnTop ? styles.modifiers.top : styles.modifiers.bottom, boldBorder && styles.modifiers.bold);\n  return React.createElement(\"div\", {\n    style: positionStyle,\n    className: className,\n    key: \"confirmButtons\"\n  }, React.createElement(ConfirmButton, {\n    key: \"confirm\",\n    \"aria-label\": confirmButtonLabel,\n    onMouseUp: onConfirm\n  }), React.createElement(CancelButton, {\n    key: \"cancel\",\n    \"aria-label\": cancelButtonLabel,\n    onMouseUp: onCancel\n  }));\n};\n\nConfirmButtons.defaultProps = {\n  onConfirm: () => undefined,\n  onCancel: () => undefined,\n  buttonsOnTop: false,\n  boldBorder: false,\n  environment: undefined,\n  messages: {\n    confirmButtonLabel: 'Save',\n    cancelButtonLabel: 'Cancel'\n  }\n};\nConfirmButtons.propTypes = {\n  /** Confirm edit callback */\n  onConfirm: PropTypes.func,\n\n  /** Cancel edit callback */\n  onCancel: PropTypes.func,\n\n  /** Inject confirm buttons positions */\n  environment: PropTypes.shape({\n    window: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    row: PropTypes.shape({\n      top: PropTypes.number,\n      bottom: PropTypes.number,\n      left: PropTypes.number,\n      right: PropTypes.number\n    })\n  }),\n  buttonsOnTop: PropTypes.bool,\n  boldBorder: PropTypes.bool,\n  messages: PropTypes.shape({\n    confirmButtonLabel: PropTypes.string,\n    cancelButtonLabel: PropTypes.string\n  })\n};\nexport default ConfirmButtons;\n//# sourceMappingURL=ConfirmButtons.js.map","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { css } from '@patternfly/react-styles';\nimport { RowWrapper as ReactTableRowWrapper } from '@patternfly/react-table';\nimport { combineFunctions, shallowLeftSideEquals, getBoundingClientRect, getClientWindowDimensions } from './utils/utils';\nimport ConfirmButtons from './ConfirmButtons';\nimport { TableEditConfirmation } from './constants';\nimport { inlineEditCss, inlineEditStyles as styles } from './css/inline-edit-css';\ninlineEditCss.inject();\n\nconst propTypes = _objectSpread({}, ReactTableRowWrapper.propTypes, {\n  trRef: PropTypes.func,\n  className: PropTypes.string,\n  onScroll: PropTypes.func,\n  onResize: PropTypes.func,\n  row: PropTypes.shape({\n    isOpen: PropTypes.bool,\n    isExpanded: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    isTableEditing: PropTypes.bool,\n    isFirstVisible: PropTypes.bool,\n    isLastVisible: PropTypes.bool,\n    isChildEditing: PropTypes.bool,\n    isParentEditing: PropTypes.bool,\n    isLastVisibleParent: PropTypes.bool,\n    editConfig: PropTypes.object\n  }),\n  rowProps: PropTypes.object\n});\n\nconst defaultProps = _objectSpread({}, ReactTableRowWrapper.defaultProps, {\n  trRef: undefined,\n  className: '',\n  onScroll: undefined,\n  onResize: undefined,\n  row: {\n    isOpen: undefined,\n    isExpanded: undefined,\n    isEditing: undefined,\n    isTableEditing: undefined,\n    isFirstVisible: undefined,\n    isLastVisible: undefined,\n    isChildEditing: undefined,\n    isParentEditing: undefined,\n    isLastVisibleParent: undefined,\n    editConfig: undefined\n  },\n  rowProps: null\n}); // TableEditConfirmation constants like TABLE_TOP cannot be referenced but must be hardcoded due to this issue:\n// https://github.com/reactjs/react-docgen/issues/317#issue-393678795\n\n\nconst tableConfirmationMapper = {\n  TABLE_TOP: {\n    hasConfirmationButtons: ({\n      isTableEditing,\n      isFirstVisible\n    }) => isTableEditing && isFirstVisible,\n    isTableConfirmation: () => true,\n    areButtonsOnTop: () => true,\n    hasBoldBorder: () => true,\n    getEditStyles: ({\n      isTableEditing,\n      isFirstVisible\n    }) => css(styles.tableEditableRow, isTableEditing && isFirstVisible && styles.modifiers.tableEditingFirstRow)\n  },\n  TABLE_BOTTOM: {\n    hasConfirmationButtons: ({\n      isTableEditing,\n      isLastVisible\n    }) => isTableEditing && isLastVisible,\n    isTableConfirmation: () => true,\n    areButtonsOnTop: () => false,\n    hasBoldBorder: () => true,\n    getEditStyles: ({\n      isTableEditing,\n      isLastVisible\n    }) => css(styles.tableEditableRow, isTableEditing && isLastVisible && styles.modifiers.tableEditingLastRow)\n  },\n  ROW: {\n    hasConfirmationButtons: ({\n      isEditing,\n      isParentEditing,\n      isLastVisibleParent,\n      isChildEditing,\n      isLastVisible\n    }) => isEditing && !(isChildEditing && isParentEditing) && // buttons can't appear in the middle\n    !(isParentEditing && isLastVisible) && // parent will show the buttons on top\n    !(isChildEditing && !isLastVisibleParent),\n    // child will show the buttons on bottom\n    isTableConfirmation: () => false,\n    areButtonsOnTop: ({\n      isLastVisible,\n      isLastVisibleParent\n    }) => isLastVisible || isLastVisibleParent,\n    hasBoldBorder: () => false,\n    getEditStyles: ({\n      isEditing\n    }) => css(styles.tableEditableRow, isEditing && styles.modifiers.editing)\n  },\n  NO_CONFIRM_ROW: {\n    hasConfirmationButtons: () => false,\n    isTableConfirmation: () => false,\n    areButtonsOnTop: () => false,\n    hasBoldBorder: () => false,\n    getEditStyles: ({\n      isEditing\n    }) => css(styles.tableEditableRow, isEditing && styles.modifiers.editing)\n  },\n  NONE: {\n    hasConfirmationButtons: () => false,\n    isTableConfirmation: () => false,\n    areButtonsOnTop: () => false,\n    hasBoldBorder: () => false,\n    getEditStyles: () => css(styles.tableEditableRow)\n  }\n};\n\nconst getTableConfirmation = ({\n  editConfig\n}) => tableConfirmationMapper[editConfig && editConfig.editConfirmationType] || tableConfirmationMapper[TableEditConfirmation.NONE];\n\nconst editableRowWrapper = RowWrapperComponent => {\n  class RowWrapper extends React.Component {\n    constructor(props) {\n      super(props);\n\n      _defineProperty(this, \"setStateWith2dEquals\", newState => {\n        this.setState(oldState => Object.keys(newState).find(key => !shallowLeftSideEquals(newState[key], oldState[key])) ? newState : null);\n      });\n\n      _defineProperty(this, \"saveRowDimensions\", element => {\n        if (element) {\n          this.element = element;\n          this.tableElem = element.closest('table');\n        }\n\n        this.updateRowDimensions();\n      });\n\n      _defineProperty(this, \"updateRowDimensions\", () => {\n        if (this.element) {\n          this.setStateWith2dEquals({\n            rowDimensions: getBoundingClientRect(this.element)\n          });\n        }\n      });\n\n      _defineProperty(this, \"handleScroll\", event => {\n        this.updateRowDimensions();\n      });\n\n      _defineProperty(this, \"handleResize\", event => {\n        this.fetchClientDimensions();\n        this.updateRowDimensions();\n      });\n\n      this.state = _objectSpread({\n        rowDimensions: {},\n        window: {}\n      }, RowWrapper.getDerivedStateFromProps(props));\n    }\n\n    componentDidMount() {\n      if (this.state.hasConfirmationButtons) {\n        this.fetchClientDimensions();\n      }\n    }\n\n    fetchClientDimensions() {\n      this.setStateWith2dEquals({\n        window: getClientWindowDimensions()\n      });\n    }\n\n    getConfirmationButtons() {\n      const _this$props = this.props,\n            {\n        row,\n        rowProps\n      } = _this$props,\n            props = _objectWithoutProperties(_this$props, [\"row\", \"rowProps\"]);\n\n      const {\n        isLastVisible,\n        isParentEditing,\n        isLastVisibleParent,\n        editConfig\n      } = row;\n\n      if (!editConfig) {\n        return null;\n      }\n\n      const {\n        onEditConfirmed,\n        onEditCanceled\n      } = editConfig;\n      const tableConfirmation = getTableConfirmation(row);\n      let confirmButtons;\n\n      if (this.element && this.state.rowDimensions) {\n        const options = tableConfirmation.isTableConfirmation() ? {} : rowProps;\n        const actionObject = tableConfirmation.isTableConfirmation() ? null : row;\n        confirmButtons = createPortal(React.createElement(ConfirmButtons, _extends({}, props, {\n          onConfirm: event => onEditConfirmed(event, actionObject, options),\n          onCancel: event => onEditCanceled(event, actionObject, options),\n          buttonsOnTop: tableConfirmation.areButtonsOnTop({\n            isLastVisible,\n            isParentEditing,\n            isLastVisibleParent\n          }),\n          boldBorder: tableConfirmation.hasBoldBorder(),\n          environment: {\n            window: this.state.window,\n            row: getBoundingClientRect(this.element)\n          }\n        })), this.tableElem ? this.tableElem.parentNode : document.body);\n      }\n\n      return confirmButtons;\n    }\n\n    render() {\n      const {\n        trRef,\n        className,\n        onScroll,\n        onResize,\n        row: {\n          isFirstVisible,\n          isLastVisible,\n          isEditing,\n          isTableEditing,\n          editConfig\n        }\n      } = this.props;\n      const {\n        hasConfirmationButtons\n      } = this.state;\n      const trClassName = getTableConfirmation({\n        editConfig\n      }).getEditStyles({\n        isEditing,\n        isTableEditing,\n        isFirstVisible,\n        isLastVisible\n      });\n      return React.createElement(React.Fragment, null, React.createElement(RowWrapperComponent, _extends({}, this.props, {\n        trRef: combineFunctions(this.saveRowDimensions, trRef),\n        className: classNames(trClassName, className),\n        onScroll: combineFunctions(hasConfirmationButtons && this.handleScroll, onScroll),\n        onResize: combineFunctions(hasConfirmationButtons && this.handleResize, onResize)\n      })), hasConfirmationButtons && this.getConfirmationButtons());\n    }\n\n  }\n\n  _defineProperty(RowWrapper, \"getDerivedStateFromProps\", (props, state) => ({\n    hasConfirmationButtons: getTableConfirmation(props.row).hasConfirmationButtons(props.row)\n  }));\n\n  RowWrapper.propTypes = propTypes;\n  RowWrapper.defaultProps = defaultProps;\n  return RowWrapper;\n};\n\nexport default editableRowWrapper;\n//# sourceMappingURL=editableRowWrapper.js.map","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, InputGroup, TextInput, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader, RowWrapper, ExpandableRowContent } from '@patternfly/react-table';\nimport {\n    editableTableBody,\n    editableRowWrapper,\n    inlineEditFormatterFactory,\n    TableEditConfirmation,\n    TableTextInput\n} from '@patternfly/react-inline-edit-extension';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport { AddCircleOIcon, EditIcon } from '@patternfly/react-icons';\n\nimport { baselinesPageActions } from '../redux';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\n\nfunction renderRows(baselineData) {\n    let newRows = [];\n    let counter = 0;\n\n    if (!baselineData) {\n        newRows = [];\n    } else {\n        baselineData.baseline_facts.forEach(function(fact) {\n            let row = [];\n            let parentCounter = counter;\n            row.push(fact.name);\n            if (fact.values) {\n                row.push('');\n                newRows.push({\n                    cells: row, isOpen: false\n                });\n\n                fact.values.forEach(function(fact) {\n                    let subFacts = [];\n                    counter++;\n                    subFacts.push(fact.name);\n                    subFacts.push(fact.value);\n\n                    newRows.push({\n                        cells: [ null ], data: { modules: subFacts }, parent: parentCounter\n                    });\n                });\n\n                counter++;\n            } else {\n                row.push(fact.value);\n\n                newRows.push({\n                    cells: row, isOpen: false\n                });\n                counter++;\n            }\n        });\n    }\n\n    return newRows;\n}\n\nclass EditBaseline extends Component {\n    constructor(props) {\n        super(props);\n        this.finishBaselineEdit = this.finishBaselineEdit.bind(this);\n        this.addFact = this.addFact.bind(this);\n        this.renderAddNewFact = this.renderAddNewFact.bind(this);\n        this.renderEditBaselineName = this.renderEditBaselineName.bind(this);\n\n        this.props.fetchBaselineData(this.props.baselineUUID);\n\n        this.makeId = ({ column, rowIndex, columnIndex, name }) =>\n            `${column.property}-${rowIndex}-${columnIndex}${name ? `-${name}` : ''}`;\n\n        const childEditRenderer = (value, { column, rowIndex, rowData, columnIndex, activeEditId }) => (\n            <ExpandableRowContent>\n                { rowData.data.modules.map((module, idx) => {\n                    const inlineStyle = {\n                        marginLeft: idx && '1em',\n                        display: 'inline-block',\n                        width: '48%'\n                    };\n\n                    const id = this.makeId({ rowIndex, columnIndex, column, name: `module-${idx}` });\n\n                    return (\n                        <TableTextInput\n                            id={ id }\n                            key={ id }\n                            defaultValue={ module }\n                            style={ inlineStyle }\n                            onBlur={ newValue =>\n                                this.onChange(newValue, {\n                                    rowIndex,\n                                    moduleIndex: idx\n                                })\n                            }\n                            autoFocus={ activeEditId === id }\n                        />\n                    );\n                }) }\n            </ExpandableRowContent>\n        );\n\n        const parentEditRenderer = (value, { column, rowIndex, columnIndex, activeEditId }) => {\n            const id = this.makeId({ rowIndex, columnIndex, column, name: 'parent-repo' });\n            return (\n                <TableTextInput\n                    id={ id }\n                    key={ id }\n                    defaultValue={ value }\n                    onBlur={ newValue =>\n                        this.onChange(newValue, {\n                            rowIndex,\n                            columnIndex\n                        })\n                    }\n                    autoFocus={ activeEditId === id }\n                />\n            );\n        };\n\n        const textInputFormatter = inlineEditFormatterFactory({\n            renderValue: (value, { rowData }) =>\n                rowData.hasOwnProperty('parent') ? (\n                    <ExpandableRowContent>{ rowData.data.modules.filter(a => a).join(', ') }</ExpandableRowContent>\n                ) : (\n                    value\n                ),\n            renderEdit: (value, { column, columnIndex, rowIndex, rowData }, { activeEditId }) => {\n                const renderer = rowData.hasOwnProperty('parent') ? childEditRenderer : parentEditRenderer;\n                return renderer(value, { rowData, column, rowIndex, columnIndex, activeEditId });\n            }\n        });\n\n        let rows = [ ...new Array(5) ].map(() =>\n            [ ...new Array(2) ].map((index) =>\n                <Skeleton key={ index } size={ SkeletonSize.md } />\n            )\n        );\n\n        let displayName;\n\n        if (this.props.baselineData) {\n            displayName = this.props.baselineData.display_name;\n        } else {\n            displayName = '';\n        }\n\n        this.state = {\n            loadingColumns: [ 'Fact', 'Value' ],\n            columns: [\n                {\n                    title: 'Fact',\n                    cellFormatters: [ textInputFormatter ]\n                },\n                {\n                    title: 'Value',\n                    cellFormatters: [ textInputFormatter ]\n                }\n            ],\n            rows,\n            editedRowsBackup: null,\n            activeEditId: null,\n            baselineName: displayName,\n            factName: '',\n            valueName: '',\n            showAddNewFact: false,\n            showAddNewParentFact: false,\n            parentRowId: undefined,\n            isEditingBaselineName: false\n        };\n\n        this.changeBaselineName = value => {\n            this.setState({ baselineName: value });\n        };\n\n        this.changeFactName = value => {\n            this.setState({ factName: value });\n        };\n\n        this.changeValueName = value => {\n            this.setState({ valueName: value });\n        };\n\n        this.submitBaselineName = () => {\n            const { baselineName } = this.state;\n            const { patchBaseline, baselineData } = this.props;\n            /*eslint-disable camelcase*/\n            let apiBody = { display_name: baselineName };\n            /*eslint-enable camelcase*/\n\n            patchBaseline(baselineData.id, apiBody);\n            this.clearFactAndValueData();\n            this.toggleIsEditingBaselineName();\n        };\n\n        this.onChange = (value, { rowIndex, columnIndex, moduleIndex }) => {\n            this.setState(({ rows }) => {\n                const { baselineData, patchBaseline } = this.props;\n                rows = [ ...rows ];\n                const row = rows[rowIndex];\n                if (moduleIndex !== null && moduleIndex !== undefined) {\n                    row.data.modules[moduleIndex] = value;\n                } else {\n                    const shiftedColumnIndex = columnIndex - 1; // to take Expandable Column into account;\n                    row.cells[shiftedColumnIndex] = value;\n                }\n\n                let apiBody = this.buildApiBody(rows, rowIndex);\n                patchBaseline(baselineData.id, apiBody);\n\n                return { rows, activeEditId: null };\n            });\n        };\n\n        this.buildApiBody = (rows, rowIndex) => {\n            let row = rows[rowIndex];\n            let apiBody = {};\n            let baselineFactsArray = [];\n\n            /*eslint-disable camelcase*/\n            if (row.parent || row.parent === 0) {\n                let parentRow = rows[row.parent];\n                let childRows = rows.filter(function(row) {\n                    return row.parent === rows[rowIndex].parent;\n                })\n                .map(function(row) {\n                    return { name: row.data.modules[0], value: row.data.modules[1] };\n                });\n\n                baselineFactsArray.push({\n                    name: parentRow.cells[0],\n                    values: childRows\n                });\n\n                apiBody.baseline_facts = baselineFactsArray;\n            } else {\n                baselineFactsArray.push({\n                    name: row.cells[0], value: row.cells[1]\n                });\n\n                apiBody.baseline_facts = baselineFactsArray;\n            }\n            /*eslint-enable camelcase*/\n\n            return apiBody;\n        };\n\n        this.onEditCellClicked = (event, clickedRow, { rowIndex, columnIndex, elementId }) => {\n            const EXPANDABLE_COL = 0;\n            const ACTIONS_COL = 4;\n\n            if (elementId !== this.state.activeEditId && clickedRow.isEditing && columnIndex !== ACTIONS_COL) {\n                this.setState(({ rows }) => ({\n                    activeEditId: elementId,\n                    rows: rows.map((row, id) => {\n                        if (id === rowIndex && columnIndex === EXPANDABLE_COL && row.hasOwnProperty('isOpen')) {\n                            row.isOpen = !row.isOpen;\n                        }\n\n                        return row;\n                    })\n                }));\n            }\n        };\n\n        this.getParentId = (rowId, rows) => (rows[rowId].parent === undefined ? rowId : rows[rowId].parent);\n        this.getChildId = (rowId, rows) =>\n            rows[rowId].parent === undefined\n                ? rows.map((row, idx) => (row.parent === rowId ? idx : null)).find(idx => idx !== null)\n                : rowId;\n\n        this.onEditActionClick = (event, rowId) => {\n            this.setState(({ rows, editedRowBackup }) => {\n                if (!editedRowBackup) {\n                    let backup = {\n                        [rowId]: rows[rowId]\n                    };\n\n                    return {\n                        editedRowsBackup: JSON.parse(JSON.stringify(backup)),\n                        rows: rows.map((row, id) => {\n                            row.isEditing = !!backup[id];\n                            return row;\n                        })\n                    };\n                }\n\n                return undefined;\n            });\n        };\n\n        this.onEditConfirmed = () => {\n            this.setState(({ rows, editedRowsBackup }) => {\n                rows = [ ...rows ];\n                Object.keys(editedRowsBackup).forEach(key => {\n                    rows[key].isEditing = false;\n                });\n\n                return {\n                    rows,\n                    editedRowsBackup: null,\n                    activeEditId: null\n                };\n            });\n        };\n\n        this.onEditCanceled = () => {\n            this.setState(({ rows, editedRowsBackup }) => {\n                rows = [ ...rows ];\n                Object.keys(editedRowsBackup).forEach(key => {\n                    rows[key] = editedRowsBackup[key];\n                });\n\n                return {\n                    rows,\n                    editedRowsBackup: null,\n                    activeEditId: null\n                };\n            });\n        };\n\n        this.onCollapse = (event, rowKey, isOpen) => {\n            const { rows } = this.state;\n            rows[rowKey].isOpen = isOpen;\n            this.setState({\n                rows\n            });\n        };\n\n        this.onNewFactActionClick = (event, rowId) => {\n            this.setState({\n                parentRowId: rowId,\n                showAddNewFact: true\n            });\n        };\n\n        this.actionResolver = rowData =>\n            rowData.isTableEditing\n                ? null\n                : rowData.cells[1] === ''\n                    ? [\n                        {\n                            title: 'Add fact',\n                            onClick: this.onNewFactActionClick\n                        }\n                    ]\n                    : [\n                        {\n                            title: 'Edit',\n                            onClick: this.onEditActionClick\n                        }\n                    ];\n\n        this.toggleNewFact = () => {\n            const { showAddNewFact } = this.state;\n            this.setState({\n                showAddNewFact: !showAddNewFact,\n                factName: '',\n                valueName: ''\n            });\n        };\n\n        this.toggleNewParentFact = () => {\n            const { showAddNewParentFact } = this.state;\n            this.setState({\n                showAddNewParentFact: !showAddNewParentFact,\n                factName: ''\n            });\n        };\n\n        this.clearFactAndValueData = () => {\n            this.setState({\n                factName: '',\n                valueName: '',\n                showAddNewFact: false,\n                showAddNewParentFact: false,\n                parentRowId: undefined\n            });\n        };\n\n        this.toggleIsEditingBaselineName = () => {\n            const { isEditingBaselineName } = this.state;\n\n            this.setState({\n                isEditingBaselineName: !isEditingBaselineName\n            });\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.baselineData && (props.baselineDataLoading !== state.baselineDataLoading)) {\n            return {\n                rows: renderRows(props.baselineData),\n                baselineName: props.baselineData.display_name,\n                baselineDataLoading: props.baselineDataLoading\n            };\n        }\n    }\n\n    finishBaselineEdit() {\n        const { clearBaselineData } = this.props;\n\n        clearBaselineData();\n    }\n\n    renderAddNewFact() {\n        const { showAddNewFact, showAddNewParentFact, factName, valueName } = this.state;\n        let newFactToolbar;\n\n        if (!showAddNewFact && !showAddNewParentFact) {\n            newFactToolbar = <Toolbar className='display-margin'>\n                <ToolbarGroup>\n                    <ToolbarItem>\n                        <Button\n                            variant='primary'\n                            onClick={ this.toggleNewParentFact }>\n                            <AddCircleOIcon />\n                            Add Parent Fact\n                        </Button>\n                    </ToolbarItem>\n                </ToolbarGroup>\n                <ToolbarGroup>\n                    <ToolbarItem>\n                        <Button\n                            variant='primary'\n                            onClick={ this.toggleNewFact }>\n                            <AddCircleOIcon />\n                            Add Fact\n                        </Button>\n                    </ToolbarItem>\n                </ToolbarGroup>\n            </Toolbar>;\n        } else {\n            newFactToolbar = <React.Fragment>\n                <Toolbar className='display-margin'>\n                    <ToolbarGroup>\n                        <ToolbarItem>\n                            Fact:\n                            <TextInput value={ factName } type=\"text\" onChange={ this.changeFactName } aria-label=\"fact name\"/>\n                        </ToolbarItem>\n                        { showAddNewFact\n                            ? <ToolbarItem>\n                                Value:\n                                <TextInput value={ valueName } type=\"text\" onChange={ this.changeValueName } aria-label=\"value name\"/>\n                            </ToolbarItem>\n                            : null\n                        }\n                    </ToolbarGroup>\n                </Toolbar>\n                <Toolbar className='display-margin'>\n                    <ToolbarGroup>\n                        <ToolbarItem>\n                            <Button\n                                variant='primary'\n                                onClick={ this.addFact }>\n                                Submit\n                            </Button>\n                        </ToolbarItem>\n                        <ToolbarItem>\n                            { showAddNewFact\n                                ? <Button\n                                    variant='danger'\n                                    onClick={ this.toggleNewFact }>\n                                    Cancel\n                                </Button>\n                                : <Button\n                                    variant='danger'\n                                    onClick={ this.toggleNewParentFact }>\n                                    Cancel\n                                </Button>\n                            }\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                </Toolbar>\n            </React.Fragment>;\n        }\n\n        return newFactToolbar;\n    }\n\n    addFact() {\n        const { factName, valueName, parentRowId, rows } = this.state;\n        const { baselineData, patchBaseline } = this.props;\n        let newBaselineBody;\n\n        /*eslint-disable camelcase*/\n        if (valueName) {\n            if (parentRowId || parentRowId === 0) {\n                let parentRow = rows[parentRowId];\n                let baselineFactsArray = [];\n\n                /*eslint-disable camelcase*/\n                let childRows = rows.filter(function(row) {\n                    return row.parent === parentRowId;\n                })\n                .map(function(row) {\n                    return { name: row.data.modules[0], value: row.data.modules[1] };\n                });\n\n                childRows.push({\n                    name: factName,\n                    value: valueName\n                });\n\n                baselineFactsArray.push({\n                    name: parentRow.cells[0],\n                    values: childRows\n                });\n\n                newBaselineBody = { baseline_facts: baselineFactsArray };\n            } else {\n                newBaselineBody = {\n                    baseline_facts: [\n                        {\n                            name: factName,\n                            value: valueName\n                        }\n                    ]\n                };\n            }\n        } else {\n            newBaselineBody = {\n                baseline_facts: [\n                    {\n                        name: factName,\n                        values: []\n                    }\n                ]\n            };\n        }\n        /*eslint-enable camelcase*/\n\n        patchBaseline(baselineData.id, newBaselineBody);\n        this.clearFactAndValueData();\n    }\n\n    renderEditBaselineName() {\n        const { isEditingBaselineName, baselineName } = this.state;\n        let baselineNameEdit;\n\n        if (isEditingBaselineName) {\n            baselineNameEdit = <Toolbar className='display-margin'>\n                <InputGroup>\n                    <TextInput\n                        value={ baselineName }\n                        type=\"text\"\n                        onChange={ this.changeBaselineName }\n                        aria-label=\"baseline name\"\n                    />\n                    <Button onClick={ this.submitBaselineName }>Submit</Button>\n                    <Button variant='danger' onClick={ this.toggleIsEditingBaselineName }>Cancel</Button>\n                </InputGroup>\n            </Toolbar>;\n        } else {\n            baselineNameEdit = <div className='display-margin'>\n                { baselineName } <EditIcon className='not-active' onClick={ this.toggleIsEditingBaselineName } />\n            </div>;\n        }\n\n        return baselineNameEdit;\n    }\n\n    render() {\n        const { activeEditId, loadingColumns, columns, rows } = this.state;\n        const { baselineData } = this.props;\n        const editConfig = {\n            activeEditId,\n            onEditCellClicked: this.onEditCellClicked,\n            editConfirmationType: TableEditConfirmation.ROW,\n            onEditConfirmed: this.onEditConfirmed,\n            onEditCanceled: this.onEditCanceled\n        };\n        const ComposedBody = editableTableBody(TableBody);\n        const ComposedRowWrapper = editableRowWrapper(RowWrapper);\n\n        return (\n            <React.Fragment>\n                { this.renderEditBaselineName() }\n                { baselineData\n                    ? <Table\n                        cells={ columns }\n                        rows={ rows }\n                        rowWrapper={ ComposedRowWrapper }\n                        onCollapse={ this.onCollapse }\n                        actionResolver={ this.actionResolver }\n                    >\n                        <TableHeader />\n                        <ComposedBody editConfig={ editConfig } />\n                    </Table>\n                    : <Table\n                        cells={ loadingColumns }\n                        rows={ rows }\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table>\n                }\n                <br></br>\n                { this.renderAddNewFact() }\n                <Button\n                    className=\"button-margin margin-right\"\n                    style={ { float: 'right' } }\n                    variant='primary'\n                    onClick={ this.finishBaselineEdit }>\n                    Finish\n                </Button>\n            </React.Fragment>\n        );\n    }\n}\n\nEditBaseline.propTypes = {\n    toggleCreateBaseline: PropTypes.func,\n    clearBaselineData: PropTypes.func,\n    baselineUUID: PropTypes.string,\n    baselineData: PropTypes.object,\n    baselineDataLoading: PropTypes.bool,\n    patchBaseline: PropTypes.func,\n    fetchBaselineData: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselineUUID: state.baselinesTableState.baselineUUID,\n        baselineData: state.baselinesTableState.baselineData,\n        baselineDataLoading: state.baselinesTableState.baselineDataLoading\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchBaselineData: (baselineUUID) => dispatch(baselinesTableActions.fetchBaselineData(baselineUUID)),\n        toggleCreateBaseline: () => dispatch(baselinesPageActions.toggleCreateBaseline()),\n        clearBaselineData: () => dispatch(baselinesTableActions.clearBaselineData()),\n        patchBaseline: (baselineId, newBaselineBody) => dispatch(baselinesTableActions.patchBaseline(baselineId, newBaselineBody))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBaseline);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\n\nimport BaselinesTable from '../BaselinesTable/BaselinesTable';\nimport CreateBaselineButton from './CreateBaselineButton/CreateBaselineButton';\nimport CreateBaseline from './CreateBaseline/CreateBaseline';\nimport BaselinesKebab from './BaselinesKebab/BaselinesKebab';\nimport EditBaseline from './EditBaseline/EditBaseline';\n\nclass BaselinesPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    render() {\n        const { creatingNewBaseline, baselineUUID } = this.props;\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='Baselines'/>\n                </PageHeader>\n                <Main>\n                    <Card className='pf-t-light pf-m-opaque-100'>\n                        { creatingNewBaseline\n                            ? <CardBody>\n                                <div>\n                                    <CreateBaseline />\n                                </div>\n                            </CardBody>\n                            : null\n                        }\n                        { baselineUUID !== '' ?\n                            <CardBody>\n                                <div>\n                                    <EditBaseline />\n                                </div>\n                            </CardBody>\n                            : null\n                        }\n                        { !creatingNewBaseline && baselineUUID === ''\n                            ? <CardBody>\n                                <Toolbar className=\"drift-toolbar\">\n                                    <ToolbarGroup>\n                                        <ToolbarItem>\n                                            <CreateBaselineButton />\n                                        </ToolbarItem>\n                                        <ToolbarItem>\n                                            <BaselinesKebab exportType='baseline list'/>\n                                        </ToolbarItem>\n                                    </ToolbarGroup>\n                                </Toolbar>\n                                <div>\n                                    <BaselinesTable />\n                                </div>\n                            </CardBody>\n                            : null\n                        }\n                    </Card>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nBaselinesPage.propTypes = {\n    creatingNewBaseline: PropTypes.bool,\n    baselineUUID: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        creatingNewBaseline: state.baselinesPageState.creatingNewBaseline,\n        baselineUUID: state.baselinesTableState.baselineUUID\n    };\n}\n\nexport default connect(mapStateToProps, null)(BaselinesPage);\n"],"sourceRoot":""}