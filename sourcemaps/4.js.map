{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./node_modules/react-cookie/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///./src/SmartComponents/ErrorAlert/redux/actions.js","webpack:///./node_modules/react-cookie/es6/withCookies.js","webpack:///./src/SmartComponents/AddSystemModal/AddSystemModal.js","webpack:///./src/SmartComponents/DriftPage/AddSystemButton/AddSystemButton.js","webpack:///./src/SmartComponents/StateIcon/StateIcon.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/ReferenceSelector/ReferenceSelector.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/DriftTable.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/FilterDropDown.js","webpack:///./src/SmartComponents/DriftPage/SearchBar/SearchBar.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/ActionKebab.js","webpack:///./src/SmartComponents/ErrorAlert/ErrorAlert.js","webpack:///./src/SmartComponents/DriftPage/Pagination/Pagination.js","webpack:///./src/SmartComponents/DriftPage/ExportCSVButton/ExportCSVButton.js","webpack:///./src/SmartComponents/DriftPage/DriftFilterChips/DriftFilterChips.js","webpack:///./src/SmartComponents/DriftPage/DriftPage.js"],"names":["arrayWithHoles","iterableToArrayLimit","nonIterableRest","module","exports","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","targetStatics","sourceStatics","key","descriptor","e","extendStatics","toggleErrorAlert","types","OPEN_ERROR_ALERT","__extends","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__assign","assign","t","s","n","apply","__rest","indexOf","propertyIsEnumerable","hoistStatics","AddSystemModal","props","onSelect","event","isSelected","rowId","baselineTableData","selectBaseline","map","item","confirmModal","bind","cancelSelection","changeActiveTab","state","columns","title","transforms","sortable","window","insights","chrome","auth","getUser","entities","selectedBaselineIds","toggleModal","selectedHSPIds","referenceId","selectedSystemIds","includes","ids","systems","system","id","tabIndex","selectActiveTab","activeTab","addSystemModalOpened","historicalProfiles","loading","Fragment","Modal","isOpen","onClose","width","isFooterLeftAligned","actions","Button","variant","onClick","Tabs","activeKey","Tab","eventKey","SystemsTable","hasHistoricalDropdown","BaselinesTable","tableId","hasMultiSelect","tableData","Component","cookies","instanceOf","Cookies","isRequired","showModal","PropTypes","bool","number","func","object","array","baselines","string","withCookies","WrappedComponent","CookieWrapper","ForwardedComponent","connect","addSystemModalState","compareState","baselinesTableState","checkboxTable","historicProfilesState","dispatch","addSystemModalActions","toggleAddSystemModal","newActiveTab","baselinesTableActions","_super","_this","onChange","forceUpdate","listen","addChangeListener","unlisten","removeChangeListener","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","_a","forwardedRef","restProps","allCookies","getAll","ref","AddSystemButton","isTable","className","isDisabled","StateIcon","factState","color","height","icon","ReferenceSelector","isReference","updateReferenceId","DriftTable","shiftReferenceToFront","masterList","index","systemToMove","findIndex","splice","unshift","fetchCompare","systemIds","baselineIds","HSPIds","removeSystem","filter","profile","system_id","setSelectedHistoricProfiles","setSystemIds","setBaselineIds","setHSPIds","setReferenceId","formatDate","fullHistoricalSystemList","historicalGroups","baseline","hsp","forEach","hsps","find","slice","entries","queryString","parse","location","search","system_ids","baseline_ids","selectHistoricProfiles","hsp_ids","reference_id","dateString","moment","utc","format","setHistory","history","setSelectedBaselines","facts","rows","fact","renderRow","rowData","size","SkeletonSize","md","row","sys","join","comparisons","expandedRows","renderExpandableRowButton","comparison","renderRowChild","findSystem","typeIcon","header-id","display_name","system_profile_exists","Tooltip","position","content","last_updated","updated","isBeta","HistoricalProfilesDropdown","sortType","sort","ASC","toggleSort","DESC","toggleFactSort","toggleStateSort","stateSort","renderSortButton","factSort","renderSystemHeaders","factName","expandRow","EmptyState","EmptyStateIcon","PlusCircleIcon","Title","EmptyStateBody","compareData","renderHeaderRow","renderLoadingRows","renderRows","emptyState","filteredCompareData","formatEntities","renderEmptyState","renderTable","fullCompareData","withRouter","compareActions","historicProfileIds","historicProfilesActions","HPIds","toggleFilterDropDown","OPEN_FILTER_DROPDOWN","FilterDropDown","onToggle","createDropdownItem","toggleDropDown","stateFilter","Checkbox","display","label","isChecked","selected","addStateFilter","stateFilters","dropdownItems","dropdownItem","selectedViewsArray","selectedViews","createDropdownArray","createSelectedViewsString","Dropdown","toggle","DropdownToggle","filterDropdownOpened","filterDropdownActions","SearchBar","updateFactFilter","setState","setFactFilter","changeFactFilter","factFilter","TextInput","placeholder","aria-label","filterByFact","toggleKebab","TOGGLE_KEBAB","ActionKebab","removeSystemsSelect","removeSystems","clearSelectedBaselines","DropdownItem","style","float","KebabToggle","kebabOpened","isPlain","clearState","actionKebabActions","ErrorAlert","confirmDriftModal","revertCompareData","previousStateSystems","confirmBaselineModal","revertBaselineFetch","errorAlertOpened","error","baselineError","Alert","action","AlertActionCloseButton","status","detail","errorAlertActions","perPageOptions","TablePagination","onSetPage","onPerPageSelect","page","pagination","perPage","updatePagination","totalFacts","Pagination","itemCount","dropDirection","DropdownDirection","down","isCompact","ExportCSVButton","exportToCSV","DriftFilterChips","setStateChips","stateChips","removeChip","chip","chipGroup","category","chips","newFactFilter","newChipGroup","filteredChips","chipKeyCount","ChipGroup","withToolbar","currentGroup","ChipGroupToolbarItem","categoryName","Chip","DriftPage","Card","CardBody","Toolbar","ToolbarGroup","ToolbarItem"],"mappings":"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","file":"js/4-4e8a26bb28160d93563a.js","sourcesContent":["var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import types from './types';\n\nfunction toggleErrorAlert() {\n    return {\n        type: types.OPEN_ERROR_ALERT\n    };\n}\n\nexport default {\n    toggleErrorAlert\n};\n","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport * as React from 'react';\r\nimport { Consumer } from './CookiesContext';\r\n// Only way to make function modules work with both TypeScript and Rollup\r\nvar hoistStatics = require('hoist-non-react-statics');\r\nexport default function withCookies(WrappedComponent) {\r\n    // @ts-ignore\r\n    var name = WrappedComponent.displayName || WrappedComponent.name;\r\n    var CookieWrapper = /** @class */ (function (_super) {\r\n        __extends(CookieWrapper, _super);\r\n        function CookieWrapper() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.onChange = function () {\r\n                // Make sure to update children with new values\r\n                _this.forceUpdate();\r\n            };\r\n            return _this;\r\n        }\r\n        CookieWrapper.prototype.listen = function () {\r\n            this.props.cookies.addChangeListener(this.onChange);\r\n        };\r\n        CookieWrapper.prototype.unlisten = function (cookies) {\r\n            (cookies || this.props.cookies).removeChangeListener(this.onChange);\r\n        };\r\n        CookieWrapper.prototype.componentDidMount = function () {\r\n            this.listen();\r\n        };\r\n        CookieWrapper.prototype.componentDidUpdate = function (prevProps) {\r\n            if (prevProps.cookies !== this.props.cookies) {\r\n                this.unlisten(prevProps.cookies);\r\n                this.listen();\r\n            }\r\n        };\r\n        CookieWrapper.prototype.componentWillUnmount = function () {\r\n            this.unlisten();\r\n        };\r\n        CookieWrapper.prototype.render = function () {\r\n            var _a = this.props, forwardedRef = _a.forwardedRef, cookies = _a.cookies, restProps = __rest(_a, [\"forwardedRef\", \"cookies\"]);\r\n            var allCookies = cookies.getAll();\r\n            return (React.createElement(WrappedComponent, __assign({}, restProps, { ref: forwardedRef, cookies: cookies, allCookies: allCookies })));\r\n        };\r\n        CookieWrapper.displayName = \"withCookies(\" + name + \")\";\r\n        CookieWrapper.WrappedComponent = WrappedComponent;\r\n        return CookieWrapper;\r\n    }(React.Component));\r\n    var ForwardedComponent = React.forwardRef(function (props, ref) {\r\n        return (React.createElement(Consumer, null, function (cookies) { return (React.createElement(CookieWrapper, __assign({ cookies: cookies }, props, { forwardedRef: ref }))); }));\r\n    });\r\n    ForwardedComponent.displayName = CookieWrapper.displayName;\r\n    ForwardedComponent.WrappedComponent = CookieWrapper.WrappedComponent;\r\n    return hoistStatics(ForwardedComponent, WrappedComponent);\r\n}\r\n","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Tab, Tabs } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { sortable } from '@patternfly/react-table';\n\nimport SystemsTable from '../SystemsTable/SystemsTable';\nimport BaselinesTable from '../BaselinesTable/BaselinesTable';\nimport { addSystemModalActions } from './redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nexport class AddSystemModal extends Component {\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n        this.cancelSelection = this.cancelSelection.bind(this);\n        this.changeActiveTab = this.changeActiveTab.bind(this);\n\n        this.state = {\n            columns: [\n                { title: 'Name', transforms: [ sortable ]},\n                { title: 'Last updated', transforms: [ sortable ]}\n            ]\n        };\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    onSelect = (event, isSelected, rowId) => {\n        const { baselineTableData, selectBaseline } = this.props;\n        let ids;\n\n        if (rowId === -1) {\n            ids = baselineTableData.map(function(item) {\n                return item[0];\n            });\n        } else {\n            ids = [ baselineTableData[rowId][0] ];\n        }\n\n        selectBaseline(ids, isSelected, 'CHECKBOX');\n    }\n\n    confirmModal() {\n        const { confirmModal, entities, selectedBaselineIds, toggleModal, selectedHSPIds, referenceId } = this.props;\n\n        confirmModal(\n            entities.selectedSystemIds,\n            selectedBaselineIds,\n            selectedHSPIds,\n            entities.selectedSystemIds.includes(referenceId)\n                ? referenceId\n                : undefined\n        );\n        toggleModal();\n    }\n\n    cancelSelection() {\n        this.props.toggleModal();\n    }\n\n    selectedSystemIds() {\n        let ids = this.props.systems.map(function (system) {\n            return system.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    changeActiveTab(event, tabIndex) {\n        const { selectActiveTab } = this.props;\n\n        selectActiveTab(tabIndex);\n    }\n\n    render() {\n        const { activeTab, addSystemModalOpened, baselineTableData, historicalProfiles, loading } = this.props;\n        const { columns } = this.state;\n\n        return (\n            <React.Fragment>\n                <Modal\n                    title=\"Choose systems\"\n                    isOpen={ addSystemModalOpened }\n                    onClose={ this.cancelSelection }\n                    width=\"auto\"\n                    isFooterLeftAligned\n                    actions={ [\n                        <Button\n                            key=\"confirm\"\n                            variant=\"primary\"\n                            onClick={ this.confirmModal }>\n                            Submit\n                        </Button>\n                    ] }\n                >\n                    <Tabs\n                        activeKey={ activeTab }\n                        onSelect={ this.changeActiveTab }\n                    >\n                        <Tab\n                            eventKey={ 0 }\n                            title=\"Systems\"\n                            id='systems-tab'\n                        >\n                            <SystemsTable\n                                selectedSystemIds={ this.selectedSystemIds() }\n                                hasHistoricalDropdown={ true }\n                                historicalProfiles={ historicalProfiles }\n                            />\n                        </Tab>\n                        <Tab\n                            eventKey={ 1 }\n                            title=\"Baselines\"\n                            id='baselines-tab'\n                        >\n                            <BaselinesTable\n                                tableId='CHECKBOX'\n                                hasMultiSelect={ true }\n                                onSelect={ this.onSelect }\n                                tableData={ baselineTableData }\n                                loading={ loading }\n                                columns={ columns }/>\n                        </Tab>\n                    </Tabs>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nAddSystemModal.propTypes = {\n    showModal: PropTypes.bool,\n    addSystemModalOpened: PropTypes.bool,\n    activeTab: PropTypes.number,\n    confirmModal: PropTypes.func,\n    cancelSelection: PropTypes.func,\n    toggleModal: PropTypes.func,\n    selectActiveTab: PropTypes.func,\n    entities: PropTypes.object,\n    systems: PropTypes.array,\n    selectedBaselineIds: PropTypes.array,\n    baselines: PropTypes.array,\n    selectedHSPIds: PropTypes.array,\n    loading: PropTypes.bool,\n    baselineTableData: PropTypes.array,\n    selectBaseline: PropTypes.func,\n    historicalProfiles: PropTypes.array,\n    referenceId: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        systems: state.compareState.systems,\n        activeTab: state.addSystemModalState.activeTab,\n        entities: state.entities,\n        selectedBaselineIds: state.baselinesTableState.checkboxTable.selectedBaselineIds,\n        baselines: state.compareState.baselines,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds,\n        loading: state.baselinesTableState.checkboxTable.loading,\n        baselineTableData: state.baselinesTableState.checkboxTable.baselineTableData,\n        historicalProfiles: state.compareState.historicalProfiles\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(addSystemModalActions.toggleAddSystemModal()),\n        selectActiveTab: (newActiveTab) => dispatch(addSystemModalActions.selectActiveTab(newActiveTab)),\n        selectBaseline: (id, isSelected, tableId) => dispatch(baselinesTableActions.selectBaseline(id, isSelected, tableId))\n    };\n}\n\nexport default withCookies(connect(mapStateToProps, mapDispatchToProps)(AddSystemModal));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\n\nimport { addSystemModalActions } from '../../AddSystemModal/redux';\n\nexport class AddSystemButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { loading, toggleAddSystemModal, isTable } = this.props;\n\n        return (\n            <Button\n                className=\"add-system-button\"\n                variant='primary'\n                onClick={ toggleAddSystemModal }\n                isDisabled={ loading ? true : false }\n            >\n                { isTable ? 'Add' : 'Add systems or baselines' }\n            </Button>\n        );\n    }\n}\n\nAddSystemButton.propTypes = {\n    toggleAddSystemModal: PropTypes.func,\n    isTable: PropTypes.bool,\n    loading: PropTypes.bool\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleAddSystemModal: (() => dispatch(addSystemModalActions.toggleAddSystemModal()))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddSystemButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckCircleIcon, QuestionCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\n\nclass StateIcon extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    icon() {\n        let iconClass = '';\n\n        if (this.props.factState === 'SAME') {\n            iconClass = <CheckCircleIcon color='#3E8635' height='20px' width='20px'/>;\n        } else if (this.props.factState === 'DIFFERENT') {\n            iconClass = <ExclamationCircleIcon color='#C9190B' height='20px' width='20px'/>;\n        } else {\n            iconClass = <QuestionCircleIcon color='#151515' height='20px' width='20px'/>;\n        }\n\n        return iconClass;\n    };\n\n    render() {\n        return (\n            this.icon()\n        );\n    }\n}\n\nStateIcon.propTypes = {\n    factState: PropTypes.string\n};\n\nexport default StateIcon;\n","import React, { Component } from 'react';\nimport { OutlinedStarIcon, StarIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\n\nclass ReferenceSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isReference: this.props.isReference\n        };\n    }\n\n    render() {\n        const { updateReferenceId, id } = this.props;\n        const { isReference } = this.state;\n\n        return (\n            isReference\n                ? <StarIcon\n                    className='reference-selector pointer'\n                    onClick={ () => updateReferenceId() }\n                />\n                : <OutlinedStarIcon\n                    className='reference-selector pointer'\n                    onClick={ () => updateReferenceId(id) }\n                />\n        );\n    }\n}\n\nReferenceSelector.propTypes = {\n    isReference: PropTypes.bool,\n    updateReferenceId: PropTypes.func,\n    id: PropTypes.string\n};\n\nexport default ReferenceSelector;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, Title, Tooltip } from '@patternfly/react-core';\nimport queryString from 'query-string';\nimport { ClockIcon, TimesIcon, ExclamationTriangleIcon, PlusCircleIcon, ServerIcon, BlueprintIcon } from '@patternfly/react-icons';\nimport { AngleDownIcon, AngleRightIcon, LongArrowAltUpIcon, LongArrowAltDownIcon, ArrowsAltVIcon } from '@patternfly/react-icons';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport moment from 'moment';\n\nimport AddSystemModal from '../../AddSystemModal/AddSystemModal';\nimport AddSystemButton from '../AddSystemButton/AddSystemButton';\nimport StateIcon from '../../StateIcon/StateIcon';\nimport { ASC, DESC } from '../../../constants';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport HistoricalProfilesDropdown from '../../HistoricalProfilesDropdown/HistoricalProfilesDropdown';\nimport { compareActions } from '../../modules';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { historicProfilesActions } from '../../HistoricalProfilesDropdown/redux';\nimport ReferenceSelector from './ReferenceSelector/ReferenceSelector';\n\nexport class DriftTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.masterList = [];\n\n        this.setSystemIds();\n        this.setBaselineIds();\n        this.setHSPIds();\n        this.setReferenceId();\n        this.fetchCompare = this.fetchCompare.bind(this);\n        this.removeSystem = this.removeSystem.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n        const { fetchCompare } = this.props;\n\n        fetchCompare(this.systemIds, this.baselineIds, this.HSPIds, this.referenceId);\n    }\n\n    shiftReferenceToFront = (masterList) => {\n        let index;\n        let systemToMove;\n\n        index = masterList.findIndex((item) => {\n            return item.id === this.referenceId;\n        });\n\n        systemToMove = masterList.splice(index, 1);\n        masterList.unshift(systemToMove[0]);\n\n        return masterList;\n    }\n\n    formatEntities(systems, baselines, historicalProfiles) {\n        /*eslint-disable camelcase*/\n        let fullHistoricalSystemList = [];\n        let historicalGroups = {};\n        let masterList;\n\n        if (systems.length === 0 && baselines.length === 0 && historicalProfiles.length === 0) {\n            return [];\n        }\n\n        systems = systems.map(function(system) {\n            system.type = 'system';\n            return system;\n        });\n        baselines = baselines.map(function(baseline) {\n            baseline.type = 'baseline';\n            return baseline;\n        });\n        historicalProfiles = historicalProfiles.map(function(hsp) {\n            hsp.type = 'historical-system-profile';\n            return hsp;\n        });\n\n        historicalProfiles.forEach(function(hsp) {\n            if (historicalGroups.hasOwnProperty(hsp.system_id)) {\n                historicalGroups[hsp.system_id].push(hsp);\n            } else {\n                historicalGroups[hsp.system_id] = [ hsp ];\n            }\n        });\n\n        fullHistoricalSystemList = systems;\n\n        for (const [ system_id, hsps ] of Object.entries(historicalGroups)) {\n            let system = systems.find(item => system_id === item.id);\n            let index;\n\n            if (system !== undefined) {\n                index = fullHistoricalSystemList.indexOf(system);\n                fullHistoricalSystemList = [\n                    ...fullHistoricalSystemList.slice(0, index + 1),\n                    ...hsps,\n                    ...fullHistoricalSystemList.slice(index + 1, fullHistoricalSystemList.length)\n                ];\n            } else {\n                fullHistoricalSystemList = fullHistoricalSystemList.concat(hsps);\n            }\n        }\n        /*eslint-enable camelcase*/\n\n        masterList = baselines.concat(fullHistoricalSystemList);\n\n        if (this.referenceId) {\n            masterList = this.shiftReferenceToFront(masterList);\n        }\n\n        return masterList;\n    }\n\n    setSystemIds() {\n        this.systemIds = queryString.parse(this.props.location.search).system_ids;\n        this.systemIds = Array.isArray(this.systemIds) ? this.systemIds : [ this.systemIds ];\n        this.systemIds = this.systemIds.filter(item => item !== undefined);\n    }\n\n    setBaselineIds() {\n        this.baselineIds = queryString.parse(this.props.location.search).baseline_ids;\n        this.baselineIds = Array.isArray(this.baselineIds) ? this.baselineIds : [ this.baselineIds ];\n        this.baselineIds = this.baselineIds.filter(item => item !== undefined);\n    }\n\n    setHSPIds() {\n        const { selectHistoricProfiles } = this.props;\n\n        this.HSPIds = queryString.parse(this.props.location.search).hsp_ids;\n        this.HSPIds = Array.isArray(this.HSPIds) ? this.HSPIds : [ this.HSPIds ];\n        this.HSPIds = this.HSPIds.filter(item => item !== undefined);\n        selectHistoricProfiles(this.HSPIds);\n    }\n\n    setReferenceId() {\n        this.referenceId = queryString.parse(this.props.location.search).reference_id;\n    }\n\n    updateReferenceId = (id) => {\n        this.referenceId = id;\n        this.fetchCompare(this.systemIds, this.baselineIds, this.HSPIds, this.referenceId);\n    }\n\n    formatDate(dateString) {\n        return moment.utc(dateString).format('DD MMM YYYY, HH:mm UTC');\n    }\n\n    removeSystem = (item) => {\n        if (item.type === 'system') {\n            this.systemIds = this.systemIds.filter(id => id !== item.id);\n\n            this.HSPIds = this.props.historicalProfiles.filter((profile) => {\n                return profile.system_id !== item.id;\n            }).map(profile => profile.id);\n\n        } else if (item.type === 'baseline') {\n            this.baselineIds = this.baselineIds.filter(id => id !== item.id);\n        } else if (item.type === 'historical-system-profile') {\n            this.HSPIds = this.HSPIds.filter(id => id !== item.id);\n        }\n\n        this.props.setSelectedHistoricProfiles(this.HSPIds);\n        this.fetchCompare(this.systemIds, this.baselineIds, this.HSPIds, this.referenceId);\n    }\n\n    fetchCompare(systemIds, baselineIds, HSPIds, referenceId) {\n        this.systemIds = systemIds;\n        this.baselineIds = baselineIds;\n        this.HSPIds = HSPIds;\n        this.referenceId = referenceId;\n\n        setHistory(this.props.history, systemIds, baselineIds, HSPIds, referenceId);\n        this.props.setSelectedBaselines(this.baselineIds, 'CHECKBOX');\n        this.props.fetchCompare(systemIds, baselineIds, HSPIds, referenceId);\n    }\n\n    renderRows(facts) {\n        let rows = [];\n\n        if (facts !== undefined) {\n            facts.forEach(fact => {\n                rows.push(this.renderRow(fact));\n            });\n        }\n\n        return rows;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n        let rowData = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rowData.push(<td><Skeleton size={ SkeletonSize.md } /></td>);\n        }\n\n        for (let i = 0; i < 10; i += 1) {\n            rows.push(<tr>{ rowData }</tr>);\n        }\n\n        return rows;\n    }\n\n    findSystem(fact) {\n        let row = [];\n        let system = undefined;\n        let className;\n\n        this.masterList.forEach(item => {\n            className = [ 'comparison-cell' ];\n            system = fact.systems.find(function(sys) {\n                return sys.id === item.id;\n            });\n\n            if (this.referenceId) {\n                if (system.state === 'DIFFERENT') {\n                    className.push('highlight');\n                    className.push('different-fact-cell');\n                }\n            } else {\n                if (fact.state === 'DIFFERENT') {\n                    className.push('highlight');\n                }\n            }\n\n            row.push(<td className={ className.join(' ') }>{ system.value === null ? 'No Data' : system.value }</td>);\n        });\n\n        return row;\n    }\n\n    renderRow(fact) {\n        let row = [];\n        let rows = [];\n\n        if (fact.comparisons) {\n            row.push(\n                <td className={\n                    this.props.expandedRows.includes(fact.name) ?\n                        'nested-fact sticky-column fixed-column-1' :\n                        'sticky-column fixed-column-1' }>\n                    { this.renderExpandableRowButton(this.props.expandedRows, fact.name) } { fact.name }\n                </td>\n            );\n            row.push(\n                <td className=\"fact-state sticky-column fixed-column-2\">\n                    <StateIcon factState={ fact.state }/>\n                </td>\n            );\n\n            this.masterList.forEach(() => {\n                row.push(<td className=\"comparison-cell\"></td>);\n            });\n\n            rows.push(<tr>{ row }</tr>);\n\n            if (this.props.expandedRows.includes(fact.name)) {\n                fact.comparisons.forEach(comparison => {\n                    row = this.renderRowChild(comparison);\n                    rows.push(<tr className={ comparison.state === 'DIFFERENT' ? 'unexpected-row' : '' }>{ row }</tr>);\n                });\n            }\n        } else {\n            row.push(<td className=\"sticky-column fixed-column-1\">{ fact.name }</td>);\n            row.push(\n                <td className=\"fact-state sticky-column fixed-column-2\">\n                    <StateIcon factState={ fact.state }/>\n                </td>\n            );\n\n            row = row.concat(this.findSystem(fact));\n\n            rows.push(<tr className={ fact.state === 'DIFFERENT' ? 'unexpected-row' : '' }>{ row }</tr>);\n        }\n\n        return rows;\n    }\n\n    renderRowChild(fact) {\n        let row = [];\n\n        row.push(<td className=\"nested-fact sticky-column fixed-column-1\">\n            <p className=\"child-row\">{ fact.name }</p>\n        </td>);\n        row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n        row = row.concat(this.findSystem(fact));\n\n        return row;\n    }\n\n    renderSystemHeaders() {\n        let row = [];\n        let typeIcon = '';\n        let referenceId = this.referenceId;\n        let updateReferenceId = this.updateReferenceId;\n\n        this.masterList.forEach(item => {\n            if (item.type === 'system') {\n                typeIcon = <ServerIcon/>;\n            } else if (item.type === 'baseline') {\n                typeIcon = <BlueprintIcon/>;\n            } else if (item.type === 'historical-system-profile') {\n                typeIcon = <ClockIcon />;\n            }\n\n            row.push(\n                <th\n                    header-id={ item.id }\n                    key={ item.id }\n                    className={\n                        item.id === referenceId\n                            ? 'drift-header reference-header'\n                            : `drift-header ${item.type}-header`\n                    }\n                >\n                    <div>\n                        <a onClick={ () => this.removeSystem(item) } className=\"remove-system-icon\">\n                            <TimesIcon/>\n                        </a>\n                    </div>\n                    <div className='comparison-header'>\n                        <div className=\"drift-header-icon\">\n                            { typeIcon }\n                        </div>\n                        <div className=\"system-name\">{ item.display_name }</div>\n                        <div className=\"system-updated-and-reference\">\n                            <ReferenceSelector\n                                updateReferenceId={ updateReferenceId }\n                                id={ item.id }\n                                isReference= { item.id === referenceId }\n                            />\n                            { item.system_profile_exists === false ?\n                                <Tooltip\n                                    position='top'\n                                    content={\n                                        <div>System profile does not exist. Please run insights-client on system to upload archive.</div>\n                                    }\n                                >\n                                    <ExclamationTriangleIcon color=\"#f0ab00\"/>\n                                </Tooltip> : ''\n                            }\n                            { item.last_updated\n                                ? this.formatDate(item.last_updated)\n                                : this.formatDate(item.updated)\n                            }\n                            { insights.chrome.isBeta()\n                                ? item.type === 'system' || item.type === 'historical-system-profile'\n                                    ? <HistoricalProfilesDropdown\n                                        system={ item }\n                                        systemIds={ this.systemIds }\n                                    />\n                                    : null\n                                : null\n                            }\n                        </div>\n                    </div>\n                </th>\n            );\n        });\n\n        return row;\n    }\n\n    renderSortButton(sortType, sort) {\n        let sortIcon;\n\n        if (sort === ASC) {\n            sortIcon = <LongArrowAltUpIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else if (sort === DESC) {\n            sortIcon = <LongArrowAltDownIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else {\n            sortIcon = <ArrowsAltVIcon className=\"pointer not-active\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n\n        return sortIcon;\n    }\n\n    toggleSort(sortType, sort) {\n        if (sortType === 'fact') {\n            this.props.toggleFactSort(sort);\n        } else {\n            this.props.toggleStateSort(sort);\n        }\n    }\n\n    renderHeaderRow() {\n        const { stateSort } = this.props;\n\n        return (\n            <tr className=\"sticky-column-header\">\n                <th className=\"fact-header sticky-column fixed-column-1\" key='fact-header'>\n                    <div className=\"active-blue\">Fact { this.renderSortButton('fact', this.props.factSort) }</div>\n                </th>\n                <th className=\"state-header sticky-column fixed-column-2\" key='state-header'>\n                    { stateSort !== '' ?\n                        <div className=\"active-blue\">State { this.renderSortButton('state', this.props.stateSort) }</div> :\n                        <div>State { this.renderSortButton('state', this.props.stateSort) }</div>\n                    }\n                </th>\n                { this.renderSystemHeaders() }\n            </tr>\n        );\n    }\n\n    renderExpandableRowButton(expandedRows, factName) {\n        let expandIcon;\n\n        if (expandedRows.includes(factName)) {\n            expandIcon = <AngleDownIcon className=\"pointer active-blue\" onClick={ () => this.props.expandRow(factName) } />;\n        } else {\n            expandIcon = <AngleRightIcon className=\"pointer\" onClick={ () => this.props.expandRow(factName) } />;\n        }\n\n        return expandIcon;\n    }\n\n    renderEmptyState() {\n        return (\n            <center>\n                <EmptyState>\n                    <EmptyStateIcon icon={ PlusCircleIcon } />\n                    <br></br>\n                    <Title size=\"lg\">Add systems or baselines to compare</Title>\n                    <EmptyStateBody>\n                        You currently have no systems or baselines displayed. Add at least two\n                        <br></br>\n                        systems or baselines to compare their facts.\n                    </EmptyStateBody>\n                    <AddSystemButton isTable={ false }/>\n                </EmptyState>\n            </center>\n        );\n    }\n\n    renderTable(compareData, loading) {\n        return (\n            <React.Fragment>\n                <div className=\"drift-table-wrapper\">\n                    <table className=\"pf-c-table pf-m-compact drift-table\">\n                        <thead>\n                            { this.renderHeaderRow() }\n                        </thead>\n                        <tbody>\n                            { loading ? this.renderLoadingRows() : this.renderRows(compareData) }\n                        </tbody>\n                    </table>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { emptyState, filteredCompareData, systems, baselines, historicalProfiles, loading } = this.props;\n\n        this.masterList = this.formatEntities(systems, baselines, historicalProfiles);\n\n        return (\n            <React.Fragment>\n                <AddSystemModal\n                    selectedSystemIds={ systems.map(system => system.id) }\n                    confirmModal={ this.fetchCompare }\n                    referenceId={ this.referenceId }\n                />\n                { emptyState && !loading ? this.renderEmptyState() : this.renderTable(filteredCompareData, loading) }\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        fullCompareData: state.compareState.fullCompareData,\n        filteredCompareData: state.compareState.filteredCompareData,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines,\n        historicalProfiles: state.compareState.historicalProfiles,\n        factSort: state.compareState.factSort,\n        stateSort: state.compareState.stateSort,\n        expandedRows: state.compareState.expandedRows,\n        emptyState: state.compareState.emptyState\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchCompare: ((systemIds, baselineIds, historicalProfiles, referenceId) =>\n            dispatch(compareActions.fetchCompare(systemIds, baselineIds, historicalProfiles, referenceId))\n        ),\n        toggleFactSort: (sortType) => dispatch(compareActions.toggleFactSort(sortType)),\n        toggleStateSort: (sortType) => dispatch(compareActions.toggleStateSort(sortType)),\n        expandRow: (factName) => dispatch(compareActions.expandRow(factName)),\n        setSelectedBaselines: ((selectedBaselineIds, tableId) =>\n            dispatch(baselinesTableActions.setSelectedBaselines(selectedBaselineIds, tableId))\n        ),\n        selectHistoricProfiles: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfiles(historicProfileIds)),\n        setSelectedHistoricProfiles: (HPIds) => dispatch(historicProfilesActions.setSelectedHistoricProfiles(HPIds))\n    };\n}\n\nDriftTable.propTypes = {\n    addSystemModalOpened: PropTypes.bool,\n    location: PropTypes.object,\n    history: PropTypes.object,\n    fetchCompare: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    filteredCompareData: PropTypes.array,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    historicalProfiles: PropTypes.array,\n    factSort: PropTypes.string,\n    stateSort: PropTypes.string,\n    loading: PropTypes.bool,\n    toggleFactSort: PropTypes.func,\n    toggleStateSort: PropTypes.func,\n    expandRow: PropTypes.func,\n    expandedRows: PropTypes.array,\n    setSelectedBaselines: PropTypes.func,\n    setSelectedHistoricProfiles: PropTypes.func,\n    selectHistoricProfiles: PropTypes.func,\n    emptyState: PropTypes.bool\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftTable));\n","import types from './types';\n\nfunction toggleFilterDropDown() {\n    return {\n        type: types.OPEN_FILTER_DROPDOWN\n    };\n}\n\nexport default {\n    toggleFilterDropDown\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox, Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { filterDropdownActions } from './redux';\n\nclass FilterDropDown extends Component {\n    constructor(props) {\n        super(props);\n        this.onToggle = this.onToggle.bind(this);\n        this.createDropdownItem = this.createDropdownItem.bind(this);\n    }\n\n    onToggle() {\n        this.props.toggleDropDown();\n    }\n\n    createDropdownItem(stateFilter) {\n        let dropdownItem = <Checkbox\n            className=\"state-filter-checkbox\"\n            id={ stateFilter.display }\n            label={ stateFilter.display }\n            isChecked={ stateFilter.selected }\n            onChange={ () =>\n                this.props.addStateFilter(stateFilter)\n            } />;\n\n        return dropdownItem;\n    }\n\n    createDropdownArray(stateFilters) {\n        let dropdownItems = [];\n\n        stateFilters.forEach(function(stateFilter) {\n            let dropdownItem = this.createDropdownItem(stateFilter);\n            dropdownItems.push(dropdownItem);\n        }.bind(this));\n\n        return dropdownItems;\n    }\n\n    createSelectedViewsString(stateFilters) {\n        let selectedViewsArray = [];\n        let selectedViews = '';\n\n        for (let i = 0; i < stateFilters.length; i++) {\n            if (stateFilters[i].selected) {\n                selectedViewsArray.push(stateFilters[i].display);\n            }\n        }\n\n        for (let i = 0; i < selectedViewsArray.length; i++) {\n            selectedViews += selectedViewsArray[i];\n\n            if ((i + 1) < selectedViewsArray.length) {\n                selectedViews += ', ';\n            }\n        }\n\n        return selectedViews;\n    }\n\n    render() {\n        const { stateFilters } = this.props;\n        let dropdownItems = [];\n        let selectedViews = '';\n\n        dropdownItems = this.createDropdownArray(stateFilters);\n        selectedViews = this.createSelectedViewsString(stateFilters);\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    className=\"state-filter-dropdown\"\n                    onSelect={ this.onToggle }\n                    toggle={ <DropdownToggle onToggle={ this.onToggle }>\n                        View: { selectedViews }\n                    </DropdownToggle> }\n                    isOpen={ this.props.filterDropdownOpened }\n                    dropdownItems={ dropdownItems }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nFilterDropDown.propTypes = {\n    toggleDropDown: PropTypes.func,\n    filterDropdownOpened: PropTypes.bool,\n    stateFilters: PropTypes.array,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        filterDropdownOpened: state.filterDropdownOpened,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleDropDown: () => dispatch(filterDropdownActions.toggleFilterDropDown()),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(FilterDropDown));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TextInput } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { compareActions } from '../../modules';\n\nexport class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: this.props.factFilter\n        };\n\n        this.setFactFilter = this.setFactFilter.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.factFilter !== '' && this.props.factFilter === '') {\n            this.setState({ filter: this.props.factFilter });\n        }\n    }\n\n    updateFactFilter = (filter) => {\n        this.setState({ filter });\n        this.setFactFilter(filter);\n    }\n\n    setFactFilter = _.debounce(function(filter) {\n        this.props.changeFactFilter(filter);\n    }, 250);\n\n    render() {\n        return (\n            <React.Fragment>\n                <TextInput\n                    value={ this.state.filter }\n                    id=\"filterByFact\"\n                    placeholder=\"Filter by fact\"\n                    onChange={ this.updateFactFilter }\n                    aria-label=\"filter by fact\"\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nSearchBar.propTypes = {\n    changeFactFilter: PropTypes.func,\n    factFilter: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeFactFilter: (factFilter) => dispatch(compareActions.filterByFact(factFilter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(SearchBar));\n","import types from './types';\n\nfunction toggleKebab() {\n    return {\n        type: types.TOGGLE_KEBAB\n    };\n}\n\nexport default {\n    toggleKebab\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../../modules';\nimport { actionKebabActions } from './redux';\nimport { Dropdown, KebabToggle, DropdownItem } from '@patternfly/react-core';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { historicProfilesActions } from '../../HistoricalProfilesDropdown/redux';\n\nclass ActionKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.removeSystemsSelect = this.removeSystemsSelect.bind(this);\n    }\n\n    removeSystemsSelect() {\n        const { history, toggleKebab, removeSystems, clearSelectedBaselines, selectHistoricProfiles, selectedHSPIds } = this.props;\n\n        toggleKebab();\n        removeSystems();\n        clearSelectedBaselines('CHECKBOX');\n        selectHistoricProfiles(selectedHSPIds);\n        setHistory(history, []);\n    }\n\n    render() {\n        const dropdownItems = [\n            <DropdownItem key=\"remove-systems\" component=\"button\" onClick={ this.removeSystemsSelect }>Clear all comparisons</DropdownItem>\n        ];\n        return (\n            <Dropdown\n                id='action-kebab'\n                aria-label='action-kebab'\n                style={ { float: 'left' } }\n                toggle={ <KebabToggle onToggle={ this.props.toggleKebab } /> }\n                isOpen={ this.props.kebabOpened }\n                dropdownItems={ dropdownItems }\n                isPlain\n            />\n        );\n    }\n}\n\nActionKebab.propTypes = {\n    removeSystems: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func,\n    toggleKebab: PropTypes.func,\n    kebabOpened: PropTypes.bool,\n    history: PropTypes.object,\n    selectedHSPIds: PropTypes.array,\n    selectHistoricProfiles: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        kebabOpened: state.kebabOpened,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        removeSystems: () => dispatch(compareActions.clearState()),\n        clearSelectedBaselines: (tableId) => dispatch(baselinesTableActions.clearSelectedBaselines(tableId)),\n        toggleKebab: () => dispatch(actionKebabActions.toggleKebab()),\n        selectHistoricProfiles: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfiles(historicProfileIds))\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ActionKebab));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../modules';\nimport { errorAlertActions } from './redux';\nimport { setHistory } from '../../Utilities/SetHistory';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nclass ErrorAlert extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    confirmDriftModal = () => {\n        const { toggleModal, revertCompareData, history, previousStateSystems } = this.props;\n\n        toggleModal();\n        revertCompareData();\n        setHistory(history, previousStateSystems.map(system => system.id));\n    }\n\n    confirmBaselineModal = () => {\n        const { toggleModal, revertBaselineFetch, tableId } = this.props;\n\n        toggleModal();\n        revertBaselineFetch(tableId);\n    }\n\n    render() {\n        const { errorAlertOpened, error, baselineError } = this.props;\n\n        return (\n            <React.Fragment>\n                { errorAlertOpened && (\n                    <Alert\n                        variant=\"danger\"\n                        title=\"Error\"\n                        action={\n                            <AlertActionCloseButton\n                                onClose={ () =>\n                                    error.status ? this.confirmDriftModal() : this.confirmBaselineModal()\n                                }\n                            />\n                        }\n                    >\n                        Status Code: { error.status ? error.status : baselineError.status }<br></br>\n                        { error.detail ? error.detail : baselineError.detail }\n                    </Alert>\n                ) }\n            </React.Fragment>\n        );\n    }\n}\n\nErrorAlert.propTypes = {\n    confirmModal: PropTypes.func,\n    errorAlertOpened: PropTypes.bool,\n    error: PropTypes.object,\n    baselineError: PropTypes.object,\n    toggleModal: PropTypes.func,\n    history: PropTypes.object,\n    fullCompareData: PropTypes.array,\n    revertCompareData: PropTypes.func,\n    previousStateSystems: PropTypes.array,\n    revertBaselineFetch: PropTypes.func,\n    tableId: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        fullCompareData: state.compareState.fullCompareData,\n        previousStateSystems: state.compareState.previousStateSystems,\n        errorAlertOpened: state.errorAlertOpened,\n        error: state.compareState.error,\n        baselineError: state.baselinesTableState.checkboxTable.baselineError\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        revertCompareData: () => dispatch(compareActions.revertCompareData()),\n        revertBaselineFetch: (tableId) => dispatch(baselinesTableActions.revertBaselineFetch(tableId))\n    };\n}\n\nexport default withRouter (connect(mapStateToProps, mapDispatchToProps)(ErrorAlert));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { Pagination, DropdownDirection } from '@patternfly/react-core';\n\nconst perPageOptions = [\n    { title: '10', value: 10 },\n    { title: '25', value: 25 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nclass TablePagination extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onSetPage = this.onSetPage.bind(this);\n        this.onPerPageSelect = this.onPerPageSelect.bind(this);\n    }\n\n    onSetPage(event, page) {\n        const { perPage } = this.props;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    onPerPageSelect(event, perPage) {\n        const page = 1;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    render() {\n        const { totalFacts, page, perPage } = this.props;\n\n        return (\n            <Pagination\n                itemCount={ totalFacts ? totalFacts : 0 }\n                perPageOptions={ perPageOptions }\n                page={ totalFacts === 0 ? 0 : page }\n                perPage={ perPage }\n                dropDirection={ DropdownDirection.down }\n                onSetPage={ this.onSetPage }\n                onPerPageSelect={ this.onPerPageSelect }\n                isCompact={ true }\n            />\n        );\n    }\n}\n\nTablePagination.propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    updatePagination: PropTypes.func,\n    totalFacts: PropTypes.number\n};\n\nfunction mapStateToProps(state) {\n    return {\n        page: state.compareState.page,\n        perPage: state.compareState.perPage,\n        totalFacts: state.compareState.totalFacts\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updatePagination: ((pagination) => dispatch(compareActions.updatePagination(pagination)))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePagination);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { ExportIcon } from '@patternfly/react-icons';\nimport { compareActions } from '../../modules';\n\nclass ExportCSVButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { exportToCSV } = this.props;\n\n        return (\n            <ExportIcon className='pointer not-active export-button-margin' onClick={ exportToCSV } />\n        );\n    }\n}\n\nExportCSVButton.propTypes = {\n    exportToCSV: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        exportToCSV: () => dispatch(compareActions.exportToCSV())\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(ExportCSVButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Chip, ChipGroup, ChipGroupToolbarItem } from '@patternfly/react-core';\n\nimport { compareActions } from '../../modules';\n\nexport class DriftFilterChips extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chipGroup: [\n                { category: 'State', chips: this.setStateChips(this.props.stateFilters) },\n                { category: 'Name', chips:\n                    this.props.factFilter !== ''\n                        ? [ this.props.factFilter ]\n                        : []\n                }\n            ]\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { stateFilters, factFilter } = this.props;\n        let newStateChips;\n        let newFactFilter;\n        let newChipGroup;\n\n        if (stateFilters !== prevProps.stateFilters) {\n            let filteredChips = [];\n\n            stateFilters.forEach(function(filter) {\n                if (filter.selected) {\n                    filteredChips.push(filter.display);\n                }\n            });\n\n            newStateChips = { category: 'State', chips: filteredChips };\n\n            newChipGroup = [ newStateChips, this.state.chipGroup[1] ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n\n        if (factFilter !== prevProps.factFilter) {\n            newFactFilter = { category: 'Name', chips:\n                factFilter !== ''\n                    ? [ factFilter ]\n                    : []\n            };\n\n            newChipGroup = [ this.state.chipGroup[0], newFactFilter ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n    }\n\n    setStateChips = (stateFilters) => {\n        let stateChips = [];\n\n        stateFilters.forEach(function(filter) {\n            if (filter.selected) {\n                stateChips.push(filter.display);\n            }\n        });\n\n        return stateChips;\n    }\n\n    removeChip = (chip) => {\n        const { stateFilters, addStateFilter, filterByFact } = this.props;\n\n        if (chip === 'Same' || chip === 'Different' || chip === 'Incomplete data') {\n            stateFilters.forEach(function(stateFilter) {\n                if (stateFilter.display === chip) {\n                    addStateFilter(stateFilter);\n                }\n            });\n        } else {\n            filterByFact('');\n        }\n    }\n\n    render() {\n        const { chipGroup } = this.state;\n        let chipKeyCount = 0;\n\n        return (\n            <ChipGroup withToolbar>\n                { chipGroup.map(currentGroup => (\n                    <ChipGroupToolbarItem key={ currentGroup.category } categoryName={ currentGroup.category }>\n                        { currentGroup.chips.map(chip => (\n                            <Chip key={ currentGroup.category + chipKeyCount++ } onClick={ () => this.removeChip(chip) }>\n                                { chip }\n                            </Chip>\n                        )) }\n                    </ChipGroupToolbarItem>\n                )) }\n            </ChipGroup>\n        );\n    }\n}\n\nDriftFilterChips.propTypes = {\n    factFilter: PropTypes.string,\n    stateFilters: PropTypes.array,\n    filterByFact: PropTypes.func,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        filterByFact: (filter) => dispatch(compareActions.filterByFact(filter)),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DriftFilterChips);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport { errorAlertActions } from '../ErrorAlert/redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nimport DriftTable from './DriftTable/DriftTable';\nimport FilterDropDown from './FilterDropDown/FilterDropDown';\nimport SearchBar from './SearchBar/SearchBar';\nimport ActionKebab from './ActionKebab/ActionKebab';\nimport ErrorAlert from '../ErrorAlert/ErrorAlert';\nimport TablePagination from './Pagination/Pagination';\nimport ExportCSVButton from './ExportCSVButton/ExportCSVButton';\nimport DriftFilterChips from './DriftFilterChips/DriftFilterChips';\nimport AddSystemButton from './AddSystemButton/AddSystemButton';\n\nexport class DriftPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.props.clearSelectedBaselines('CHECKBOX');\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    render() {\n        const { loading, emptyState } = this.props;\n\n        if (this.props.error.detail) {\n            this.props.toggleErrorAlert();\n        }\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='Comparison'/>\n                </PageHeader>\n                <Main>\n                    <ErrorAlert />\n                    <Card className='pf-t-light pf-m-opaque-100'>\n                        <CardBody>\n                            <div>\n                                { !emptyState ?\n                                    <React.Fragment>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <SearchBar />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <FilterDropDown />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <AddSystemButton loading={ loading } />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ExportCSVButton />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ActionKebab />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                            <ToolbarGroup className=\"pf-c-pagination\">\n                                                <ToolbarItem>\n                                                    <TablePagination />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <DriftFilterChips />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                    </React.Fragment>\n                                    : null\n                                }\n                                <DriftTable />\n                                { !emptyState && !loading ?\n                                    <Toolbar className=\"drift-toolbar\">\n                                        <ToolbarGroup className=\"pf-c-pagination\">\n                                            <ToolbarItem>\n                                                <TablePagination />\n                                            </ToolbarItem>\n                                        </ToolbarGroup>\n                                    </Toolbar>\n                                    : null\n                                }\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nDriftPage.propTypes = {\n    error: PropTypes.object,\n    loading: PropTypes.bool,\n    toggleErrorAlert: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func,\n    emptyState: PropTypes.bool\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleErrorAlert: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        clearSelectedBaselines: (tableId) => dispatch(baselinesTableActions.clearSelectedBaselines(tableId))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return {\n        error: state.compareState.error,\n        loading: state.compareState.loading,\n        emptyState: state.compareState.emptyState\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftPage));\n"],"sourceRoot":""}