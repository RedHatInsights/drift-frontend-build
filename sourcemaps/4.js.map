{"version":3,"sources":["webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./node_modules/react-cookie/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///./src/SmartComponents/ErrorAlert/redux/actions.js","webpack:///./src/Utilities/SetHistory.js","webpack:///./node_modules/react-cookie/es6/withCookies.js","webpack:///./src/SmartComponents/AddSystemModal/AddSystemModal.js","webpack:///./src/SmartComponents/DriftPage/AddSystemButton/AddSystemButton.js","webpack:///./src/SmartComponents/StateIcon/StateIcon.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/ReferenceSelector/ReferenceSelector.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/DriftTable.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/FilterDropDown.js","webpack:///./src/SmartComponents/DriftPage/SearchBar/SearchBar.js","webpack:///./src/SmartComponents/ErrorAlert/ErrorAlert.js","webpack:///./src/SmartComponents/DriftPage/Pagination/Pagination.js","webpack:///./src/SmartComponents/DriftPage/ExportCSVButton/ExportCSVButton.js","webpack:///./src/SmartComponents/DriftPage/DriftFilterChips/DriftFilterChips.js","webpack:///./src/SmartComponents/DriftPage/DriftPage.js"],"names":["strictUriEncode","objectAssign","encode","value","opts","strict","encodeURIComponent","exports","extract","str","split","parse","formatter","result","arrayFormat","key","accumulator","exec","replace","undefined","concat","parserForArrayFormat","ret","Object","create","trim","forEach","param","parts","shift","val","length","join","decodeURIComponent","keys","sort","reduce","Boolean","Array","isArray","keysSorter","input","a","b","Number","map","stringify","obj","index","encoderForArrayFormat","slice","val2","push","filter","x","module","c","charCodeAt","toString","toUpperCase","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arr","i","Symbol","iterator","prototype","call","_arr","_n","_d","_e","_s","_i","next","done","err","TypeError","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","e","toggleErrorAlert","types","OPEN_ERROR_ALERT","setHistory","history","systemIds","baselineIds","hspIds","referenceId","search","queryString","system_ids","baseline_ids","hsp_ids","reference_id","extendStatics","__extends","d","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","__assign","assign","t","s","n","apply","__rest","indexOf","propertyIsEnumerable","hoistStatics","AddSystemModal","props","onSelect","event","isSelected","rowId","baselineTableData","selectBaseline","item","onBulkSelect","ids","baseline","confirmModal","bind","cancelSelection","changeActiveTab","state","columns","title","transforms","sortable","window","insights","chrome","auth","getUser","entities","selectedBaselineIds","toggleModal","selectedHSPIds","selectedSystemIds","systems","system","id","tabIndex","selectActiveTab","activeTab","addSystemModalOpened","historicalProfiles","loading","Fragment","Modal","className","isOpen","onClose","isFooterLeftAligned","actions","Button","variant","onClick","isDisabled","Tabs","activeKey","Tab","eventKey","SystemsTable","hasHistoricalDropdown","BaselinesTable","tableId","hasMultiSelect","tableData","Component","cookies","instanceOf","Cookies","isRequired","showModal","PropTypes","bool","number","func","object","array","baselines","string","withCookies","WrappedComponent","CookieWrapper","ForwardedComponent","connect","addSystemModalState","compareState","baselinesTableState","checkboxTable","historicProfilesState","dispatch","addSystemModalActions","toggleAddSystemModal","newActiveTab","baselinesTableActions","_super","_this","onChange","forceUpdate","listen","addChangeListener","unlisten","removeChangeListener","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","_a","forwardedRef","restProps","allCookies","getAll","ref","AddSystemButton","isTable","StateIcon","factState","color","height","width","icon","ReferenceSelector","isReference","updateReferenceId","DriftTable","shiftReferenceToFront","masterList","systemToMove","findIndex","splice","unshift","fetchCompare","HSPIds","emptyStateMessage","setSystemIds","setBaselineIds","setHSPIds","setReferenceId","removeSystem","formatDate","fullHistoricalSystemList","historicalGroups","hsp","system_id","hsps","find","entries","location","setSelectedBaselines","selectHistoricProfiles","dateString","moment","utc","format","profile","setSelectedHistoricProfiles","facts","rows","fact","renderRow","rowData","size","SkeletonSize","md","row","sys","comparisons","expandedRows","includes","renderExpandableRowButton","comparison","renderRowChild","findSystem","typeIcon","header-id","display_name","system_profile_exists","Tooltip","position","content","last_updated","updated","HistoricalProfilesDropdown","dropdownDirection","DropdownDirection","down","hasCompareButton","ASC","DESC","sortType","toggleFactSort","toggleStateSort","stateSort","toggleSort","factSort","renderSortButton","renderSystemHeaders","factName","expandRow","compareData","renderHeaderRow","renderLoadingRows","renderRows","emptyState","filteredCompareData","formatEntities","PlusCircleIcon","text","button","renderTable","fullCompareData","withRouter","compareActions","historicProfileIds","historicProfilesActions","HPIds","toggleFilterDropDown","OPEN_FILTER_DROPDOWN","FilterDropDown","onToggle","createDropdownItem","toggleDropDown","stateFilter","Checkbox","display","label","isChecked","selected","addStateFilter","stateFilters","dropdownItems","dropdownItem","selectedViewsArray","selectedViews","createDropdownArray","createSelectedViewsString","Dropdown","toggle","DropdownToggle","filterDropdownOpened","filterDropdownActions","SearchBar","updateFactFilter","setState","setFactFilter","changeFactFilter","factFilter","TextInput","placeholder","aria-label","filterByFact","ErrorAlert","confirmDriftModal","revertCompareData","previousStateSystems","confirmBaselineModal","revertBaselineFetch","errorAlertOpened","error","baselineError","Alert","action","AlertActionCloseButton","status","detail","errorAlertActions","perPageOptions","TablePagination","onSetPage","onPerPageSelect","page","updatePagination","perPage","totalFacts","isCompact","Pagination","itemCount","dropDirection","ExportCSVButton","exportToCSV","DriftFilterChips","setStateChips","stateChips","removeChip","chip","checkChips","chipGroup","setIsEmpty","isEmpty","group","chips","category","newChipGroup","newStateChips","newFactChips","filteredChips","chipKeyCount","ChipGroup","withToolbar","currentGroup","ChipGroupToolbarItem","categoryName","Chip","DriftPage","clearFilters","clearComparisonFilters","clearComparison","clearSelectedBaselines","actionKebabItems","DropdownItem","console","log","Card","CardBody","Toolbar","ToolbarGroup","ToolbarItem","ActionKebab","pagination"],"mappings":"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","file":"js/4-33811fe6afa138b1c918.js","sourcesContent":["'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tformatter(decodeURIComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n};\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n","'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import types from './types';\n\nfunction toggleErrorAlert() {\n    return {\n        type: types.OPEN_ERROR_ALERT\n    };\n}\n\nexport default {\n    toggleErrorAlert\n};\n","import queryString from 'query-string';\n\nexport function setHistory(history, systemIds = [], baselineIds = [], hspIds = [], referenceId) {\n    /*eslint-disable camelcase*/\n    history.push({\n        search: '?' + queryString.stringify({\n            system_ids: systemIds,\n            baseline_ids: baselineIds,\n            hsp_ids: hspIds,\n            reference_id: referenceId\n        })\n    });\n    /*eslint-enable camelcase*/\n}\n","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport * as React from 'react';\r\nimport { Consumer } from './CookiesContext';\r\n// Only way to make function modules work with both TypeScript and Rollup\r\nvar hoistStatics = require('hoist-non-react-statics');\r\nexport default function withCookies(WrappedComponent) {\r\n    // @ts-ignore\r\n    var name = WrappedComponent.displayName || WrappedComponent.name;\r\n    var CookieWrapper = /** @class */ (function (_super) {\r\n        __extends(CookieWrapper, _super);\r\n        function CookieWrapper() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.onChange = function () {\r\n                // Make sure to update children with new values\r\n                _this.forceUpdate();\r\n            };\r\n            return _this;\r\n        }\r\n        CookieWrapper.prototype.listen = function () {\r\n            this.props.cookies.addChangeListener(this.onChange);\r\n        };\r\n        CookieWrapper.prototype.unlisten = function (cookies) {\r\n            (cookies || this.props.cookies).removeChangeListener(this.onChange);\r\n        };\r\n        CookieWrapper.prototype.componentDidMount = function () {\r\n            this.listen();\r\n        };\r\n        CookieWrapper.prototype.componentDidUpdate = function (prevProps) {\r\n            if (prevProps.cookies !== this.props.cookies) {\r\n                this.unlisten(prevProps.cookies);\r\n                this.listen();\r\n            }\r\n        };\r\n        CookieWrapper.prototype.componentWillUnmount = function () {\r\n            this.unlisten();\r\n        };\r\n        CookieWrapper.prototype.render = function () {\r\n            var _a = this.props, forwardedRef = _a.forwardedRef, cookies = _a.cookies, restProps = __rest(_a, [\"forwardedRef\", \"cookies\"]);\r\n            var allCookies = cookies.getAll();\r\n            return (React.createElement(WrappedComponent, __assign({}, restProps, { ref: forwardedRef, cookies: cookies, allCookies: allCookies })));\r\n        };\r\n        CookieWrapper.displayName = \"withCookies(\" + name + \")\";\r\n        CookieWrapper.WrappedComponent = WrappedComponent;\r\n        return CookieWrapper;\r\n    }(React.Component));\r\n    var ForwardedComponent = React.forwardRef(function (props, ref) {\r\n        return (React.createElement(Consumer, null, function (cookies) { return (React.createElement(CookieWrapper, __assign({ cookies: cookies }, props, { forwardedRef: ref }))); }));\r\n    });\r\n    ForwardedComponent.displayName = CookieWrapper.displayName;\r\n    ForwardedComponent.WrappedComponent = CookieWrapper.WrappedComponent;\r\n    return hoistStatics(ForwardedComponent, WrappedComponent);\r\n}\r\n","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Tab, Tabs } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { sortable } from '@patternfly/react-table';\n\nimport SystemsTable from '../SystemsTable/SystemsTable';\nimport BaselinesTable from '../BaselinesTable/BaselinesTable';\nimport { addSystemModalActions } from './redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nexport class AddSystemModal extends Component {\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n        this.cancelSelection = this.cancelSelection.bind(this);\n        this.changeActiveTab = this.changeActiveTab.bind(this);\n\n        this.state = {\n            columns: [\n                { title: 'Name', transforms: [ sortable ]},\n                { title: 'Last updated', transforms: [ sortable ]}\n            ]\n        };\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    onSelect = (event, isSelected, rowId) => {\n        const { baselineTableData, selectBaseline } = this.props;\n        let ids;\n\n        if (rowId === -1) {\n            ids = baselineTableData.map(function(item) {\n                return item[0];\n            });\n        } else {\n            ids = [ baselineTableData[rowId][0] ];\n        }\n\n        selectBaseline(ids, isSelected, 'CHECKBOX');\n    }\n\n    confirmModal() {\n        const { confirmModal, entities, selectedBaselineIds, toggleModal, selectedHSPIds, referenceId } = this.props;\n\n        confirmModal(\n            entities.selectedSystemIds,\n            selectedBaselineIds,\n            selectedHSPIds,\n            referenceId\n        );\n        toggleModal();\n    }\n\n    cancelSelection() {\n        this.props.toggleModal();\n    }\n\n    selectedSystemIds() {\n        let ids = this.props.systems.map(function (system) {\n            return system.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    changeActiveTab(event, tabIndex) {\n        const { selectActiveTab } = this.props;\n\n        selectActiveTab(tabIndex);\n    }\n\n    onBulkSelect = (isSelected) => {\n        const { baselineTableData, selectBaseline } = this.props;\n        let ids = [];\n\n        baselineTableData.forEach(function(baseline) {\n            ids.push(baseline[0]);\n        });\n\n        selectBaseline(ids, isSelected, 'CHECKBOX');\n    }\n\n    render() {\n        const { activeTab, addSystemModalOpened, baselineTableData, historicalProfiles, loading,\n            entities, selectedBaselineIds, selectedHSPIds } = this.props;\n        const { columns } = this.state;\n\n        return (\n            <React.Fragment>\n                <Modal\n                    className=\"add-system-modal\"\n                    title=\"Add to comparison\"\n                    isOpen={ addSystemModalOpened }\n                    onClose={ this.cancelSelection }\n                    isFooterLeftAligned\n                    actions={ [\n                        <Button\n                            key=\"confirm\"\n                            variant=\"primary\"\n                            onClick={ this.confirmModal }\n                            isDisabled={\n                                (entities && entities.selectedSystemIds && entities.selectedSystemIds.length === 0) &&\n                                selectedBaselineIds.length === 0 &&\n                                selectedHSPIds.length === 0\n                            }\n                        >\n                            Submit\n                        </Button>\n                    ] }\n                >\n                    <Tabs\n                        activeKey={ activeTab }\n                        onSelect={ this.changeActiveTab }\n                    >\n                        <Tab\n                            eventKey={ 0 }\n                            title=\"Systems\"\n                            id='systems-tab'\n                        >\n                            <SystemsTable\n                                selectedSystemIds={ this.selectedSystemIds() }\n                                hasHistoricalDropdown={ true }\n                                historicalProfiles={ historicalProfiles }\n                            />\n                        </Tab>\n                        <Tab\n                            eventKey={ 1 }\n                            title=\"Baselines\"\n                            id='baselines-tab'\n                        >\n                            <BaselinesTable\n                                tableId='CHECKBOX'\n                                hasMultiSelect={ true }\n                                onSelect={ this.onSelect }\n                                tableData={ baselineTableData }\n                                loading={ loading }\n                                columns={ columns }\n                                onBulkSelect={ this.onBulkSelect }\n                                selectedBaselineIds={ selectedBaselineIds }\n                            />\n                        </Tab>\n                    </Tabs>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nAddSystemModal.propTypes = {\n    showModal: PropTypes.bool,\n    addSystemModalOpened: PropTypes.bool,\n    activeTab: PropTypes.number,\n    confirmModal: PropTypes.func,\n    cancelSelection: PropTypes.func,\n    toggleModal: PropTypes.func,\n    selectActiveTab: PropTypes.func,\n    entities: PropTypes.object,\n    systems: PropTypes.array,\n    selectedBaselineIds: PropTypes.array,\n    baselines: PropTypes.array,\n    selectedHSPIds: PropTypes.array,\n    loading: PropTypes.bool,\n    baselineTableData: PropTypes.array,\n    selectBaseline: PropTypes.func,\n    historicalProfiles: PropTypes.array,\n    referenceId: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        systems: state.compareState.systems,\n        activeTab: state.addSystemModalState.activeTab,\n        entities: state.entities,\n        selectedBaselineIds: state.baselinesTableState.checkboxTable.selectedBaselineIds,\n        baselines: state.compareState.baselines,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds,\n        loading: state.baselinesTableState.checkboxTable.loading,\n        baselineTableData: state.baselinesTableState.checkboxTable.baselineTableData,\n        historicalProfiles: state.compareState.historicalProfiles\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(addSystemModalActions.toggleAddSystemModal()),\n        selectActiveTab: (newActiveTab) => dispatch(addSystemModalActions.selectActiveTab(newActiveTab)),\n        selectBaseline: (id, isSelected, tableId) => dispatch(baselinesTableActions.selectBaseline(id, isSelected, tableId))\n    };\n}\n\nexport default withCookies(connect(mapStateToProps, mapDispatchToProps)(AddSystemModal));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\n\nimport { addSystemModalActions } from '../../AddSystemModal/redux';\n\nexport class AddSystemButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { loading, toggleAddSystemModal, isTable } = this.props;\n\n        return (\n            <Button\n                className=\"add-system-button\"\n                variant='primary'\n                onClick={ toggleAddSystemModal }\n                isDisabled={ loading ? true : false }\n            >\n                { isTable ? 'Add' : 'Add to comparison' }\n            </Button>\n        );\n    }\n}\n\nAddSystemButton.propTypes = {\n    toggleAddSystemModal: PropTypes.func,\n    isTable: PropTypes.bool,\n    loading: PropTypes.bool\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleAddSystemModal: (() => dispatch(addSystemModalActions.toggleAddSystemModal()))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddSystemButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckCircleIcon, QuestionCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\n\nclass StateIcon extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    icon() {\n        let iconClass = '';\n\n        if (this.props.factState === 'SAME') {\n            iconClass = <CheckCircleIcon color='#3E8635' height='20px' width='20px'/>;\n        } else if (this.props.factState === 'DIFFERENT') {\n            iconClass = <ExclamationCircleIcon color='#C9190B' height='20px' width='20px'/>;\n        } else {\n            iconClass = <QuestionCircleIcon color='#151515' height='20px' width='20px'/>;\n        }\n\n        return iconClass;\n    };\n\n    render() {\n        return (\n            this.icon()\n        );\n    }\n}\n\nStateIcon.propTypes = {\n    factState: PropTypes.string\n};\n\nexport default StateIcon;\n","import React, { Component } from 'react';\nimport { OutlinedStarIcon, StarIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\n\nclass ReferenceSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isReference: this.props.isReference\n        };\n    }\n\n    render() {\n        const { updateReferenceId, id } = this.props;\n        const { isReference } = this.state;\n\n        return (\n            isReference\n                ? <StarIcon\n                    className='reference-selector pointer'\n                    onClick={ () => updateReferenceId() }\n                />\n                : <OutlinedStarIcon\n                    className='reference-selector pointer'\n                    onClick={ () => updateReferenceId(id) }\n                />\n        );\n    }\n}\n\nReferenceSelector.propTypes = {\n    isReference: PropTypes.bool,\n    updateReferenceId: PropTypes.func,\n    id: PropTypes.string\n};\n\nexport default ReferenceSelector;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { DropdownDirection/*, EmptyState, EmptyStateBody, EmptyStateIcon, Title*/, Tooltip } from '@patternfly/react-core';\nimport queryString from 'query-string';\nimport { ClockIcon, TimesIcon, ExclamationTriangleIcon, PlusCircleIcon, ServerIcon, BlueprintIcon } from '@patternfly/react-icons';\nimport { AngleDownIcon, AngleRightIcon, LongArrowAltUpIcon, LongArrowAltDownIcon, ArrowsAltVIcon } from '@patternfly/react-icons';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport moment from 'moment';\n\nimport AddSystemModal from '../../AddSystemModal/AddSystemModal';\nimport AddSystemButton from '../AddSystemButton/AddSystemButton';\nimport StateIcon from '../../StateIcon/StateIcon';\nimport { ASC, DESC } from '../../../constants';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport HistoricalProfilesDropdown from '../../HistoricalProfilesDropdown/HistoricalProfilesDropdown';\nimport EmptyState from '../../EmptyStateDisplay/EmptyStateDisplay';\nimport { compareActions } from '../../modules';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { historicProfilesActions } from '../../HistoricalProfilesDropdown/redux';\nimport ReferenceSelector from './ReferenceSelector/ReferenceSelector';\n\nexport class DriftTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            emptyStateMessage: [\n                'You currently have no system or baselines displayed. Add at least two',\n                'systems or baselines to compare their facts.'\n            ]\n        };\n\n        this.masterList = [];\n\n        this.setSystemIds();\n        this.setBaselineIds();\n        this.setHSPIds();\n        this.setReferenceId();\n        this.fetchCompare = this.fetchCompare.bind(this);\n        this.removeSystem = this.removeSystem.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n        const { fetchCompare } = this.props;\n\n        if (this.systemIds.length > 0 || this.baselineIds.length > 0 || this.HSPIds.length > 0) {\n            fetchCompare(this.systemIds, this.baselineIds, this.HSPIds, this.props.referenceId);\n        }\n    }\n\n    shiftReferenceToFront = (masterList) => {\n        let index;\n        let systemToMove;\n\n        index = masterList.findIndex((item) => {\n            return item.id === this.props.referenceId;\n        });\n\n        systemToMove = masterList.splice(index, 1);\n        masterList.unshift(systemToMove[0]);\n\n        return masterList;\n    }\n\n    formatEntities(systems, baselines, historicalProfiles) {\n        /*eslint-disable camelcase*/\n        let fullHistoricalSystemList = [];\n        let historicalGroups = {};\n        let masterList;\n\n        if (systems.length === 0 && baselines.length === 0 && historicalProfiles.length === 0) {\n            return [];\n        }\n\n        systems = systems.map(function(system) {\n            system.type = 'system';\n            return system;\n        });\n        baselines = baselines.map(function(baseline) {\n            baseline.type = 'baseline';\n            return baseline;\n        });\n        historicalProfiles = historicalProfiles.map(function(hsp) {\n            hsp.type = 'historical-system-profile';\n            return hsp;\n        });\n\n        historicalProfiles.forEach(function(hsp) {\n            if (historicalGroups.hasOwnProperty(hsp.system_id)) {\n                historicalGroups[hsp.system_id].push(hsp);\n            } else {\n                historicalGroups[hsp.system_id] = [ hsp ];\n            }\n        });\n\n        fullHistoricalSystemList = systems;\n\n        for (const [ system_id, hsps ] of Object.entries(historicalGroups)) {\n            let system = systems.find(item => system_id === item.id);\n            let index;\n\n            if (system !== undefined) {\n                index = fullHistoricalSystemList.indexOf(system);\n                fullHistoricalSystemList = [\n                    ...fullHistoricalSystemList.slice(0, index + 1),\n                    ...hsps,\n                    ...fullHistoricalSystemList.slice(index + 1, fullHistoricalSystemList.length)\n                ];\n            } else {\n                fullHistoricalSystemList = fullHistoricalSystemList.concat(hsps);\n            }\n        }\n        /*eslint-enable camelcase*/\n\n        masterList = baselines.concat(fullHistoricalSystemList);\n\n        if (this.props.referenceId) {\n            masterList = this.shiftReferenceToFront(masterList);\n        }\n\n        return masterList;\n    }\n\n    setSystemIds() {\n        this.systemIds = queryString.parse(this.props.location.search).system_ids;\n        this.systemIds = Array.isArray(this.systemIds) ? this.systemIds : [ this.systemIds ];\n        this.systemIds = this.systemIds.filter(item => item !== undefined);\n    }\n\n    setBaselineIds() {\n        this.baselineIds = queryString.parse(this.props.location.search).baseline_ids;\n        this.baselineIds = Array.isArray(this.baselineIds) ? this.baselineIds : [ this.baselineIds ];\n        this.baselineIds = this.baselineIds.filter(item => item !== undefined);\n        this.props.setSelectedBaselines(this.baselineIds, 'CHECKBOX');\n    }\n\n    setHSPIds() {\n        const { selectHistoricProfiles } = this.props;\n\n        this.HSPIds = queryString.parse(this.props.location.search).hsp_ids;\n        this.HSPIds = Array.isArray(this.HSPIds) ? this.HSPIds : [ this.HSPIds ];\n        this.HSPIds = this.HSPIds.filter(item => item !== undefined);\n        selectHistoricProfiles(this.HSPIds);\n    }\n\n    setReferenceId() {\n        this.props.updateReferenceId(queryString.parse(this.props.location.search).reference_id);\n    }\n\n    updateReferenceId = (id) => {\n        this.fetchCompare(this.systemIds, this.baselineIds, this.HSPIds, id);\n    }\n\n    formatDate(dateString) {\n        return moment.utc(dateString).format('DD MMM YYYY, HH:mm UTC');\n    }\n\n    async removeSystem(item) {\n        if (item.type === 'system') {\n            this.systemIds = this.systemIds.filter(id => id !== item.id);\n\n            this.HSPIds = this.props.historicalProfiles.filter((profile) => {\n                return profile.system_id !== item.id;\n            }).map(profile => profile.id);\n\n        } else if (item.type === 'baseline') {\n            this.baselineIds = this.baselineIds.filter(id => id !== item.id);\n        } else if (item.type === 'historical-system-profile') {\n            this.HSPIds = this.HSPIds.filter(id => id !== item.id);\n        }\n\n        if (item.id === this.props.referenceId) {\n            await this.props.updateReferenceId();\n        }\n\n        this.props.setSelectedHistoricProfiles(this.HSPIds);\n        this.fetchCompare(this.systemIds, this.baselineIds, this.HSPIds, this.props.referenceId);\n    }\n\n    fetchCompare(systemIds, baselineIds, HSPIds, referenceId) {\n        this.systemIds = systemIds;\n        this.baselineIds = baselineIds;\n        this.HSPIds = HSPIds;\n\n        setHistory(this.props.history, systemIds, baselineIds, HSPIds, referenceId);\n        this.props.setSelectedBaselines(this.baselineIds, 'CHECKBOX');\n        this.props.updateReferenceId(referenceId);\n        this.props.fetchCompare(systemIds, baselineIds, HSPIds, referenceId);\n    }\n\n    renderRows(facts) {\n        let rows = [];\n\n        if (facts !== undefined) {\n            facts.forEach(fact => {\n                rows.push(this.renderRow(fact));\n            });\n        }\n\n        return rows;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n        let rowData = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rowData.push(<td><Skeleton size={ SkeletonSize.md } /></td>);\n        }\n\n        for (let i = 0; i < 10; i += 1) {\n            rows.push(<tr>{ rowData }</tr>);\n        }\n\n        return rows;\n    }\n\n    findSystem(fact) {\n        let row = [];\n        let system = undefined;\n        let className;\n\n        this.masterList.forEach(item => {\n            className = [ 'comparison-cell' ];\n            system = fact.systems.find(function(sys) {\n                return sys.id === item.id;\n            });\n\n            if (this.props.referenceId) {\n                if (system.state === 'DIFFERENT') {\n                    className.push('highlight');\n                    className.push('different-fact-cell');\n                }\n            } else {\n                if (fact.state === 'DIFFERENT') {\n                    className.push('highlight');\n                }\n            }\n\n            row.push(<td className={ className.join(' ') }>{ system.value === null ? 'No Data' : system.value }</td>);\n        });\n\n        return row;\n    }\n\n    renderRow(fact) {\n        let row = [];\n        let rows = [];\n\n        if (fact.comparisons) {\n            row.push(\n                <td className={\n                    this.props.expandedRows.includes(fact.name) ?\n                        'nested-fact sticky-column fixed-column-1' :\n                        'sticky-column fixed-column-1' }>\n                    { this.renderExpandableRowButton(this.props.expandedRows, fact.name) } { fact.name }\n                </td>\n            );\n            row.push(\n                <td className=\"fact-state sticky-column fixed-column-2\">\n                    <StateIcon factState={ fact.state }/>\n                </td>\n            );\n\n            this.masterList.forEach(() => {\n                row.push(<td className=\"comparison-cell\"></td>);\n            });\n\n            rows.push(<tr>{ row }</tr>);\n\n            if (this.props.expandedRows.includes(fact.name)) {\n                fact.comparisons.forEach(comparison => {\n                    row = this.renderRowChild(comparison);\n                    rows.push(<tr className={ comparison.state === 'DIFFERENT' ? 'unexpected-row' : '' }>{ row }</tr>);\n                });\n            }\n        } else {\n            row.push(<td className=\"sticky-column fixed-column-1\">{ fact.name }</td>);\n            row.push(\n                <td className=\"fact-state sticky-column fixed-column-2\">\n                    <StateIcon factState={ fact.state }/>\n                </td>\n            );\n\n            row = row.concat(this.findSystem(fact));\n\n            rows.push(<tr className={ fact.state === 'DIFFERENT' ? 'unexpected-row' : '' }>{ row }</tr>);\n        }\n\n        return rows;\n    }\n\n    renderRowChild(fact) {\n        let row = [];\n\n        row.push(<td className=\"nested-fact sticky-column fixed-column-1\">\n            <p className=\"child-row\">{ fact.name }</p>\n        </td>);\n        row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n        row = row.concat(this.findSystem(fact));\n\n        return row;\n    }\n\n    renderSystemHeaders() {\n        let row = [];\n        let typeIcon = '';\n        let referenceId = this.props.referenceId;\n        let updateReferenceId = this.updateReferenceId;\n\n        this.masterList.forEach(item => {\n            if (item.type === 'system') {\n                typeIcon = <ServerIcon/>;\n            } else if (item.type === 'baseline') {\n                typeIcon = <BlueprintIcon/>;\n            } else if (item.type === 'historical-system-profile') {\n                typeIcon = <ClockIcon />;\n            }\n\n            row.push(\n                <th\n                    header-id={ item.id }\n                    key={ item.id }\n                    className={\n                        item.id === referenceId\n                            ? 'drift-header reference-header'\n                            : `drift-header ${item.type}-header`\n                    }\n                >\n                    <div>\n                        <a onClick={ () => this.removeSystem(item) } className=\"remove-system-icon\">\n                            <TimesIcon/>\n                        </a>\n                    </div>\n                    <div className='comparison-header'>\n                        <div className=\"drift-header-icon\">\n                            { typeIcon }\n                        </div>\n                        <div className=\"system-name\">{ item.display_name }</div>\n                        <div className=\"system-updated-and-reference\">\n                            <ReferenceSelector\n                                updateReferenceId={ updateReferenceId }\n                                id={ item.id }\n                                isReference= { item.id === referenceId }\n                            />\n                            { item.system_profile_exists === false ?\n                                <Tooltip\n                                    position='top'\n                                    content={\n                                        <div>System profile does not exist. Please run insights-client on system to upload archive.</div>\n                                    }\n                                >\n                                    <ExclamationTriangleIcon color=\"#f0ab00\"/>\n                                </Tooltip> : ''\n                            }\n                            { item.last_updated\n                                ? this.formatDate(item.last_updated)\n                                : this.formatDate(item.updated)\n                            }\n                            { item.type === 'system' || item.type === 'historical-system-profile'\n                                ? <HistoricalProfilesDropdown\n                                    system={ item }\n                                    systemIds={ this.systemIds }\n                                    referenceId={ referenceId }\n                                    fetchCompare={ this.fetchCompare }\n                                    dropdownDirection={ DropdownDirection.down }\n                                    hasCompareButton={ true }\n                                />\n                                : null\n                            }\n                        </div>\n                    </div>\n                </th>\n            );\n        });\n\n        return row;\n    }\n\n    renderSortButton(sort) {\n        let sortIcon;\n\n        if (sort === ASC) {\n            sortIcon = <LongArrowAltUpIcon className=\"active-blue\" />;\n        }\n        else if (sort === DESC) {\n            sortIcon = <LongArrowAltDownIcon className=\"active-blue\" />;\n        }\n        else {\n            sortIcon = <ArrowsAltVIcon className=\"not-active\" />;\n        }\n\n        return sortIcon;\n    }\n\n    toggleSort(sortType, sort) {\n        if (sortType === 'fact') {\n            this.props.toggleFactSort(sort);\n        } else {\n            this.props.toggleStateSort(sort);\n        }\n    }\n\n    renderHeaderRow() {\n        const { stateSort } = this.props;\n\n        return (\n            <tr className=\"sticky-column-header\">\n                <th\n                    className=\"fact-header sticky-column fixed-column-1 pointer\"\n                    key='fact-header'\n                    onClick={ () => this.toggleSort('fact', this.props.factSort) }\n                >\n                    <div className=\"active-blue\">Fact { this.renderSortButton(this.props.factSort) }</div>\n                </th>\n                <th\n                    className=\"state-header sticky-column fixed-column-2 pointer\"\n                    key='state-header'\n                    onClick={ () => this.toggleSort('state', this.props.stateSort) }\n                >\n                    { stateSort !== '' ?\n                        <div className=\"active-blue\">State { this.renderSortButton(this.props.stateSort) }</div> :\n                        <div>State { this.renderSortButton(this.props.stateSort) }</div>\n                    }\n                </th>\n                { this.renderSystemHeaders() }\n            </tr>\n        );\n    }\n\n    renderExpandableRowButton(expandedRows, factName) {\n        let expandIcon;\n\n        if (expandedRows.includes(factName)) {\n            expandIcon = <AngleDownIcon className=\"carat-margin pointer active-blue\" onClick={ () => this.props.expandRow(factName) } />;\n        } else {\n            expandIcon = <AngleRightIcon className=\"carat-margin pointer\" onClick={ () => this.props.expandRow(factName) } />;\n        }\n\n        return expandIcon;\n    }\n\n    renderTable(compareData, loading) {\n        return (\n            <React.Fragment>\n                <div className=\"drift-table-wrapper\">\n                    <table className=\"pf-c-table pf-m-compact drift-table\">\n                        <thead>\n                            { this.renderHeaderRow() }\n                        </thead>\n                        <tbody>\n                            { loading ? this.renderLoadingRows() : this.renderRows(compareData) }\n                        </tbody>\n                    </table>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { emptyState, filteredCompareData, systems, baselines, historicalProfiles, loading } = this.props;\n        const { emptyStateMessage } = this.state;\n\n        this.masterList = this.formatEntities(systems, baselines, historicalProfiles);\n\n        return (\n            <React.Fragment>\n                <AddSystemModal\n                    selectedSystemIds={ systems.map(system => system.id) }\n                    confirmModal={ this.fetchCompare }\n                    referenceId={ this.props.referenceId }\n                />\n                { emptyState && !loading\n                    ? <EmptyState\n                        icon={ PlusCircleIcon }\n                        title={ 'Add systems or baselines to compare' }\n                        text={ emptyStateMessage }\n                        button={ <AddSystemButton isTable={ false }/> }\n                    />\n                    : this.renderTable(filteredCompareData, loading)\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        fullCompareData: state.compareState.fullCompareData,\n        filteredCompareData: state.compareState.filteredCompareData,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines,\n        historicalProfiles: state.compareState.historicalProfiles,\n        factSort: state.compareState.factSort,\n        stateSort: state.compareState.stateSort,\n        expandedRows: state.compareState.expandedRows,\n        emptyState: state.compareState.emptyState,\n        referenceId: state.compareState.referenceId\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchCompare: ((systemIds, baselineIds, historicalProfiles, referenceId) =>\n            dispatch(compareActions.fetchCompare(systemIds, baselineIds, historicalProfiles, referenceId))\n        ),\n        toggleFactSort: (sortType) => dispatch(compareActions.toggleFactSort(sortType)),\n        toggleStateSort: (sortType) => dispatch(compareActions.toggleStateSort(sortType)),\n        expandRow: (factName) => dispatch(compareActions.expandRow(factName)),\n        setSelectedBaselines: ((selectedBaselineIds, tableId) =>\n            dispatch(baselinesTableActions.setSelectedBaselines(selectedBaselineIds, tableId))\n        ),\n        selectHistoricProfiles: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfiles(historicProfileIds)),\n        setSelectedHistoricProfiles: (HPIds) => dispatch(historicProfilesActions.setSelectedHistoricProfiles(HPIds))\n    };\n}\n\nDriftTable.propTypes = {\n    addSystemModalOpened: PropTypes.bool,\n    location: PropTypes.object,\n    history: PropTypes.object,\n    fetchCompare: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    filteredCompareData: PropTypes.array,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    historicalProfiles: PropTypes.array,\n    factSort: PropTypes.string,\n    stateSort: PropTypes.string,\n    loading: PropTypes.bool,\n    toggleFactSort: PropTypes.func,\n    toggleStateSort: PropTypes.func,\n    expandRow: PropTypes.func,\n    expandedRows: PropTypes.array,\n    setSelectedBaselines: PropTypes.func,\n    setSelectedHistoricProfiles: PropTypes.func,\n    selectHistoricProfiles: PropTypes.func,\n    emptyState: PropTypes.bool,\n    updateReferenceId: PropTypes.func,\n    referenceId: PropTypes.string\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftTable));\n","import types from './types';\n\nfunction toggleFilterDropDown() {\n    return {\n        type: types.OPEN_FILTER_DROPDOWN\n    };\n}\n\nexport default {\n    toggleFilterDropDown\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox, Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { filterDropdownActions } from './redux';\n\nclass FilterDropDown extends Component {\n    constructor(props) {\n        super(props);\n        this.onToggle = this.onToggle.bind(this);\n        this.createDropdownItem = this.createDropdownItem.bind(this);\n    }\n\n    onToggle() {\n        this.props.toggleDropDown();\n    }\n\n    createDropdownItem(stateFilter) {\n        let dropdownItem = <Checkbox\n            className=\"state-filter-checkbox\"\n            id={ stateFilter.display }\n            label={ stateFilter.display }\n            isChecked={ stateFilter.selected }\n            onChange={ () =>\n                this.props.addStateFilter(stateFilter)\n            } />;\n\n        return dropdownItem;\n    }\n\n    createDropdownArray(stateFilters) {\n        let dropdownItems = [];\n\n        stateFilters.forEach(function(stateFilter) {\n            let dropdownItem = this.createDropdownItem(stateFilter);\n            dropdownItems.push(dropdownItem);\n        }.bind(this));\n\n        return dropdownItems;\n    }\n\n    createSelectedViewsString(stateFilters) {\n        let selectedViewsArray = [];\n        let selectedViews = '';\n\n        for (let i = 0; i < stateFilters.length; i++) {\n            if (stateFilters[i].selected) {\n                selectedViewsArray.push(stateFilters[i].display);\n            }\n        }\n\n        for (let i = 0; i < selectedViewsArray.length; i++) {\n            selectedViews += selectedViewsArray[i];\n\n            if ((i + 1) < selectedViewsArray.length) {\n                selectedViews += ', ';\n            }\n        }\n\n        return selectedViews;\n    }\n\n    render() {\n        const { stateFilters } = this.props;\n        let dropdownItems = [];\n        let selectedViews = '';\n\n        dropdownItems = this.createDropdownArray(stateFilters);\n        selectedViews = this.createSelectedViewsString(stateFilters);\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    className=\"state-filter-dropdown\"\n                    onSelect={ this.onToggle }\n                    toggle={ <DropdownToggle onToggle={ this.onToggle }>\n                        View: { selectedViews }\n                    </DropdownToggle> }\n                    isOpen={ this.props.filterDropdownOpened }\n                    dropdownItems={ dropdownItems }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nFilterDropDown.propTypes = {\n    toggleDropDown: PropTypes.func,\n    filterDropdownOpened: PropTypes.bool,\n    stateFilters: PropTypes.array,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        filterDropdownOpened: state.filterDropdownOpened,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleDropDown: () => dispatch(filterDropdownActions.toggleFilterDropDown()),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(FilterDropDown));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TextInput } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { compareActions } from '../../modules';\n\nexport class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: this.props.factFilter\n        };\n\n        this.setFactFilter = this.setFactFilter.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.factFilter !== '' && this.props.factFilter === '') {\n            this.setState({ filter: this.props.factFilter });\n        }\n    }\n\n    updateFactFilter = (filter) => {\n        this.setState({ filter });\n        this.setFactFilter(filter);\n    }\n\n    setFactFilter = _.debounce(function(filter) {\n        this.props.changeFactFilter(filter);\n    }, 250);\n\n    render() {\n        return (\n            <React.Fragment>\n                <TextInput\n                    value={ this.state.filter }\n                    id=\"filterByFact\"\n                    placeholder=\"Filter by fact\"\n                    onChange={ this.updateFactFilter }\n                    aria-label=\"filter by fact\"\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nSearchBar.propTypes = {\n    changeFactFilter: PropTypes.func,\n    factFilter: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeFactFilter: (factFilter) => dispatch(compareActions.filterByFact(factFilter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(SearchBar));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../modules';\nimport { errorAlertActions } from './redux';\nimport { setHistory } from '../../Utilities/SetHistory';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nclass ErrorAlert extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    confirmDriftModal = () => {\n        const { toggleModal, revertCompareData, history, previousStateSystems } = this.props;\n\n        toggleModal();\n        revertCompareData();\n        setHistory(history, previousStateSystems.map(system => system.id));\n    }\n\n    confirmBaselineModal = () => {\n        const { toggleModal, revertBaselineFetch, tableId } = this.props;\n\n        toggleModal();\n        revertBaselineFetch(tableId);\n    }\n\n    render() {\n        const { errorAlertOpened, error, baselineError } = this.props;\n\n        return (\n            <React.Fragment>\n                { errorAlertOpened && (\n                    <Alert\n                        variant=\"danger\"\n                        title=\"Error\"\n                        action={\n                            <AlertActionCloseButton\n                                onClose={ () =>\n                                    error.status ? this.confirmDriftModal() : this.confirmBaselineModal()\n                                }\n                            />\n                        }\n                    >\n                        Status Code: { error.status ? error.status : baselineError.status }<br></br>\n                        { error.detail ? error.detail : baselineError.detail }\n                    </Alert>\n                ) }\n            </React.Fragment>\n        );\n    }\n}\n\nErrorAlert.propTypes = {\n    confirmModal: PropTypes.func,\n    errorAlertOpened: PropTypes.bool,\n    error: PropTypes.object,\n    baselineError: PropTypes.object,\n    toggleModal: PropTypes.func,\n    history: PropTypes.object,\n    fullCompareData: PropTypes.array,\n    revertCompareData: PropTypes.func,\n    previousStateSystems: PropTypes.array,\n    revertBaselineFetch: PropTypes.func,\n    tableId: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        fullCompareData: state.compareState.fullCompareData,\n        previousStateSystems: state.compareState.previousStateSystems,\n        errorAlertOpened: state.errorAlertOpened,\n        error: state.compareState.error,\n        baselineError: state.baselinesTableState.checkboxTable.baselineError\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        revertCompareData: () => dispatch(compareActions.revertCompareData()),\n        revertBaselineFetch: (tableId) => dispatch(baselinesTableActions.revertBaselineFetch(tableId))\n    };\n}\n\nexport default withRouter (connect(mapStateToProps, mapDispatchToProps)(ErrorAlert));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Pagination, DropdownDirection } from '@patternfly/react-core';\n\nconst perPageOptions = [\n    { title: '10', value: 10 },\n    { title: '25', value: 25 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nexport class TablePagination extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onSetPage = this.onSetPage.bind(this);\n        this.onPerPageSelect = this.onPerPageSelect.bind(this);\n    }\n\n    onSetPage(event, page) {\n        const { updatePagination } = this.props;\n\n        const { perPage } = this.props;\n        const pagination = { page, perPage };\n        updatePagination(pagination);\n    }\n\n    onPerPageSelect(event, perPage) {\n        const { updatePagination } = this.props;\n\n        const page = 1;\n        const pagination = { page, perPage };\n        updatePagination(pagination);\n    }\n\n    render() {\n        const { totalFacts, page, perPage, isCompact } = this.props;\n\n        return (\n            <Pagination\n                itemCount={ totalFacts ? totalFacts : 0 }\n                perPageOptions={ perPageOptions }\n                page={ totalFacts === 0 ? 0 : page }\n                perPage={ perPage }\n                dropDirection={ DropdownDirection.down }\n                onSetPage={ this.onSetPage }\n                onPerPageSelect={ this.onPerPageSelect }\n                isCompact={ isCompact }\n            />\n        );\n    }\n}\n\nTablePagination.propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    updatePagination: PropTypes.func,\n    totalFacts: PropTypes.number,\n    isCompact: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n    return {\n        page: state.compareState.page,\n        perPage: state.compareState.perPage,\n        totalFacts: state.compareState.totalFacts\n    };\n}\n\nexport default connect(mapStateToProps, null)(TablePagination);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { ExportIcon } from '@patternfly/react-icons';\nimport { compareActions } from '../../modules';\n\nclass ExportCSVButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { exportToCSV } = this.props;\n\n        return (\n            <ExportIcon className='pointer not-active export-button-margin' onClick={ exportToCSV } />\n        );\n    }\n}\n\nExportCSVButton.propTypes = {\n    exportToCSV: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        exportToCSV: () => dispatch(compareActions.exportToCSV())\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(ExportCSVButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Chip, ChipGroup, ChipGroupToolbarItem } from '@patternfly/react-core';\n\nimport { compareActions } from '../../modules';\n\nexport class DriftFilterChips extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chipGroup: [\n                { category: 'State', chips: this.setStateChips(this.props.stateFilters) },\n                { category: 'Fact name', chips:\n                    this.props.factFilter !== ''\n                        ? [ this.props.factFilter ]\n                        : []\n                }\n            ]\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { stateFilters, factFilter } = this.props;\n        const { chipGroup } = this.state;\n        let newStateChips = chipGroup[0];\n        let newFactChips = chipGroup[1];\n        let newChipGroup;\n\n        if (prevProps !== this.props) {\n            if (stateFilters !== prevProps.stateFilters) {\n                let filteredChips = [];\n\n                stateFilters.forEach(function(filter) {\n                    if (filter.selected) {\n                        filteredChips.push(filter.display);\n                    }\n                });\n\n                newStateChips = { category: 'State', chips: filteredChips };\n            }\n\n            if (factFilter !== prevProps.factFilter) {\n                newFactChips = { category: 'Fact name', chips:\n                    factFilter !== ''\n                        ? [ factFilter ]\n                        : []\n                };\n            }\n\n            newChipGroup = [ newStateChips, newFactChips ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n    }\n\n    setStateChips = (stateFilters) => {\n        let stateChips = [];\n\n        stateFilters.forEach(function(filter) {\n            if (filter.selected) {\n                stateChips.push(filter.display);\n            }\n        });\n\n        return stateChips;\n    }\n\n    removeChip = (chip) => {\n        const { stateFilters, addStateFilter, filterByFact } = this.props;\n\n        if (chip === 'Same' || chip === 'Different' || chip === 'Incomplete data') {\n            stateFilters.forEach(function(stateFilter) {\n                if (stateFilter.display === chip) {\n                    addStateFilter(stateFilter);\n                }\n            });\n        } else {\n            filterByFact('');\n        }\n    }\n\n    checkChips = () => {\n        const { chipGroup } = this.state;\n        const { setIsEmpty } = this.props;\n        let isEmpty = true;\n\n        chipGroup.forEach(function(group) {\n            if (group.chips.length > 0) {\n                isEmpty = false;\n            }\n        });\n\n        setIsEmpty(isEmpty);\n    }\n\n    render() {\n        const { chipGroup } = this.state;\n        let chipKeyCount = 0;\n\n        this.checkChips();\n\n        return (\n            <ChipGroup withToolbar>\n                { chipGroup.map(currentGroup => (\n                    <ChipGroupToolbarItem key={ currentGroup.category } categoryName={ currentGroup.category }>\n                        { currentGroup.chips.map(chip => (\n                            <Chip key={ currentGroup.category + chipKeyCount++ } onClick={ () => this.removeChip(chip) }>\n                                { chip }\n                            </Chip>\n                        )) }\n                    </ChipGroupToolbarItem>\n                )) }\n            </ChipGroup>\n        );\n    }\n}\n\nDriftFilterChips.propTypes = {\n    factFilter: PropTypes.string,\n    stateFilters: PropTypes.array,\n    filterByFact: PropTypes.func,\n    addStateFilter: PropTypes.func,\n    setIsEmpty: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        filterByFact: (filter) => dispatch(compareActions.filterByFact(filter)),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DriftFilterChips);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody, DropdownItem, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport { errorAlertActions } from '../ErrorAlert/redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\nimport { compareActions } from '../modules';\nimport { historicProfilesActions } from '../HistoricalProfilesDropdown/redux';\nimport { setHistory } from '../../Utilities/SetHistory';\n\nimport DriftTable from './DriftTable/DriftTable';\nimport FilterDropDown from './FilterDropDown/FilterDropDown';\nimport SearchBar from './SearchBar/SearchBar';\nimport ActionKebab from './ActionKebab/ActionKebab';\nimport ErrorAlert from '../ErrorAlert/ErrorAlert';\nimport TablePagination from './Pagination/Pagination';\nimport ExportCSVButton from './ExportCSVButton/ExportCSVButton';\nimport DriftFilterChips from './DriftFilterChips/DriftFilterChips';\nimport AddSystemButton from './AddSystemButton/AddSystemButton';\n\nexport class DriftPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            actionKebabItems: [\n                <DropdownItem key=\"remove-systems\" component=\"button\" onClick={ this.clearComparison }>Clear all comparisons</DropdownItem>\n            ],\n            isEmpty: true\n        };\n\n        this.props.clearSelectedBaselines('CHECKBOX');\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    setIsEmpty = (isEmpty) => {\n        this.setState({ isEmpty });\n    }\n\n    clearFilters = () => {\n        const { clearComparisonFilters } = this.props;\n\n        clearComparisonFilters();\n    }\n\n    clearComparison = () => {\n        const { history, clearComparison, clearSelectedBaselines, selectHistoricProfiles, selectedHSPIds, updateReferenceId } = this.props;\n\n        clearComparison();\n        clearSelectedBaselines('CHECKBOX');\n        selectHistoricProfiles(selectedHSPIds);\n        updateReferenceId();\n        setHistory(history, []);\n    }\n\n    render() {\n        const { loading, emptyState, updatePagination, updateReferenceId } = this.props;\n        const { actionKebabItems, isEmpty } = this.state;\n        /*eslint-disable*/\n        console.log(isEmpty);\n        /*eslint-enable*/\n\n        if (this.props.error.detail) {\n            this.props.toggleErrorAlert();\n        }\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='Comparison'/>\n                </PageHeader>\n                <Main>\n                    <ErrorAlert />\n                    <Card className='pf-t-light pf-m-opaque-100'>\n                        <CardBody>\n                            <div>\n                                { !emptyState ?\n                                    <React.Fragment>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <SearchBar />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <FilterDropDown />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <AddSystemButton loading={ loading } />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ExportCSVButton />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ActionKebab dropdownItems={ actionKebabItems } />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                            <ToolbarGroup className=\"pf-c-pagination\">\n                                                <ToolbarItem>\n                                                    <TablePagination\n                                                        isCompact={ true }\n                                                        updatePagination={ updatePagination }\n                                                    />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <DriftFilterChips setIsEmpty={ this.setIsEmpty } />\n                                                </ToolbarItem>\n                                                { !isEmpty\n                                                    ? <ToolbarItem>\n                                                        <a onClick={ () => this.clearFilters() } >\n                                                            Clear filters\n                                                        </a>\n                                                    </ToolbarItem>\n                                                    : null\n                                                }\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                    </React.Fragment>\n                                    : null\n                                }\n                                <DriftTable\n                                    updateReferenceId={ updateReferenceId }\n                                />\n                                { !emptyState && !loading ?\n                                    <Toolbar className=\"drift-toolbar\">\n                                        <ToolbarGroup className=\"pf-c-pagination\">\n                                            <ToolbarItem>\n                                                <TablePagination\n                                                    isCompact={ false }\n                                                    updatePagination={ updatePagination }\n                                                />\n                                            </ToolbarItem>\n                                        </ToolbarGroup>\n                                    </Toolbar>\n                                    : null\n                                }\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nDriftPage.propTypes = {\n    error: PropTypes.object,\n    loading: PropTypes.bool,\n    toggleErrorAlert: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func,\n    emptyState: PropTypes.bool,\n    updatePagination: PropTypes.func,\n    updateReferenceId: PropTypes.func,\n    clearComparison: PropTypes.func,\n    clearComparisonFilters: PropTypes.func,\n    history: PropTypes.object,\n    selectHistoricProfiles: PropTypes.func,\n    selectedHSPIds: PropTypes.array\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleErrorAlert: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        clearSelectedBaselines: (tableId) => dispatch(baselinesTableActions.clearSelectedBaselines(tableId)),\n        updatePagination: (pagination) => dispatch(compareActions.updatePagination(pagination)),\n        updateReferenceId: (id) => dispatch(compareActions.updateReferenceId(id)),\n        clearComparison: () => dispatch(compareActions.clearComparison()),\n        clearComparisonFilters: () => dispatch(compareActions.clearComparisonFilters()),\n        selectHistoricProfiles: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfiles(historicProfileIds))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return {\n        error: state.compareState.error,\n        loading: state.compareState.loading,\n        emptyState: state.compareState.emptyState,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftPage));\n"],"sourceRoot":""}