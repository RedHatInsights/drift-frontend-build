{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./node_modules/react-cookie/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///./src/SmartComponents/ErrorAlert/redux/actions.js","webpack:///./node_modules/react-cookie/es6/withCookies.js","webpack:///./src/SmartComponents/AddSystemModal/AddSystemModal.js","webpack:///./src/SmartComponents/DriftPage/AddSystemButton/AddSystemButton.js","webpack:///./src/SmartComponents/StateIcon/StateIcon.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/DriftTable.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/FilterDropDown.js","webpack:///./src/SmartComponents/DriftPage/SearchBar/SearchBar.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/ActionKebab.js","webpack:///./src/SmartComponents/ErrorAlert/ErrorAlert.js","webpack:///./src/SmartComponents/DriftPage/Pagination/Pagination.js","webpack:///./src/SmartComponents/DriftPage/ExportCSVButton/ExportCSVButton.js","webpack:///./src/SmartComponents/DriftPage/DriftFilterChips/DriftFilterChips.js","webpack:///./src/SmartComponents/DriftPage/DriftPage.js"],"names":["arrayWithHoles","iterableToArrayLimit","nonIterableRest","module","exports","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","targetStatics","sourceStatics","key","descriptor","e","extendStatics","toggleErrorAlert","types","OPEN_ERROR_ALERT","__extends","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__assign","assign","t","s","n","apply","__rest","indexOf","propertyIsEnumerable","hoistStatics","AddSystemModal","props","onSelect","event","isSelected","rowId","baselineTableData","selectBaseline","map","item","confirmModal","bind","cancelSelection","changeActiveTab","state","columns","title","transforms","sortable","window","insights","chrome","auth","getUser","entities","selectedBaselineIds","toggleModal","selectedHSPIds","selectedSystemIds","ids","systems","system","id","baselines","baseline","tabIndex","selectActiveTab","activeTab","addSystemModalOpened","historicalProfiles","loading","Fragment","Modal","isOpen","onClose","width","isFooterLeftAligned","actions","Button","variant","onClick","Tabs","activeKey","Tab","eventKey","SystemsTable","hasHistoricalDropdown","BaselinesTable","tableId","hasMultiSelect","tableData","Component","cookies","instanceOf","Cookies","isRequired","showModal","PropTypes","bool","number","func","object","array","withCookies","WrappedComponent","CookieWrapper","ForwardedComponent","connect","addSystemModalState","compareState","baselinesTableState","checkboxTable","historicProfilesState","dispatch","addSystemModalActions","toggleAddSystemModal","newActiveTab","baselinesTableActions","_super","_this","onChange","forceUpdate","listen","addChangeListener","unlisten","removeChangeListener","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","_a","forwardedRef","restProps","allCookies","getAll","ref","AddSystemButton","className","isTable","StateIcon","factState","color","height","icon","string","DriftTable","removeSystem","systemIds","filter","HSPIds","profile","system_id","baselineIds","setSelectedHistoricProfiles","fetchCompare","masterList","setSystemIds","setBaselineIds","setHSPIds","formatDate","fullHistoricalSystemList","historicalGroups","hsp","forEach","find","system_last_updated","last_updated","hsps","index","slice","entries","queryString","parse","location","search","system_ids","baseline_ids","selectHistoricProfiles","hsp_ids","dateString","moment","utc","format","setHistory","history","setSelectedBaselines","facts","rows","fact","renderRow","rowData","size","SkeletonSize","md","row","sys","comparisons","expandedRows","includes","renderExpandableRowButton","comparison","renderRowChild","findSystem","typeIcon","header-id","display_name","system_profile_exists","Tooltip","position","content","updated","isBeta","HistoricalProfilesDropdown","sortType","sort","ASC","toggleSort","DESC","toggleFactSort","toggleStateSort","stateSort","renderSortButton","factSort","renderSystemHeaders","factName","expandRow","EmptyState","EmptyStateIcon","PlusCircleIcon","Title","EmptyStateBody","compareData","renderHeaderRow","renderLoadingRows","renderRows","emptyState","filteredCompareData","formatEntities","renderEmptyState","renderTable","fullCompareData","withRouter","compareActions","historicProfileIds","historicProfilesActions","HPIds","toggleFilterDropDown","OPEN_FILTER_DROPDOWN","FilterDropDown","onToggle","createDropdownItem","toggleDropDown","stateFilter","Checkbox","display","label","isChecked","selected","addStateFilter","stateFilters","dropdownItems","dropdownItem","selectedViewsArray","selectedViews","createDropdownArray","createSelectedViewsString","Dropdown","toggle","DropdownToggle","filterDropdownOpened","filterDropdownActions","SearchBar","updateFactFilter","setState","setFactFilter","changeFactFilter","factFilter","TextInput","placeholder","aria-label","filterByFact","toggleKebab","TOGGLE_KEBAB","ActionKebab","removeSystemsSelect","removeSystems","clearSelectedBaselines","DropdownItem","style","float","KebabToggle","kebabOpened","isPlain","clearState","actionKebabActions","ErrorAlert","revertCompareData","previousStateSystems","errorAlertOpened","Alert","action","AlertActionCloseButton","error","status","detail","errorAlertActions","perPageOptions","TablePagination","onSetPage","onPerPageSelect","page","pagination","perPage","updatePagination","totalFacts","Pagination","itemCount","dropDirection","DropdownDirection","down","isCompact","ExportCSVButton","exportToCSV","DriftFilterChips","setStateChips","stateChips","removeChip","chip","chipGroup","category","chips","newFactFilter","newChipGroup","filteredChips","chipKeyCount","ChipGroup","withToolbar","currentGroup","ChipGroupToolbarItem","categoryName","Chip","DriftPage","Card","CardBody","Toolbar","ToolbarGroup","ToolbarItem"],"mappings":"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","file":"js/4-583164ac9423ccc4ba6e.js","sourcesContent":["var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import types from './types';\n\nfunction toggleErrorAlert() {\n    return {\n        type: types.OPEN_ERROR_ALERT\n    };\n}\n\nexport default {\n    toggleErrorAlert\n};\n","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport * as React from 'react';\r\nimport { Consumer } from './CookiesContext';\r\n// Only way to make function modules work with both TypeScript and Rollup\r\nvar hoistStatics = require('hoist-non-react-statics');\r\nexport default function withCookies(WrappedComponent) {\r\n    // @ts-ignore\r\n    var name = WrappedComponent.displayName || WrappedComponent.name;\r\n    var CookieWrapper = /** @class */ (function (_super) {\r\n        __extends(CookieWrapper, _super);\r\n        function CookieWrapper() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.onChange = function () {\r\n                // Make sure to update children with new values\r\n                _this.forceUpdate();\r\n            };\r\n            return _this;\r\n        }\r\n        CookieWrapper.prototype.listen = function () {\r\n            this.props.cookies.addChangeListener(this.onChange);\r\n        };\r\n        CookieWrapper.prototype.unlisten = function (cookies) {\r\n            (cookies || this.props.cookies).removeChangeListener(this.onChange);\r\n        };\r\n        CookieWrapper.prototype.componentDidMount = function () {\r\n            this.listen();\r\n        };\r\n        CookieWrapper.prototype.componentDidUpdate = function (prevProps) {\r\n            if (prevProps.cookies !== this.props.cookies) {\r\n                this.unlisten(prevProps.cookies);\r\n                this.listen();\r\n            }\r\n        };\r\n        CookieWrapper.prototype.componentWillUnmount = function () {\r\n            this.unlisten();\r\n        };\r\n        CookieWrapper.prototype.render = function () {\r\n            var _a = this.props, forwardedRef = _a.forwardedRef, cookies = _a.cookies, restProps = __rest(_a, [\"forwardedRef\", \"cookies\"]);\r\n            var allCookies = cookies.getAll();\r\n            return (React.createElement(WrappedComponent, __assign({}, restProps, { ref: forwardedRef, cookies: cookies, allCookies: allCookies })));\r\n        };\r\n        CookieWrapper.displayName = \"withCookies(\" + name + \")\";\r\n        CookieWrapper.WrappedComponent = WrappedComponent;\r\n        return CookieWrapper;\r\n    }(React.Component));\r\n    var ForwardedComponent = React.forwardRef(function (props, ref) {\r\n        return (React.createElement(Consumer, null, function (cookies) { return (React.createElement(CookieWrapper, __assign({ cookies: cookies }, props, { forwardedRef: ref }))); }));\r\n    });\r\n    ForwardedComponent.displayName = CookieWrapper.displayName;\r\n    ForwardedComponent.WrappedComponent = CookieWrapper.WrappedComponent;\r\n    return hoistStatics(ForwardedComponent, WrappedComponent);\r\n}\r\n","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Tab, Tabs } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { sortable } from '@patternfly/react-table';\n\nimport SystemsTable from '../SystemsTable/SystemsTable';\nimport BaselinesTable from '../BaselinesTable/BaselinesTable';\nimport { addSystemModalActions } from './redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nclass AddSystemModal extends Component {\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n        this.cancelSelection = this.cancelSelection.bind(this);\n        this.changeActiveTab = this.changeActiveTab.bind(this);\n\n        this.state = {\n            columns: [\n                { title: 'Name', transforms: [ sortable ]},\n                { title: 'Last updated', transforms: [ sortable ]}\n            ]\n        };\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    onSelect = (event, isSelected, rowId) => {\n        const { baselineTableData, selectBaseline } = this.props;\n        let ids;\n\n        if (rowId === -1) {\n            ids = baselineTableData.map(function(item) {\n                return item[0];\n            });\n        } else {\n            ids = [ baselineTableData[rowId][0] ];\n        }\n\n        selectBaseline(ids, isSelected, 'CHECKBOX');\n    }\n\n    confirmModal() {\n        const { confirmModal, entities, selectedBaselineIds, toggleModal, selectedHSPIds } = this.props;\n\n        confirmModal(entities.selectedSystemIds, selectedBaselineIds, selectedHSPIds);\n        toggleModal();\n    }\n\n    cancelSelection() {\n        this.props.toggleModal();\n    }\n\n    selectedSystemIds() {\n        let ids = this.props.systems.map(function (system) {\n            return system.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    selectedBaselineIds() {\n        let ids = this.props.baselines.map(function (baseline) {\n            return baseline.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    changeActiveTab(event, tabIndex) {\n        const { selectActiveTab } = this.props;\n\n        selectActiveTab(tabIndex);\n    }\n\n    render() {\n        const { activeTab, addSystemModalOpened, baselineTableData, historicalProfiles, loading } = this.props;\n        const { columns } = this.state;\n\n        return (\n            <React.Fragment>\n                <Modal\n                    title=\"Choose systems\"\n                    isOpen={ addSystemModalOpened }\n                    onClose={ this.cancelSelection }\n                    width=\"auto\"\n                    isFooterLeftAligned\n                    actions={ [\n                        <Button\n                            key=\"confirm\"\n                            variant=\"primary\"\n                            onClick={ this.confirmModal }>\n                            Submit\n                        </Button>\n                    ] }\n                >\n                    <Tabs\n                        activeKey={ activeTab }\n                        onSelect={ this.changeActiveTab }\n                    >\n                        <Tab\n                            eventKey={ 0 }\n                            title=\"Systems\"\n                        >\n                            <SystemsTable\n                                selectedSystemIds={ this.selectedSystemIds() }\n                                hasHistoricalDropdown={ true }\n                                historicalProfiles={ historicalProfiles }\n                            />\n                        </Tab>\n                        <Tab\n                            eventKey={ 1 }\n                            title=\"Baselines\"\n                        >\n                            <BaselinesTable\n                                tableId='CHECKBOX'\n                                hasMultiSelect={ true }\n                                onSelect={ this.onSelect }\n                                tableData={ baselineTableData }\n                                loading={ loading }\n                                columns={ columns }/>\n                        </Tab>\n                    </Tabs>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nAddSystemModal.propTypes = {\n    showModal: PropTypes.bool,\n    addSystemModalOpened: PropTypes.bool,\n    activeTab: PropTypes.number,\n    confirmModal: PropTypes.func,\n    cancelSelection: PropTypes.func,\n    toggleModal: PropTypes.func,\n    selectActiveTab: PropTypes.func,\n    entities: PropTypes.object,\n    systems: PropTypes.array,\n    selectedBaselineIds: PropTypes.array,\n    baselines: PropTypes.array,\n    selectedHSPIds: PropTypes.array,\n    loading: PropTypes.bool,\n    baselineTableData: PropTypes.array,\n    selectBaseline: PropTypes.func,\n    historicalProfiles: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        systems: state.compareState.systems,\n        activeTab: state.addSystemModalState.activeTab,\n        entities: state.entities,\n        selectedBaselineIds: state.baselinesTableState.checkboxTable.selectedBaselineIds,\n        baselines: state.compareState.baselines,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds,\n        loading: state.baselinesTableState.checkboxTable.loading,\n        baselineTableData: state.baselinesTableState.checkboxTable.baselineTableData,\n        historicalProfiles: state.compareState.historicalProfiles\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(addSystemModalActions.toggleAddSystemModal()),\n        selectActiveTab: (newActiveTab) => dispatch(addSystemModalActions.selectActiveTab(newActiveTab)),\n        selectBaseline: (id, isSelected, tableId) => dispatch(baselinesTableActions.selectBaseline(id, isSelected, tableId))\n    };\n}\n\nexport default withCookies(connect(mapStateToProps, mapDispatchToProps)(AddSystemModal));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\n\nimport { addSystemModalActions } from '../../AddSystemModal/redux';\n\nclass AddSystemButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Button\n                className=\"add-system-button\"\n                variant='primary'\n                onClick={ this.props.toggleAddSystemModal }>\n                { this.props.isTable ? 'Add' : 'Add systems or baselines' }\n            </Button>\n        );\n    }\n}\n\nAddSystemButton.propTypes = {\n    toggleAddSystemModal: PropTypes.func,\n    isTable: PropTypes.bool\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleAddSystemModal: (() => dispatch(addSystemModalActions.toggleAddSystemModal()))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddSystemButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckCircleIcon, QuestionCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\n\nclass StateIcon extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    icon() {\n        let iconClass = '';\n\n        if (this.props.factState === 'SAME') {\n            iconClass = <CheckCircleIcon color='#3E8635' height='20px' width='20px'/>;\n        } else if (this.props.factState === 'DIFFERENT') {\n            iconClass = <ExclamationCircleIcon color='#C9190B' height='20px' width='20px'/>;\n        } else {\n            iconClass = <QuestionCircleIcon color='#151515' height='20px' width='20px'/>;\n        }\n\n        return iconClass;\n    };\n\n    render() {\n        return (\n            this.icon()\n        );\n    }\n}\n\nStateIcon.propTypes = {\n    factState: PropTypes.string\n};\n\nexport default StateIcon;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, Title, Tooltip } from '@patternfly/react-core';\nimport queryString from 'query-string';\nimport { ClockIcon, TimesIcon, ExclamationTriangleIcon, PlusCircleIcon, ServerIcon, BlueprintIcon } from '@patternfly/react-icons';\nimport { AngleDownIcon, AngleRightIcon, LongArrowAltUpIcon, LongArrowAltDownIcon, ArrowsAltVIcon } from '@patternfly/react-icons';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport moment from 'moment';\n\nimport AddSystemModal from '../../AddSystemModal/AddSystemModal';\nimport AddSystemButton from '../AddSystemButton/AddSystemButton';\nimport StateIcon from '../../StateIcon/StateIcon';\nimport { ASC, DESC } from '../../../constants';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport HistoricalProfilesDropdown from '../../HistoricalProfilesDropdown/HistoricalProfilesDropdown';\nimport { compareActions } from '../../modules';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { historicProfilesActions } from '../../HistoricalProfilesDropdown/redux';\n\nexport class DriftTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.masterList = [];\n\n        this.setSystemIds();\n        this.setBaselineIds();\n        this.setHSPIds();\n        this.fetchCompare = this.fetchCompare.bind(this);\n        this.removeSystem = this.removeSystem.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n        const { fetchCompare } = this.props;\n\n        fetchCompare(this.systemIds, this.baselineIds, this.HSPIds);\n    }\n\n    formatEntities(systems, baselines, historicalProfiles) {\n        /*eslint-disable camelcase*/\n        let fullHistoricalSystemList = [];\n        let historicalGroups = {};\n\n        if (systems.length === 0 && baselines.length === 0 && historicalProfiles.length === 0) {\n            return [];\n        }\n\n        systems = systems.map(function(system) {\n            system.type = 'system';\n            return system;\n        });\n        baselines = baselines.map(function(baseline) {\n            baseline.type = 'baseline';\n            return baseline;\n        });\n        historicalProfiles = historicalProfiles.map(function(hsp) {\n            hsp.type = 'historical-system-profile';\n            return hsp;\n        });\n\n        /*eslint-disable camelcase*/\n        historicalProfiles.forEach(function(hsp) {\n            let system = systems.find(item => item.id === hsp.system_id);\n            hsp.system_last_updated = system.last_updated;\n\n            if (historicalGroups.hasOwnProperty(hsp.system_id)) {\n                historicalGroups[hsp.system_id].push(hsp);\n            } else {\n                historicalGroups[hsp.system_id] = [ hsp ];\n            }\n        });\n\n        fullHistoricalSystemList = systems;\n\n        for (const [ system_id, hsps ] of Object.entries(historicalGroups)) {\n            let system = systems.find(item => system_id === item.id);\n            let index;\n\n            if (system !== undefined) {\n                index = fullHistoricalSystemList.indexOf(system);\n                fullHistoricalSystemList = [\n                    ...fullHistoricalSystemList.slice(0, index + 1),\n                    ...hsps,\n                    ...fullHistoricalSystemList.slice(index + 1, fullHistoricalSystemList.length)\n                ];\n            } else {\n                fullHistoricalSystemList = fullHistoricalSystemList.concat(hsps);\n            }\n        }\n        /*eslint-enable camelcase*/\n\n        return baselines.concat(fullHistoricalSystemList);\n    }\n\n    setSystemIds() {\n        this.systemIds = queryString.parse(this.props.location.search).system_ids;\n        this.systemIds = Array.isArray(this.systemIds) ? this.systemIds : [ this.systemIds ];\n        this.systemIds = this.systemIds.filter(item => item !== undefined);\n    }\n\n    setBaselineIds() {\n        this.baselineIds = queryString.parse(this.props.location.search).baseline_ids;\n        this.baselineIds = Array.isArray(this.baselineIds) ? this.baselineIds : [ this.baselineIds ];\n        this.baselineIds = this.baselineIds.filter(item => item !== undefined);\n    }\n\n    setHSPIds() {\n        const { selectHistoricProfiles } = this.props;\n\n        this.HSPIds = queryString.parse(this.props.location.search).hsp_ids;\n        this.HSPIds = Array.isArray(this.HSPIds) ? this.HSPIds : [ this.HSPIds ];\n        this.HSPIds = this.HSPIds.filter(item => item !== undefined);\n        selectHistoricProfiles(this.HSPIds);\n    }\n\n    formatDate(dateString) {\n        return moment.utc(dateString).format('DD MMM YYYY, HH:mm UTC');\n    }\n\n    removeSystem = (item) => {\n        if (item.type === 'system') {\n            this.systemIds = this.systemIds.filter(id => id !== item.id);\n\n            this.HSPIds = this.props.historicalProfiles.filter((profile) => {\n                return profile.system_id !== item.id;\n            }).map(profile => profile.id);\n\n        } else if (item.type === 'baseline') {\n            this.baselineIds = this.baselineIds.filter(id => id !== item.id);\n        } else if (item.type === 'historical-system-profile') {\n            this.HSPIds = this.HSPIds.filter(id => id !== item.id);\n        }\n\n        this.props.setSelectedHistoricProfiles(this.HSPIds);\n        this.fetchCompare(this.systemIds, this.baselineIds, this.HSPIds);\n    }\n\n    fetchCompare(systemIds, baselineIds, HSPIds) {\n        this.systemIds = systemIds;\n        this.baselineIds = baselineIds;\n        this.HSPIds = HSPIds;\n\n        setHistory(this.props.history, systemIds, baselineIds, HSPIds);\n        this.props.setSelectedBaselines(this.baselineIds, 'CHECKBOX');\n        this.props.fetchCompare(systemIds, baselineIds, HSPIds);\n    }\n\n    renderRows(facts) {\n        let rows = [];\n\n        if (facts !== undefined) {\n            facts.forEach(fact => {\n                rows.push(this.renderRow(fact));\n            });\n        }\n\n        return rows;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n        let rowData = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rowData.push(<td><Skeleton size={ SkeletonSize.md } /></td>);\n        }\n\n        for (let i = 0; i < 10; i += 1) {\n            rows.push(<tr>{ rowData }</tr>);\n        }\n\n        return rows;\n    }\n\n    findSystem(fact) {\n        let row = [];\n        let system = undefined;\n\n        this.masterList.forEach(item => {\n            system = fact.systems.find(function(sys) {\n                return sys.id === item.id;\n            });\n\n            row.push(\n                <td className={ fact.state === 'DIFFERENT' ? 'highlight comparison-cell' : 'comparison-cell' }>\n                    { system.value === null ? 'No Data' : system.value }\n                </td>\n            );\n        });\n\n        return row;\n    }\n\n    renderRow(fact) {\n        let row = [];\n        let rows = [];\n\n        if (fact.comparisons) {\n            row.push(\n                <td className={\n                    this.props.expandedRows.includes(fact.name) ?\n                        'nested-fact sticky-column fixed-column-1' :\n                        'sticky-column fixed-column-1' }>\n                    { this.renderExpandableRowButton(this.props.expandedRows, fact.name) } { fact.name }\n                </td>\n            );\n            row.push(\n                <td className=\"fact-state sticky-column fixed-column-2\">\n                    <StateIcon factState={ fact.state }/>\n                </td>\n            );\n\n            this.masterList.forEach(() => {\n                row.push(<td className=\"comparison-cell\"></td>);\n            });\n\n            rows.push(<tr>{ row }</tr>);\n\n            if (this.props.expandedRows.includes(fact.name)) {\n                fact.comparisons.forEach(comparison => {\n                    row = this.renderRowChild(comparison);\n                    rows.push(<tr className={ comparison.state === 'DIFFERENT' ? 'unexpected-row' : '' }>{ row }</tr>);\n                });\n            }\n        } else {\n            row.push(<td className=\"sticky-column fixed-column-1\">{ fact.name }</td>);\n            row.push(\n                <td className=\"fact-state sticky-column fixed-column-2\">\n                    <StateIcon factState={ fact.state }/>\n                </td>\n            );\n\n            row = row.concat(this.findSystem(fact));\n\n            rows.push(<tr className={ fact.state === 'DIFFERENT' ? 'unexpected-row' : '' }>{ row }</tr>);\n        }\n\n        return rows;\n    }\n\n    renderRowChild(fact) {\n        let row = [];\n\n        row.push(<td className=\"nested-fact sticky-column fixed-column-1\">\n            <p className=\"child-row\">{ fact.name }</p>\n        </td>);\n        row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n        row = row.concat(this.findSystem(fact));\n\n        return row;\n    }\n\n    renderSystemHeaders() {\n        let row = [];\n        let typeIcon = '';\n\n        this.masterList.forEach(item => {\n            if (item.type === 'system') {\n                typeIcon = <ServerIcon/>;\n            } else if (item.type === 'baseline') {\n                typeIcon = <BlueprintIcon/>;\n            } else if (item.type === 'historical-system-profile') {\n                typeIcon = <ClockIcon />;\n            }\n\n            row.push(\n                <th header-id={ item.id } key={ item.id } className={ `drift-header ${item.type}-header` }>\n                    <div>\n                        <a onClick={ () => this.removeSystem(item) } className=\"remove-system-icon\">\n                            <TimesIcon/>\n                        </a>\n                    </div>\n                    <div className='comparison-header'>\n                        <div className=\"drift-header-icon\">\n                            { typeIcon }\n                        </div>\n                        <div className=\"system-name\">{ item.display_name }</div>\n                        <div className=\"system-updated\">\n                            { item.system_profile_exists === false ?\n                                <Tooltip\n                                    position='top'\n                                    content={\n                                        <div>System profile does not exist. Please run insights-client on system to upload archive.</div>\n                                    }\n                                >\n                                    <ExclamationTriangleIcon color=\"#f0ab00\"/>\n                                </Tooltip> : ''\n                            }\n                            { item.last_updated\n                                ? this.formatDate(item.last_updated)\n                                : this.formatDate(item.updated)\n                            }\n                            { insights.chrome.isBeta()\n                                ? item.type === 'system' || item.type === 'historical-system-profile'\n                                    ? <HistoricalProfilesDropdown\n                                        system={ item }\n                                        systemIds={ this.systemIds }\n                                    />\n                                    : null\n                                : null\n                            }\n                        </div>\n                    </div>\n                </th>\n            );\n        });\n\n        return row;\n    }\n\n    renderSortButton(sortType, sort) {\n        let sortIcon;\n\n        if (sort === ASC) {\n            sortIcon = <LongArrowAltUpIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else if (sort === DESC) {\n            sortIcon = <LongArrowAltDownIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else {\n            sortIcon = <ArrowsAltVIcon className=\"pointer not-active\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n\n        return sortIcon;\n    }\n\n    toggleSort(sortType, sort) {\n        if (sortType === 'fact') {\n            this.props.toggleFactSort(sort);\n        } else {\n            this.props.toggleStateSort(sort);\n        }\n    }\n\n    renderHeaderRow() {\n        const { stateSort } = this.props;\n\n        return (\n            <tr className=\"sticky-column-header\">\n                <th className=\"fact-header sticky-column fixed-column-1\" key='fact-header'>\n                    <div className=\"active-blue\">Fact { this.renderSortButton('fact', this.props.factSort) }</div>\n                </th>\n                <th className=\"state-header sticky-column fixed-column-2\" key='state-header'>\n                    { stateSort !== '' ?\n                        <div className=\"active-blue\">State { this.renderSortButton('state', this.props.stateSort) }</div> :\n                        <div>State { this.renderSortButton('state', this.props.stateSort) }</div>\n                    }\n                </th>\n                { this.renderSystemHeaders() }\n            </tr>\n        );\n    }\n\n    renderExpandableRowButton(expandedRows, factName) {\n        let expandIcon;\n\n        if (expandedRows.includes(factName)) {\n            expandIcon = <AngleDownIcon className=\"pointer active-blue\" onClick={ () => this.props.expandRow(factName) } />;\n        } else {\n            expandIcon = <AngleRightIcon className=\"pointer\" onClick={ () => this.props.expandRow(factName) } />;\n        }\n\n        return expandIcon;\n    }\n\n    renderEmptyState() {\n        return (\n            <center>\n                <EmptyState>\n                    <EmptyStateIcon icon={ PlusCircleIcon } />\n                    <br></br>\n                    <Title size=\"lg\">Add systems or baselines to compare</Title>\n                    <EmptyStateBody>\n                        You currently have no systems or baselines displayed. Add at least two\n                        <br></br>\n                        systems or baselines to compare their facts.\n                    </EmptyStateBody>\n                    <AddSystemButton isTable={ false }/>\n                </EmptyState>\n            </center>\n        );\n    }\n\n    renderTable(compareData, loading) {\n        return (\n            <React.Fragment>\n                <div className=\"drift-table-wrapper\">\n                    <table className=\"pf-c-table pf-m-compact drift-table\">\n                        <thead>\n                            { this.renderHeaderRow() }\n                        </thead>\n                        <tbody>\n                            { loading ? this.renderLoadingRows() : this.renderRows(compareData) }\n                        </tbody>\n                    </table>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { emptyState, filteredCompareData, systems, baselines, historicalProfiles, loading } = this.props;\n\n        this.masterList = this.formatEntities(systems, baselines, historicalProfiles);\n\n        return (\n            <React.Fragment>\n                <AddSystemModal\n                    selectedSystemIds={ systems.map(system => system.id) }\n                    confirmModal={ this.fetchCompare }\n                />\n                { emptyState && !loading ? this.renderEmptyState() : this.renderTable(filteredCompareData, loading) }\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        fullCompareData: state.compareState.fullCompareData,\n        filteredCompareData: state.compareState.filteredCompareData,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines,\n        historicalProfiles: state.compareState.historicalProfiles,\n        factSort: state.compareState.factSort,\n        stateSort: state.compareState.stateSort,\n        expandedRows: state.compareState.expandedRows,\n        emptyState: state.compareState.emptyState\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchCompare: ((systemIds, baselineIds, historicalProfiles) =>\n            dispatch(compareActions.fetchCompare(systemIds, baselineIds, historicalProfiles))\n        ),\n        toggleFactSort: (sortType) => dispatch(compareActions.toggleFactSort(sortType)),\n        toggleStateSort: (sortType) => dispatch(compareActions.toggleStateSort(sortType)),\n        expandRow: (factName) => dispatch(compareActions.expandRow(factName)),\n        setSelectedBaselines: ((selectedBaselineIds, tableId) =>\n            dispatch(baselinesTableActions.setSelectedBaselines(selectedBaselineIds, tableId))\n        ),\n        selectHistoricProfiles: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfiles(historicProfileIds)),\n        setSelectedHistoricProfiles: (HPIds) => dispatch(historicProfilesActions.setSelectedHistoricProfiles(HPIds))\n    };\n}\n\nDriftTable.propTypes = {\n    addSystemModalOpened: PropTypes.bool,\n    location: PropTypes.object,\n    history: PropTypes.object,\n    fetchCompare: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    filteredCompareData: PropTypes.array,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    historicalProfiles: PropTypes.array,\n    factSort: PropTypes.string,\n    stateSort: PropTypes.string,\n    loading: PropTypes.bool,\n    toggleFactSort: PropTypes.func,\n    toggleStateSort: PropTypes.func,\n    expandRow: PropTypes.func,\n    expandedRows: PropTypes.array,\n    setSelectedBaselines: PropTypes.func,\n    setSelectedHistoricProfiles: PropTypes.func,\n    selectHistoricProfiles: PropTypes.func,\n    emptyState: PropTypes.bool\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftTable));\n","import types from './types';\n\nfunction toggleFilterDropDown() {\n    return {\n        type: types.OPEN_FILTER_DROPDOWN\n    };\n}\n\nexport default {\n    toggleFilterDropDown\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox, Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { filterDropdownActions } from './redux';\n\nclass FilterDropDown extends Component {\n    constructor(props) {\n        super(props);\n        this.onToggle = this.onToggle.bind(this);\n        this.createDropdownItem = this.createDropdownItem.bind(this);\n    }\n\n    onToggle() {\n        this.props.toggleDropDown();\n    }\n\n    createDropdownItem(stateFilter) {\n        let dropdownItem = <Checkbox\n            className=\"state-filter-checkbox\"\n            id={ stateFilter.display }\n            label={ stateFilter.display }\n            isChecked={ stateFilter.selected }\n            onChange={ () =>\n                this.props.addStateFilter(stateFilter)\n            } />;\n\n        return dropdownItem;\n    }\n\n    createDropdownArray(stateFilters) {\n        let dropdownItems = [];\n\n        stateFilters.forEach(function(stateFilter) {\n            let dropdownItem = this.createDropdownItem(stateFilter);\n            dropdownItems.push(dropdownItem);\n        }.bind(this));\n\n        return dropdownItems;\n    }\n\n    createSelectedViewsString(stateFilters) {\n        let selectedViewsArray = [];\n        let selectedViews = '';\n\n        for (let i = 0; i < stateFilters.length; i++) {\n            if (stateFilters[i].selected) {\n                selectedViewsArray.push(stateFilters[i].display);\n            }\n        }\n\n        for (let i = 0; i < selectedViewsArray.length; i++) {\n            selectedViews += selectedViewsArray[i];\n\n            if ((i + 1) < selectedViewsArray.length) {\n                selectedViews += ', ';\n            }\n        }\n\n        return selectedViews;\n    }\n\n    render() {\n        const { stateFilters } = this.props;\n        let dropdownItems = [];\n        let selectedViews = '';\n\n        dropdownItems = this.createDropdownArray(stateFilters);\n        selectedViews = this.createSelectedViewsString(stateFilters);\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    className=\"state-filter-dropdown\"\n                    onSelect={ this.onToggle }\n                    toggle={ <DropdownToggle onToggle={ this.onToggle }>\n                        View: { selectedViews }\n                    </DropdownToggle> }\n                    isOpen={ this.props.filterDropdownOpened }\n                    dropdownItems={ dropdownItems }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nFilterDropDown.propTypes = {\n    toggleDropDown: PropTypes.func,\n    filterDropdownOpened: PropTypes.bool,\n    stateFilters: PropTypes.array,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        filterDropdownOpened: state.filterDropdownOpened,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleDropDown: () => dispatch(filterDropdownActions.toggleFilterDropDown()),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(FilterDropDown));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TextInput } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { compareActions } from '../../modules';\n\nexport class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: this.props.factFilter\n        };\n\n        this.setFactFilter = this.setFactFilter.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.factFilter !== '' && this.props.factFilter === '') {\n            this.setState({ filter: this.props.factFilter });\n        }\n    }\n\n    updateFactFilter = (filter) => {\n        this.setState({ filter });\n        this.setFactFilter(filter);\n    }\n\n    setFactFilter = _.debounce(function(filter) {\n        this.props.changeFactFilter(filter);\n    }, 250);\n\n    render() {\n        return (\n            <React.Fragment>\n                <TextInput\n                    value={ this.state.filter }\n                    id=\"filterByFact\"\n                    placeholder=\"Filter by fact\"\n                    onChange={ this.updateFactFilter }\n                    aria-label=\"filter by fact\"\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nSearchBar.propTypes = {\n    changeFactFilter: PropTypes.func,\n    factFilter: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeFactFilter: (factFilter) => dispatch(compareActions.filterByFact(factFilter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(SearchBar));\n","import types from './types';\n\nfunction toggleKebab() {\n    return {\n        type: types.TOGGLE_KEBAB\n    };\n}\n\nexport default {\n    toggleKebab\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../../modules';\nimport { actionKebabActions } from './redux';\nimport { Dropdown, KebabToggle, DropdownItem } from '@patternfly/react-core';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { historicProfilesActions } from '../../HistoricalProfilesDropdown/redux';\n\nclass ActionKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.removeSystemsSelect = this.removeSystemsSelect.bind(this);\n    }\n\n    removeSystemsSelect() {\n        const { history, toggleKebab, removeSystems, clearSelectedBaselines, selectHistoricProfiles, selectedHSPIds } = this.props;\n\n        toggleKebab();\n        removeSystems();\n        clearSelectedBaselines('CHECKBOX');\n        selectHistoricProfiles(selectedHSPIds);\n        setHistory(history, []);\n    }\n\n    render() {\n        const dropdownItems = [\n            <DropdownItem key=\"remove-systems\" component=\"button\" onClick={ this.removeSystemsSelect }>Clear all comparisons</DropdownItem>\n        ];\n        return (\n            <Dropdown\n                id='action-kebab'\n                aria-label='action-kebab'\n                style={ { float: 'left' } }\n                toggle={ <KebabToggle onToggle={ this.props.toggleKebab } /> }\n                isOpen={ this.props.kebabOpened }\n                dropdownItems={ dropdownItems }\n                isPlain\n            />\n        );\n    }\n}\n\nActionKebab.propTypes = {\n    removeSystems: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func,\n    toggleKebab: PropTypes.func,\n    kebabOpened: PropTypes.bool,\n    history: PropTypes.object,\n    selectedHSPIds: PropTypes.array,\n    selectHistoricProfiles: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        kebabOpened: state.kebabOpened,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        removeSystems: () => dispatch(compareActions.clearState()),\n        clearSelectedBaselines: (tableId) => dispatch(baselinesTableActions.clearSelectedBaselines(tableId)),\n        toggleKebab: () => dispatch(actionKebabActions.toggleKebab()),\n        selectHistoricProfiles: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfiles(historicProfileIds))\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ActionKebab));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../modules';\nimport { errorAlertActions } from './redux';\nimport { setHistory } from '../../Utilities/SetHistory';\n\nclass ErrorAlert extends Component {\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n    }\n\n    confirmModal() {\n        const { toggleModal, revertCompareData, history, previousStateSystems } = this.props;\n\n        toggleModal();\n        revertCompareData();\n        setHistory(history, previousStateSystems.map(system => system.id));\n    }\n\n    render() {\n        const { errorAlertOpened } = this.props;\n        return (\n            <React.Fragment>\n                { errorAlertOpened && (\n                    <Alert\n                        variant=\"danger\"\n                        title=\"Error\"\n                        action={\n                            <AlertActionCloseButton\n                                onClose={ () => this.confirmModal() }\n                            /> }\n                    >\n                        Status Code: { this.props.error.status }<br></br>\n                        { this.props.error.detail }\n                    </Alert>\n                ) }\n            </React.Fragment>\n        );\n    }\n}\n\nErrorAlert.propTypes = {\n    confirmModal: PropTypes.func,\n    errorAlertOpened: PropTypes.bool,\n    error: PropTypes.object,\n    status: PropTypes.number,\n    detail: PropTypes.string,\n    toggleModal: PropTypes.func,\n    history: PropTypes.object,\n    clearState: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    revertCompareData: PropTypes.func,\n    previousStateSystems: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        fullCompareData: state.compareState.fullCompareData,\n        previousStateSystems: state.compareState.previousStateSystems,\n        errorAlertOpened: state.errorAlertOpened,\n        error: state.compareState.error\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        revertCompareData: () => dispatch(compareActions.revertCompareData())\n    };\n}\n\nexport default withRouter (connect(mapStateToProps, mapDispatchToProps)(ErrorAlert));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { Pagination, DropdownDirection } from '@patternfly/react-core';\n\nconst perPageOptions = [\n    { title: '10', value: 10 },\n    { title: '25', value: 25 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nclass TablePagination extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onSetPage = this.onSetPage.bind(this);\n        this.onPerPageSelect = this.onPerPageSelect.bind(this);\n    }\n\n    onSetPage(event, page) {\n        const { perPage } = this.props;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    onPerPageSelect(event, perPage) {\n        const page = 1;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    render() {\n        const { totalFacts, page, perPage } = this.props;\n\n        return (\n            <Pagination\n                itemCount={ totalFacts ? totalFacts : 0 }\n                perPageOptions={ perPageOptions }\n                page={ totalFacts === 0 ? 0 : page }\n                perPage={ perPage }\n                dropDirection={ DropdownDirection.down }\n                onSetPage={ this.onSetPage }\n                onPerPageSelect={ this.onPerPageSelect }\n                isCompact={ true }\n            />\n        );\n    }\n}\n\nTablePagination.propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    updatePagination: PropTypes.func,\n    totalFacts: PropTypes.number\n};\n\nfunction mapStateToProps(state) {\n    return {\n        page: state.compareState.page,\n        perPage: state.compareState.perPage,\n        totalFacts: state.compareState.totalFacts\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updatePagination: ((pagination) => dispatch(compareActions.updatePagination(pagination)))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePagination);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { ExportIcon } from '@patternfly/react-icons';\nimport { compareActions } from '../../modules';\n\nclass ExportCSVButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { exportToCSV } = this.props;\n\n        return (\n            <ExportIcon className='pointer not-active export-button-margin' onClick={ exportToCSV } />\n        );\n    }\n}\n\nExportCSVButton.propTypes = {\n    exportToCSV: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        exportToCSV: () => dispatch(compareActions.exportToCSV())\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(ExportCSVButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Chip, ChipGroup, ChipGroupToolbarItem } from '@patternfly/react-core';\n\nimport { compareActions } from '../../modules';\n\nexport class DriftFilterChips extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chipGroup: [\n                { category: 'State', chips: this.setStateChips(this.props.stateFilters) },\n                { category: 'Name', chips:\n                    this.props.factFilter !== ''\n                        ? [ this.props.factFilter ]\n                        : []\n                }\n            ]\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { stateFilters, factFilter } = this.props;\n        let newStateChips;\n        let newFactFilter;\n        let newChipGroup;\n\n        if (stateFilters !== prevProps.stateFilters) {\n            let filteredChips = [];\n\n            stateFilters.forEach(function(filter) {\n                if (filter.selected) {\n                    filteredChips.push(filter.display);\n                }\n            });\n\n            newStateChips = { category: 'State', chips: filteredChips };\n\n            newChipGroup = [ newStateChips, this.state.chipGroup[1] ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n\n        if (factFilter !== prevProps.factFilter) {\n            newFactFilter = { category: 'Name', chips:\n                factFilter !== ''\n                    ? [ factFilter ]\n                    : []\n            };\n\n            newChipGroup = [ this.state.chipGroup[0], newFactFilter ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n    }\n\n    setStateChips = (stateFilters) => {\n        let stateChips = [];\n\n        stateFilters.forEach(function(filter) {\n            if (filter.selected) {\n                stateChips.push(filter.display);\n            }\n        });\n\n        return stateChips;\n    }\n\n    removeChip = (chip) => {\n        const { stateFilters, addStateFilter, filterByFact } = this.props;\n\n        if (chip === 'Same' || chip === 'Different' || chip === 'Incomplete data') {\n            stateFilters.forEach(function(stateFilter) {\n                if (stateFilter.display === chip) {\n                    addStateFilter(stateFilter);\n                }\n            });\n        } else {\n            filterByFact('');\n        }\n    }\n\n    render() {\n        const { chipGroup } = this.state;\n        let chipKeyCount = 0;\n\n        return (\n            <ChipGroup withToolbar>\n                { chipGroup.map(currentGroup => (\n                    <ChipGroupToolbarItem key={ currentGroup.category } categoryName={ currentGroup.category }>\n                        { currentGroup.chips.map(chip => (\n                            <Chip key={ currentGroup.category + chipKeyCount++ } onClick={ () => this.removeChip(chip) }>\n                                { chip }\n                            </Chip>\n                        )) }\n                    </ChipGroupToolbarItem>\n                )) }\n            </ChipGroup>\n        );\n    }\n}\n\nDriftFilterChips.propTypes = {\n    factFilter: PropTypes.string,\n    stateFilters: PropTypes.array,\n    filterByFact: PropTypes.func,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        filterByFact: (filter) => dispatch(compareActions.filterByFact(filter)),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DriftFilterChips);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport { errorAlertActions } from '../ErrorAlert/redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nimport DriftTable from './DriftTable/DriftTable';\nimport FilterDropDown from './FilterDropDown/FilterDropDown';\nimport SearchBar from './SearchBar/SearchBar';\nimport ActionKebab from './ActionKebab/ActionKebab';\nimport ErrorAlert from '../ErrorAlert/ErrorAlert';\nimport TablePagination from './Pagination/Pagination';\nimport ExportCSVButton from './ExportCSVButton/ExportCSVButton';\nimport DriftFilterChips from './DriftFilterChips/DriftFilterChips';\nimport AddSystemButton from './AddSystemButton/AddSystemButton';\n\nexport class DriftPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.props.clearSelectedBaselines('CHECKBOX');\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    render() {\n        const { loading, emptyState } = this.props;\n\n        if (this.props.error.detail) {\n            this.props.toggleErrorAlert();\n        }\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='System Comparison'/>\n                </PageHeader>\n                <Main>\n                    <ErrorAlert />\n                    <Card className='pf-t-light pf-m-opaque-100'>\n                        <CardBody>\n                            <div>\n                                { !emptyState ?\n                                    <React.Fragment>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <SearchBar />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <FilterDropDown />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <AddSystemButton/>\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ExportCSVButton />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ActionKebab />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                            <ToolbarGroup className=\"pf-c-pagination\">\n                                                <ToolbarItem>\n                                                    <TablePagination />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <DriftFilterChips />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                    </React.Fragment>\n                                    : null\n                                }\n                                <DriftTable />\n                                { !emptyState && !loading ?\n                                    <Toolbar className=\"drift-toolbar\">\n                                        <ToolbarGroup className=\"pf-c-pagination\">\n                                            <ToolbarItem>\n                                                <TablePagination />\n                                            </ToolbarItem>\n                                        </ToolbarGroup>\n                                    </Toolbar>\n                                    : null\n                                }\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nDriftPage.propTypes = {\n    error: PropTypes.object,\n    loading: PropTypes.bool,\n    toggleErrorAlert: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func,\n    emptyState: PropTypes.bool\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleErrorAlert: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        clearSelectedBaselines: (tableId) => dispatch(baselinesTableActions.clearSelectedBaselines(tableId))\n    };\n}\n\nfunction mapStateToProps(state) {\n    return {\n        error: state.compareState.error,\n        loading: state.compareState.loading,\n        emptyState: state.compareState.emptyState\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftPage));\n"],"sourceRoot":""}