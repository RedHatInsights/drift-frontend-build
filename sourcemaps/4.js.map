{"version":3,"sources":["webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./src/SmartComponents/ErrorAlert/redux/actions.js","webpack:///./src/SmartComponents/AddSystemModal/AddSystemModal.js","webpack:///./src/SmartComponents/DriftPage/AddSystemButton/AddSystemButton.js","webpack:///./src/SmartComponents/StateIcon/StateIcon.js","webpack:///./src/Utilities/SetHistory.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/redux/actions.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/HistoricalProfilesCheckbox/HistoricalProfilesCheckbox.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/FetchHistoricalProfilesButton/FetchHistoricalProfilesButton.js","webpack:///./src/SmartComponents/HistoricalProfilesDropdown/HistoricalProfilesDropdown.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/DriftTable.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/FilterDropDown.js","webpack:///./src/SmartComponents/DriftPage/SearchBar/SearchBar.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/ActionKebab.js","webpack:///./src/SmartComponents/ErrorAlert/ErrorAlert.js","webpack:///./src/SmartComponents/DriftPage/Pagination/Pagination.js","webpack:///./src/SmartComponents/DriftPage/ExportCSVButton/ExportCSVButton.js","webpack:///./src/SmartComponents/DriftPage/DriftFilterChips/DriftFilterChips.js","webpack:///./src/SmartComponents/DriftPage/DriftPage.js"],"names":["strictUriEncode","objectAssign","encode","value","opts","strict","encodeURIComponent","exports","extract","str","split","parse","formatter","result","arrayFormat","key","accumulator","exec","replace","undefined","concat","parserForArrayFormat","ret","Object","create","trim","forEach","param","parts","shift","val","length","join","decodeURIComponent","keys","sort","reduce","Boolean","Array","isArray","keysSorter","input","a","b","Number","map","stringify","obj","index","encoderForArrayFormat","slice","val2","push","filter","x","module","c","charCodeAt","toString","toUpperCase","toggleErrorAlert","type","types","OPEN_ERROR_ALERT","AddSystemModal","props","confirmModal","bind","cancelSelection","changeActiveTab","window","insights","chrome","auth","getUser","this","entities","selectedBaselineIds","toggleModal","selectedSystemIds","ids","systems","system","id","baselines","baseline","event","tabIndex","selectActiveTab","activeTab","addSystemModalOpened","Fragment","Modal","title","isOpen","onClose","width","isFooterLeftAligned","actions","Button","variant","onClick","Tabs","activeKey","onSelect","Tab","eventKey","SystemsTable","BaselinesTable","hasSelect","Component","propTypes","cookies","instanceOf","Cookies","isRequired","showModal","PropTypes","bool","number","func","object","array","withCookies","connect","state","addSystemModalState","compareState","baselinesTableState","dispatch","addSystemModalActions","toggleAddSystemModal","newActiveTab","AddSystemButton","isTable","StateIcon","factState","color","icon","string","setHistory","history","systemIds","baselineIds","hspIds","search","queryString","system_ids","baseline_ids","hsp_ids","selectHistoricProfile","historicProfileId","SELECT_HISTORIC_PROFILE","payload","HistoricalProfilesCheckbox","handleChange","checked","profile","setState","selectedHSPIds","some","Checkbox","label","moment","utc","created","format","isChecked","onChange","aria-label","name","historicProfilesState","historicProfilesActions","FetchHistoricalProfilesButton","fetchHistoricalComparison","fetchCompare","className","style","float","location","withRouter","compareActions","HistoricalProfilesDropdown","createDropdownArray","historicalData","dropdownItems","profiles","DropdownItem","renderLoadingRows","onToggle","fetchData","systemId","api","fetchHistoricalData","rows","i","size","SkeletonSize","sm","Dropdown","toggle","DropdownToggle","iconComponent","isPlain","DriftTable","removeSystem","systemBaseline","clearState","setSelectedBaselines","stateFilters","addStateFilter","newSystemIds","systemProfile","display_name","HSPIds","item","stateFilter","selected","setSystemIds","setBaselineIds","setHSPIds","formatDate","dateString","facts","rowData","renderRowData","md","fact","systemsBaselinesList","row","find","baselineSystemCount","comparisons","expandedRows","includes","renderExpandableRowButton","renderRowChild","findSystem","data","system_profile_exists","Tooltip","position","content","last_updated","updated","isBeta","systemsList","baselinesList","fullHistoricalSystemList","modifiedSystems","modifiedBaselines","modifiedHSPs","hsp","addSystems","sortType","ASC","toggleSort","DESC","toggleFactSort","toggleStateSort","loading","stateSort","renderSortButton","factSort","renderSystems","lg","renderAddSystem","factName","expandRow","EmptyState","EmptyStateIcon","PlusCircleIcon","Title","EmptyStateBody","compareData","renderHeaderRow","renderRows","fullCompareData","filteredCompareData","renderTable","renderEmptyState","factFilter","expandRows","baselinesTableActions","toggleFilterDropDown","OPEN_FILTER_DROPDOWN","FilterDropDown","createDropdownItem","toggleDropDown","display","dropdownItem","selectedViewsArray","selectedViews","createSelectedViewsString","filterDropdownOpened","filterDropdownActions","SearchBar","updateFactFilter","setFactFilter","changeFactFilter","prevProps","TextInput","placeholder","filterByFact","toggleKebab","TOGGLE_KEBAB","ActionKebab","removeSystemsSelect","removeSystems","clearSelectedBaselines","component","KebabToggle","kebabOpened","actionKebabActions","ErrorAlert","revertCompareData","previousStateSystems","errorAlertOpened","Alert","action","AlertActionCloseButton","error","status","detail","errorAlertActions","perPageOptions","TablePagination","onSetPage","onPerPageSelect","page","pagination","perPage","updatePagination","totalFacts","Pagination","itemCount","dropDirection","DropdownDirection","down","ExportCSVButton","exportToCSV","DriftFilterChips","setStateChips","stateChips","removeChip","chip","chipGroup","category","chips","newFactFilter","newChipGroup","filteredChips","chipKeyCount","ChipGroup","withToolbar","currentGroup","ChipGroupToolbarItem","categoryName","Chip","DriftPage","Card","CardBody","Toolbar","ToolbarGroup","ToolbarItem"],"mappings":"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","file":"js/4-2ac6e7066342a07e3f9a.js","sourcesContent":["'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tformatter(decodeURIComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n};\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n","'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n","import types from './types';\n\nfunction toggleErrorAlert() {\n    return {\n        type: types.OPEN_ERROR_ALERT\n    };\n}\n\nexport default {\n    toggleErrorAlert\n};\n","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Tab, Tabs } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withCookies, Cookies } from 'react-cookie';\n\nimport SystemsTable from '../SystemsTable/SystemsTable';\nimport BaselinesTable from '../BaselinesTable/BaselinesTable';\nimport { addSystemModalActions } from './redux';\n\nclass AddSystemModal extends Component {\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n        this.cancelSelection = this.cancelSelection.bind(this);\n        this.changeActiveTab = this.changeActiveTab.bind(this);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    confirmModal() {\n        const { confirmModal, entities, selectedBaselineIds, toggleModal } = this.props;\n\n        confirmModal(entities.selectedSystemIds, selectedBaselineIds);\n        toggleModal();\n    }\n\n    cancelSelection() {\n        this.props.toggleModal();\n    }\n\n    selectedSystemIds() {\n        let ids = this.props.systems.map(function (system) {\n            return system.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    selectedBaselineIds() {\n        let ids = this.props.baselines.map(function (baseline) {\n            return baseline.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    changeActiveTab(event, tabIndex) {\n        const { selectActiveTab } = this.props;\n\n        selectActiveTab(tabIndex);\n    }\n\n    render() {\n        const { activeTab, addSystemModalOpened } = this.props;\n\n        return (\n            <React.Fragment>\n                <Modal\n                    title=\"Choose systems\"\n                    isOpen={ addSystemModalOpened }\n                    onClose={ this.cancelSelection }\n                    width=\"auto\"\n                    isFooterLeftAligned\n                    actions={ [\n                        <Button\n                            key=\"confirm\"\n                            variant=\"primary\"\n                            onClick={ this.confirmModal }>\n                            Submit\n                        </Button>\n                    ] }\n                >\n                    <Tabs\n                        activeKey={ activeTab }\n                        onSelect={ this.changeActiveTab }\n                    >\n                        <Tab\n                            eventKey={ 0 }\n                            title=\"Systems\"\n                        >\n                            <SystemsTable selectedSystemIds={ this.selectedSystemIds() }/>\n                        </Tab>\n                        <Tab\n                            eventKey={ 1 }\n                            title=\"Baselines\"\n                        >\n                            <BaselinesTable hasSelect={ true }/>\n                        </Tab>\n                    </Tabs>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nAddSystemModal.propTypes = {\n    showModal: PropTypes.bool,\n    addSystemModalOpened: PropTypes.bool,\n    activeTab: PropTypes.number,\n    confirmModal: PropTypes.func,\n    cancelSelection: PropTypes.func,\n    toggleModal: PropTypes.func,\n    selectActiveTab: PropTypes.func,\n    entities: PropTypes.object,\n    systems: PropTypes.array,\n    selectedBaselineIds: PropTypes.array,\n    baselines: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        systems: state.compareState.systems,\n        activeTab: state.addSystemModalState.activeTab,\n        entities: state.entities,\n        selectedBaselineIds: state.baselinesTableState.selectedBaselineIds,\n        baselines: state.compareState.baselines\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(addSystemModalActions.toggleAddSystemModal()),\n        selectActiveTab: (newActiveTab) => dispatch(addSystemModalActions.selectActiveTab(newActiveTab))\n    };\n}\n\nexport default withCookies(connect(mapStateToProps, mapDispatchToProps)(AddSystemModal));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\n\nimport { addSystemModalActions } from '../../AddSystemModal/redux';\n\nclass AddSystemButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Button\n                variant='primary'\n                onClick={ this.props.toggleAddSystemModal }>\n                { this.props.isTable ? 'Add' : 'Add systems or baselines' }\n            </Button>\n        );\n    }\n}\n\nAddSystemButton.propTypes = {\n    toggleAddSystemModal: PropTypes.func,\n    isTable: PropTypes.bool\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleAddSystemModal: (() => dispatch(addSystemModalActions.toggleAddSystemModal()))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddSystemButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckCircleIcon, QuestionCircleIcon, TimesCircleIcon } from '@patternfly/react-icons';\n\nclass StateIcon extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    icon() {\n        let iconClass = '';\n\n        if (this.props.factState === 'SAME') {\n            iconClass = <CheckCircleIcon color='green'/>;\n        } else if (this.props.factState === 'DIFFERENT') {\n            iconClass = <TimesCircleIcon color='red'/>;\n        } else {\n            iconClass = <QuestionCircleIcon />;\n        }\n\n        return iconClass;\n    };\n\n    render() {\n        return (\n            this.icon()\n        );\n    }\n}\n\nStateIcon.propTypes = {\n    factState: PropTypes.string\n};\n\nexport default StateIcon;\n","import queryString from 'query-string';\n\nexport function setHistory(history, systemIds = [], baselineIds = [], hspIds = []) {\n    /*eslint-disable camelcase*/\n    history.push({\n        search: '?' + queryString.stringify({ system_ids: systemIds, baseline_ids: baselineIds, hsp_ids: hspIds })\n    });\n    /*eslint-enable camelcase*/\n}\n","import types from './types';\n\nfunction selectHistoricProfile(historicProfileId) {\n    return {\n        type: types.SELECT_HISTORIC_PROFILE,\n        payload: historicProfileId\n    };\n}\n\nexport default {\n    selectHistoricProfile\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { historicProfilesActions } from '../redux';\n\nclass HistoricalProfilesCheckbox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: this.props.selectedHSPIds.some(id => id === this.props.profile.id)\n        };\n    }\n\n    handleChange = () => {\n        const { checked } = this.state;\n        const { selectHistoricProfile, profile } = this.props;\n\n        this.setState({\n            checked: !checked\n        });\n\n        selectHistoricProfile(profile.id);\n    }\n\n    render() {\n        const { profile } = this.props;\n        const { checked } = this.state;\n\n        return (\n            <React.Fragment>\n                <Checkbox\n                    label={ moment.utc(profile.created).format('DD MMM YYYY, HH:mm UTC') }\n                    isChecked={ checked }\n                    onChange={ this.handleChange }\n                    aria-label={ profile.id }\n                    id={ profile.id }\n                    name={ profile.id }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nHistoricalProfilesCheckbox.propTypes = {\n    profile: PropTypes.object,\n    selectHistoricProfile: PropTypes.func,\n    selectedHSPIds: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        selectHistoricProfile: (historicProfileId) => dispatch(historicProfilesActions.selectHistoricProfile(historicProfileId))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(HistoricalProfilesCheckbox));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\n\nimport { setHistory } from '../../../Utilities/SetHistory';\nimport { compareActions } from '../../modules';\n\nclass FetchHistoricalProfilesButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    fetchHistoricalComparison = () => {\n        const { baselines, systems, selectedHSPIds, fetchCompare, history } = this.props;\n        let baselineIds = baselines.map(baseline => baseline.id);\n        let systemIds = systems.map(system => system.id);\n\n        setHistory(history, systemIds, baselineIds, selectedHSPIds);\n        fetchCompare(systemIds, baselineIds, selectedHSPIds);\n    }\n\n    render() {\n        return (\n            <Button\n                className='fetch-historic-button'\n                style={ { float: 'left' } }\n                variant='primary'\n                onClick={ this.fetchHistoricalComparison }>\n                Compare\n            </Button>\n        );\n    }\n}\n\nFetchHistoricalProfilesButton.propTypes = {\n    fetchHistoricalComparison: PropTypes.func,\n    baselines: PropTypes.array,\n    systems: PropTypes.array,\n    selectedHSPIds: PropTypes.array,\n    fetchCompare: PropTypes.func,\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselines: state.compareState.baselines,\n        systems: state.compareState.systems,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchCompare: (systemIds, baselineIds, selectedHSPIds) => dispatch(compareActions.fetchCompare(systemIds, baselineIds, selectedHSPIds))\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FetchHistoricalProfilesButton));\n","import React, { Component } from 'react';\nimport { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { ClockIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nimport HistoricalProfilesCheckbox from './HistoricalProfilesCheckbox/HistoricalProfilesCheckbox';\nimport api from '../../api';\nimport FetchHistoricalProfilesButton from './FetchHistoricalProfilesButton/FetchHistoricalProfilesButton';\n\nclass HistoricalProfilesDropdown extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOpen: false,\n            historicalData: this.renderLoadingRows()\n        };\n\n        this.onToggle = () => {\n            const { isOpen } = this.state;\n\n            if (isOpen === false) {\n                this.fetchData(this.props.systemId);\n            }\n\n            this.setState({\n                isOpen: !isOpen\n            });\n        };\n    }\n\n    async fetchData(systemId) {\n        let historicalData = await api.fetchHistoricalData(systemId);\n\n        this.setState({\n            historicalData: this.createDropdownArray(historicalData)\n        });\n    }\n\n    createDropdownArray = (historicalData) => {\n        let dropdownItems = [];\n\n        historicalData.profiles.forEach(function(profile) {\n            dropdownItems.push(\n                <DropdownItem>\n                    <HistoricalProfilesCheckbox profile={ profile } />\n                </DropdownItem>\n            );\n        });\n\n        dropdownItems.push(<FetchHistoricalProfilesButton />);\n\n        return dropdownItems;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rows.push(\n                <Skeleton className='pit-dropdown-loading pit-button' size={ SkeletonSize.sm } />\n            );\n            rows.push(<br></br>);\n        }\n\n        return rows;\n    }\n\n    render() {\n        const { isOpen, historicalData } = this.state;\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    toggle={ <DropdownToggle iconComponent={ null } onToggle={ this.onToggle }>\n                        <ClockIcon />\n                    </DropdownToggle> }\n                    isOpen={ isOpen }\n                    isPlain\n                    dropdownItems={ historicalData }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nHistoricalProfilesDropdown.propTypes = {\n    fetchHistoricalData: PropTypes.func,\n    systemId: PropTypes.string\n};\n\nexport default HistoricalProfilesDropdown;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, Title, Tooltip } from '@patternfly/react-core';\nimport queryString from 'query-string';\nimport { AngleDownIcon, AngleRightIcon, LongArrowAltUpIcon, LongArrowAltDownIcon, ArrowsAltVIcon,\n    CloseIcon, ExclamationTriangleIcon, PlusCircleIcon, ServerIcon } from '@patternfly/react-icons';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport moment from 'moment';\n\nimport AddSystemModal from '../../AddSystemModal/AddSystemModal';\nimport AddSystemButton from '../AddSystemButton/AddSystemButton';\nimport StateIcon from '../../StateIcon/StateIcon';\nimport { ASC, DESC } from '../../../constants';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport HistoricalProfilesDropdown from '../../HistoricalProfilesDropdown/HistoricalProfilesDropdown';\nimport { compareActions } from '../../modules';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\n\nclass DriftTable extends Component {\n    constructor(props) {\n        super(props);\n        this.setSystemIds();\n        this.setBaselineIds();\n        this.setHSPIds();\n        this.fetchCompare = this.fetchCompare.bind(this);\n        this.removeSystem = this.removeSystem.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n        const { fetchCompare } = this.props;\n\n        fetchCompare(this.systemIds, this.baselineIds, this.HSPIds);\n    }\n\n    setSystemIds() {\n        this.systemIds = queryString.parse(this.props.location.search).system_ids;\n        this.systemIds = Array.isArray(this.systemIds) ? this.systemIds : [ this.systemIds ];\n        this.systemIds = this.systemIds.filter(item => item !== undefined);\n    }\n\n    setBaselineIds() {\n        this.baselineIds = queryString.parse(this.props.location.search).baseline_ids;\n        this.baselineIds = Array.isArray(this.baselineIds) ? this.baselineIds : [ this.baselineIds ];\n        this.baselineIds = this.baselineIds.filter(item => item !== undefined);\n    }\n\n    setHSPIds() {\n        this.HSPIds = queryString.parse(this.props.location.search).hsp_ids;\n        this.HSPIds = Array.isArray(this.HSPIds) ? this.HSPIds : [ this.HSPIds ];\n        this.HSPIds = this.HSPIds.filter(item => item !== undefined);\n    }\n\n    formatDate(dateString) {\n        return moment.utc(dateString).format('DD MMM YYYY, HH:mm UTC');\n    }\n\n    removeSystem = (systemBaseline) => {\n        const { history, clearState, setSelectedBaselines, stateFilters, addStateFilter, hspIds } = this.props;\n        const newSystemIds = [];\n\n        this.systemIds.forEach((system) => {\n            if (system === systemBaseline.id) {\n                hspIds.forEach((systemProfile) => {\n                    if (systemProfile.display_name === systemBaseline.display_name) {\n                        this.HSPIds = this.HSPIds.filter(item => item !== systemProfile.id);\n                    }\n                });\n            } else {\n                newSystemIds.push(system);\n            }\n        });\n        this.systemIds = newSystemIds;\n        this.baselineIds = this.baselineIds.filter(item => item !== systemBaseline.id);\n        this.HSPIds = this.HSPIds.filter(item => item !== systemBaseline.id);\n\n        if ((this.systemIds.length + this.baselineIds.length + this.HSPIds.length) === 1) {\n            stateFilters.forEach(function(stateFilter) {\n                if (stateFilter.selected === false) {\n                    addStateFilter(stateFilter);\n                }\n            });\n        }\n\n        if (this.systemIds.length > 0 || this.baselineIds.length > 0 || this.HSPIds.length > 0) {\n            this.fetchCompare(this.systemIds, this.baselineIds, this.HSPIds);\n        } else {\n            setHistory(history, []);\n            clearState();\n        }\n\n        setSelectedBaselines(this.baselineIds);\n    }\n\n    fetchCompare(systemIds, baselineIds, HSPIds) {\n        this.systemIds = systemIds;\n        this.baselineIds = baselineIds;\n        this.HSPIds = HSPIds;\n\n        if (systemIds.length > 0 || baselineIds.length > 0 || HSPIds.length > 0) {\n            setHistory(this.props.history, systemIds, baselineIds, HSPIds);\n            this.props.fetchCompare(systemIds, baselineIds, HSPIds);\n        }\n    }\n\n    renderRows(facts, systems, baselines, hspIds) {\n        let rows = [];\n        let rowData = [];\n\n        if (facts !== undefined) {\n            for (let i = 0; i < facts.length; i += 1) {\n                rowData = this.renderRowData(facts[i], systems, baselines, hspIds);\n                rows.push(rowData);\n            }\n        }\n\n        return rows;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n        let rowData = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rowData.push(<td><Skeleton size={ SkeletonSize.md } /></td>);\n        }\n\n        for (let i = 0; i < 10; i += 1) {\n            rows.push(<tr>{ rowData }</tr>);\n        }\n\n        return rows;\n    }\n\n    findSystem(fact, systemsBaselinesList) {\n        let row = [];\n\n        for (let i = 0; i < systemsBaselinesList.length; i += 1) {\n            let system = fact.systems.find(function(system) {\n                return system.id === systemsBaselinesList[i].id;\n            });\n            row.push(\n                <td className={ fact.state === 'DIFFERENT' ? 'highlight' : '' }>\n                    { system.value === null ? 'No Data' : system.value }\n                </td>\n            );\n        }\n\n        return row;\n    }\n\n    renderRowData(fact, systems, baselines, hspIds) {\n        let row = [];\n        let rows = [];\n        let baselineSystemCount = systems.length + baselines.length + hspIds.length;\n\n        if (fact.comparisons) {\n            row.push(\n                <td className={\n                    this.props.expandedRows.includes(fact.name) ?\n                        'nested-fact sticky-column fixed-column-1' :\n                        'sticky-column fixed-column-1' }>\n                    { this.renderExpandableRowButton(this.props.expandedRows, fact.name) } { fact.name }\n                </td>\n            );\n            row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n            for (let i = 0; i < baselineSystemCount + 1; i += 1) {\n                row.push(<td></td>);\n            }\n\n            rows.push(<tr>{ row }</tr>);\n\n            if (this.props.expandedRows.includes(fact.name)) {\n                for (let i = 0; i < fact.comparisons.length; i++) {\n                    row = this.renderRowChild(fact.comparisons[i], systems, baselines, hspIds);\n                    rows.push(<tr>{ row }</tr>);\n                }\n            }\n        } else {\n            row.push(<td className=\"sticky-column fixed-column-1\">{ fact.name }</td>);\n            row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n            row = row.concat(this.findSystem(fact, baselines, 'baselines'));\n            row = row.concat(this.findSystem(fact, systems, 'systems'));\n            row = row.concat(this.findSystem(fact, hspIds, 'system profiles'));\n\n            row.push(<td className={ fact.state === 'DIFFERENT' ? 'highlight' : '' }></td>);\n            rows.push(<tr>{ row }</tr>);\n        }\n\n        return rows;\n    }\n\n    renderRowChild(fact, systems, baselines, hspIds) {\n        let row = [];\n\n        row.push(<td className=\"nested-fact sticky-column fixed-column-1\">\n            <p className=\"child-row\">{ fact.name }</p>\n        </td>);\n        row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n        row = row.concat(this.findSystem(fact, baselines, 'baselines'));\n        row = row.concat(this.findSystem(fact, systems, 'systems'));\n        row = row.concat(this.findSystem(fact, hspIds, 'system profiles'));\n\n        row.push(<td className={ fact.state === 'DIFFERENT' ? 'highlight' : '' }></td>);\n\n        return row;\n    }\n\n    addSystems(data) {\n        let row = [];\n\n        for (let i = 0; i < data.length; i++) {\n            row.push(\n                <th key={ data[i].id }>\n                    <div className={ data[i].type + '-header' }>\n                        <a onClick={ () => this.removeSystem(data[i]) }>\n                            <CloseIcon className=\"remove-system-icon\"/>\n                        </a>\n                        <ServerIcon className=\"cluster-icon-large\"/>\n                        <div className=\"system-name\">{ data[i].display_name }</div>\n                        <div className=\"system-updated\">\n                            { data[i].system_profile_exists === false ?\n                                <Tooltip\n                                    position='top'\n                                    content={\n                                        <div>System profile does not exist. Please run insights-client on system to upload archive.</div>\n                                    }\n                                >\n                                    <ExclamationTriangleIcon color=\"#f0ab00\"/>\n                                </Tooltip> : ''\n                            }\n                            { data[i].last_updated\n                                ? this.formatDate(data[i].last_updated)\n                                : this.formatDate(data[i].updated)\n                            }\n                            { insights.chrome.isBeta()\n                                ? data[i].type === 'system' ? <HistoricalProfilesDropdown systemId={ data[i].id }/> : null\n                                : null\n                            }\n                        </div>\n                    </div>\n                </th>\n            );\n        }\n\n        return row;\n    }\n\n    renderSystems(systems, baselines, hspIds) {\n        let baselinesList = [];\n        let systemsList = [];\n        let row = [];\n        let fullHistoricalSystemList = [];\n\n        if (systems === undefined && baselines === undefined && hspIds === undefined) {\n            return row;\n        }\n\n        let modifiedSystems = systems.map(function(system) {\n            system.type = 'system';\n            return system;\n        });\n        let modifiedBaselines = baselines.map(function(baseline) {\n            baseline.type = 'baseline';\n            return baseline;\n        });\n        let modifiedHSPs = hspIds.map(function(hsp) {\n            hsp.type = 'system-profile';\n            return hsp;\n        });\n\n        modifiedSystems.forEach(function(system) {\n            fullHistoricalSystemList.push(system);\n            modifiedHSPs.forEach(function(hsp) {\n                if (hsp.display_name === system.display_name) {\n                    fullHistoricalSystemList.push(hsp);\n                }\n            });\n        });\n\n        baselinesList = this.addSystems(modifiedBaselines);\n        systemsList = this.addSystems(fullHistoricalSystemList);\n\n        row = baselinesList.concat(systemsList);\n\n        return row;\n    }\n\n    renderSortButton(sortType, sort) {\n        let sortIcon;\n\n        if (sort === ASC) {\n            sortIcon = <LongArrowAltUpIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else if (sort === DESC) {\n            sortIcon = <LongArrowAltDownIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else {\n            sortIcon = <ArrowsAltVIcon className=\"pointer not-active\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n\n        return sortIcon;\n    }\n\n    toggleSort(sortType, sort) {\n        if (sortType === 'fact') {\n            this.props.toggleFactSort(sort);\n        } else {\n            this.props.toggleStateSort(sort);\n        }\n    }\n\n    renderHeaderRow(systems, baselines, hspIds, loading) {\n        const { stateSort } = this.props;\n\n        return (\n            <tr className=\"sticky-column-header\">\n                <th className=\"fact-header sticky-column fixed-column-1\" key='fact-header'>\n                    <div className=\"active-blue\">Fact { this.renderSortButton('fact', this.props.factSort) }</div>\n                </th>\n                <th className=\"state-header sticky-column fixed-column-2\" key='state-header'>\n                    { stateSort !== '' ?\n                        <div className=\"active-blue\">State { this.renderSortButton('state', this.props.stateSort) }</div> :\n                        <div>State { this.renderSortButton('state', this.props.stateSort) }</div>\n                    }\n                </th>\n                { this.renderSystems(systems, baselines, hspIds) }\n                <th key='loading-header'>\n                    { loading ? <Skeleton size={ SkeletonSize.lg } /> : this.renderAddSystem() }\n                </th>\n            </tr>\n        );\n    }\n\n    renderExpandableRowButton(expandedRows, factName) {\n        let expandIcon;\n\n        if (expandedRows.includes(factName)) {\n            expandIcon = <AngleDownIcon className=\"pointer active-blue\" onClick={ () => this.props.expandRow(factName) } />;\n        } else {\n            expandIcon = <AngleRightIcon className=\"pointer\" onClick={ () => this.props.expandRow(factName) } />;\n        }\n\n        return expandIcon;\n    }\n\n    renderEmptyState() {\n        return (\n            <center>\n                <EmptyState>\n                    <EmptyStateIcon icon={ PlusCircleIcon } />\n                    <br></br>\n                    <Title size=\"lg\">Add systems or baselines to compare</Title>\n                    <EmptyStateBody>\n                        You currently have no systems or baselines displayed. Add at least two\n                        <br></br>\n                        systems or baselines to compare their facts.\n                    </EmptyStateBody>\n                    <AddSystemButton isTable={ false }/>\n                </EmptyState>\n            </center>\n        );\n    }\n\n    renderAddSystem() {\n        return (\n            <div className=\"add-system-header\">\n                <div className=\"add-system-icon\">\n                    <PlusCircleIcon/>\n                </div>\n                <AddSystemButton isTable={ true }/>\n            </div>\n        );\n    }\n\n    renderTable(compareData, systems, baselines, hspIds, loading) {\n        return (\n            <React.Fragment>\n                <div className=\"drift-table-wrapper\">\n                    <table className=\"pf-c-table ins-c-table pf-m-compact ins-entity-table drift-table\">\n                        <thead>\n                            { this.renderHeaderRow(systems, baselines, hspIds, loading) }\n                        </thead>\n                        <tbody>\n                            { loading ? this.renderLoadingRows() : this.renderRows(compareData, systems, baselines, hspIds) }\n                        </tbody>\n                    </table>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { fullCompareData, filteredCompareData, systems, baselines, hspIds, loading } = this.props;\n\n        return (\n            <React.Fragment>\n                <AddSystemModal\n                    selectedSystemIds={ systems.map(system => system.id) }\n                    confirmModal={ this.fetchCompare }\n                />\n                {\n                    systems.length > 0 ||\n                    baselines.length > 0 ||\n                    hspIds.length > 0 ||\n                    loading ||\n                    (fullCompareData.length !== 0 && this.systemIds.length !== 0)\n                        ? this.renderTable(filteredCompareData, systems, baselines, hspIds, loading) : this.renderEmptyState()\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        fullCompareData: state.compareState.fullCompareData,\n        filteredCompareData: state.compareState.filteredCompareData,\n        addSystemModalOpened: state.addSystemModalOpened,\n        stateFilters: state.compareState.stateFilters,\n        factFilter: state.compareState.factFilter,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines,\n        hspIds: state.compareState.hspIds,\n        factSort: state.compareState.factSort,\n        stateSort: state.compareState.stateSort,\n        expandedRows: state.compareState.expandedRows\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchCompare: (systemIds, baselineIds, hspIds) => dispatch(compareActions.fetchCompare(systemIds, baselineIds, hspIds)),\n        toggleFactSort: (sortType) => dispatch(compareActions.toggleFactSort(sortType)),\n        toggleStateSort: (sortType) => dispatch(compareActions.toggleStateSort(sortType)),\n        expandRow: (factName) => dispatch(compareActions.expandRow(factName)),\n        clearState: () => dispatch(compareActions.clearState()),\n        setSelectedBaselines: (selectedBaselineIds) => dispatch(baselinesTableActions.setSelectedBaselines(selectedBaselineIds)),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nDriftTable.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object,\n    fetchCompare: PropTypes.func,\n    clearState: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    filteredCompareData: PropTypes.array,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    hspIds: PropTypes.array,\n    addSystemModalOpened: PropTypes.bool,\n    stateFilters: PropTypes.array,\n    factFilter: PropTypes.string,\n    factSort: PropTypes.string,\n    stateSort: PropTypes.string,\n    loading: PropTypes.bool,\n    toggleFactSort: PropTypes.func,\n    toggleStateSort: PropTypes.func,\n    expandRow: PropTypes.func,\n    expandRows: PropTypes.func,\n    expandedRows: PropTypes.array,\n    setSelectedBaselines: PropTypes.func,\n    addStateFilter: PropTypes.func\n};\n\nexport default withRouter (connect(mapStateToProps, mapDispatchToProps)(DriftTable));\n","import types from './types';\n\nfunction toggleFilterDropDown() {\n    return {\n        type: types.OPEN_FILTER_DROPDOWN\n    };\n}\n\nexport default {\n    toggleFilterDropDown\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox, Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { filterDropdownActions } from './redux';\n\nclass FilterDropDown extends Component {\n    constructor(props) {\n        super(props);\n        this.onToggle = this.onToggle.bind(this);\n        this.createDropdownItem = this.createDropdownItem.bind(this);\n    }\n\n    onToggle() {\n        this.props.toggleDropDown();\n    }\n\n    createDropdownItem(stateFilter) {\n        let dropdownItem = <Checkbox\n            className=\"state-filter-checkbox\"\n            id={ stateFilter.display }\n            label={ stateFilter.display }\n            isChecked={ stateFilter.selected }\n            onChange={ () =>\n                this.props.addStateFilter(stateFilter)\n            } />;\n\n        return dropdownItem;\n    }\n\n    createDropdownArray(stateFilters) {\n        let dropdownItems = [];\n\n        stateFilters.forEach(function(stateFilter) {\n            let dropdownItem = this.createDropdownItem(stateFilter);\n            dropdownItems.push(dropdownItem);\n        }.bind(this));\n\n        return dropdownItems;\n    }\n\n    createSelectedViewsString(stateFilters) {\n        let selectedViewsArray = [];\n        let selectedViews = '';\n\n        for (let i = 0; i < stateFilters.length; i++) {\n            if (stateFilters[i].selected) {\n                selectedViewsArray.push(stateFilters[i].display);\n            }\n        }\n\n        for (let i = 0; i < selectedViewsArray.length; i++) {\n            selectedViews += selectedViewsArray[i];\n\n            if ((i + 1) < selectedViewsArray.length) {\n                selectedViews += ', ';\n            }\n        }\n\n        return selectedViews;\n    }\n\n    render() {\n        const { stateFilters } = this.props;\n        let dropdownItems = [];\n        let selectedViews = '';\n\n        dropdownItems = this.createDropdownArray(stateFilters);\n        selectedViews = this.createSelectedViewsString(stateFilters);\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    className=\"state-filter-dropdown\"\n                    onSelect={ this.onToggle }\n                    toggle={ <DropdownToggle onToggle={ this.onToggle }>\n                        View: { selectedViews }\n                    </DropdownToggle> }\n                    isOpen={ this.props.filterDropdownOpened }\n                    dropdownItems={ dropdownItems }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nFilterDropDown.propTypes = {\n    toggleDropDown: PropTypes.func,\n    filterDropdownOpened: PropTypes.bool,\n    stateFilters: PropTypes.array,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        filterDropdownOpened: state.filterDropdownOpened,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleDropDown: () => dispatch(filterDropdownActions.toggleFilterDropDown()),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(FilterDropDown));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TextInput } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { compareActions } from '../../modules';\n\nexport class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: this.props.factFilter\n        };\n\n        this.setFactFilter = this.setFactFilter.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.factFilter !== '' && this.props.factFilter === '') {\n            this.setState({ filter: this.props.factFilter });\n        }\n    }\n\n    updateFactFilter = (filter) => {\n        this.setState({ filter });\n        this.setFactFilter(filter);\n    }\n\n    setFactFilter = _.debounce(function(filter) {\n        this.props.changeFactFilter(filter);\n    }, 250);\n\n    render() {\n        return (\n            <React.Fragment>\n                <TextInput\n                    value={ this.state.filter }\n                    id=\"filterByFact\"\n                    placeholder=\"Filter by fact\"\n                    onChange={ this.updateFactFilter }\n                    aria-label=\"filter by fact\"\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nSearchBar.propTypes = {\n    changeFactFilter: PropTypes.func,\n    factFilter: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeFactFilter: (factFilter) => dispatch(compareActions.filterByFact(factFilter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(SearchBar));\n","import types from './types';\n\nfunction toggleKebab() {\n    return {\n        type: types.TOGGLE_KEBAB\n    };\n}\n\nexport default {\n    toggleKebab\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../../modules';\nimport { actionKebabActions } from './redux';\nimport { Dropdown, KebabToggle, DropdownItem } from '@patternfly/react-core';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\n\nclass ActionKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.removeSystemsSelect = this.removeSystemsSelect.bind(this);\n    }\n\n    removeSystemsSelect() {\n        const { history, toggleKebab, removeSystems, clearSelectedBaselines } = this.props;\n\n        toggleKebab();\n        removeSystems();\n        clearSelectedBaselines();\n        setHistory(history, []);\n    }\n\n    render() {\n        const dropdownItems = [\n            <DropdownItem key=\"remove-systems\" component=\"button\" onClick={ this.removeSystemsSelect }>Clear all comparisons</DropdownItem>\n        ];\n        return (\n            <Dropdown\n                style={ { float: 'left' } }\n                toggle={ <KebabToggle onToggle={ this.props.toggleKebab } /> }\n                isOpen={ this.props.kebabOpened }\n                dropdownItems={ dropdownItems }\n                isPlain\n            />\n        );\n    }\n}\n\nActionKebab.propTypes = {\n    removeSystems: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func,\n    toggleKebab: PropTypes.func,\n    kebabOpened: PropTypes.bool,\n    history: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    return {\n        kebabOpened: state.kebabOpened\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        removeSystems: () => dispatch(compareActions.clearState()),\n        clearSelectedBaselines: () => dispatch(baselinesTableActions.clearSelectedBaselines()),\n        toggleKebab: () => dispatch(actionKebabActions.toggleKebab())\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ActionKebab));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../modules';\nimport { errorAlertActions } from './redux';\nimport { setHistory } from '../../Utilities/SetHistory';\n\nclass ErrorAlert extends Component {\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n    }\n\n    confirmModal() {\n        const { toggleModal, revertCompareData, history, previousStateSystems } = this.props;\n\n        toggleModal();\n        revertCompareData();\n        setHistory(history, previousStateSystems.map(system => system.id));\n    }\n\n    render() {\n        const { errorAlertOpened } = this.props;\n        return (\n            <React.Fragment>\n                { errorAlertOpened && (\n                    <Alert\n                        variant=\"danger\"\n                        title=\"Error\"\n                        action={\n                            <AlertActionCloseButton\n                                onClose={ () => this.confirmModal() }\n                            /> }\n                    >\n                        Status Code: { this.props.error.status }<br></br>\n                        { this.props.error.detail }\n                    </Alert>\n                ) }\n            </React.Fragment>\n        );\n    }\n}\n\nErrorAlert.propTypes = {\n    confirmModal: PropTypes.func,\n    errorAlertOpened: PropTypes.bool,\n    error: PropTypes.object,\n    status: PropTypes.number,\n    detail: PropTypes.string,\n    toggleModal: PropTypes.func,\n    history: PropTypes.object,\n    clearState: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    revertCompareData: PropTypes.func,\n    previousStateSystems: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        fullCompareData: state.compareState.fullCompareData,\n        previousStateSystems: state.compareState.previousStateSystems,\n        errorAlertOpened: state.errorAlertOpened,\n        error: state.compareState.error\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        revertCompareData: () => dispatch(compareActions.revertCompareData())\n    };\n}\n\nexport default withRouter (connect(mapStateToProps, mapDispatchToProps)(ErrorAlert));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { Pagination, DropdownDirection } from '@patternfly/react-core';\n\nconst perPageOptions = [\n    { title: '10', value: 10 },\n    { title: '25', value: 25 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nclass TablePagination extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onSetPage = this.onSetPage.bind(this);\n        this.onPerPageSelect = this.onPerPageSelect.bind(this);\n    }\n\n    onSetPage(event, page) {\n        const { perPage } = this.props;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    onPerPageSelect(event, perPage) {\n        const page = 1;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    render() {\n        const { totalFacts, page, perPage } = this.props;\n\n        return (\n            <Pagination\n                itemCount={ totalFacts ? totalFacts : 0 }\n                perPageOptions={ perPageOptions }\n                page={ totalFacts === 0 ? 0 : page }\n                perPage={ perPage }\n                dropDirection={ DropdownDirection.down }\n                onSetPage={ this.onSetPage }\n                onPerPageSelect={ this.onPerPageSelect }\n            />\n        );\n    }\n}\n\nTablePagination.propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    updatePagination: PropTypes.func,\n    totalFacts: PropTypes.number\n};\n\nfunction mapStateToProps(state) {\n    return {\n        page: state.compareState.page,\n        perPage: state.compareState.perPage,\n        totalFacts: state.compareState.totalFacts\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updatePagination: ((pagination) => dispatch(compareActions.updatePagination(pagination)))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePagination);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { ExportIcon } from '@patternfly/react-icons';\nimport { compareActions } from '../../modules';\n\nclass ExportCSVButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { exportToCSV } = this.props;\n\n        return (\n            <ExportIcon className='pointer not-active export-button-margin' onClick={ exportToCSV } />\n        );\n    }\n}\n\nExportCSVButton.propTypes = {\n    exportToCSV: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        exportToCSV: () => dispatch(compareActions.exportToCSV())\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(ExportCSVButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Chip, ChipGroup, ChipGroupToolbarItem } from '@patternfly/react-core';\n\nimport { compareActions } from '../../modules';\n\nexport class DriftFilterChips extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chipGroup: [\n                { category: 'State', chips: this.setStateChips(this.props.stateFilters) },\n                { category: 'Name', chips:\n                    this.props.factFilter !== ''\n                        ? [ this.props.factFilter ]\n                        : []\n                }\n            ]\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { stateFilters, factFilter } = this.props;\n        let newStateChips;\n        let newFactFilter;\n        let newChipGroup;\n\n        if (stateFilters !== prevProps.stateFilters) {\n            let filteredChips = [];\n\n            stateFilters.forEach(function(filter) {\n                if (filter.selected) {\n                    filteredChips.push(filter.display);\n                }\n            });\n\n            newStateChips = { category: 'State', chips: filteredChips };\n\n            newChipGroup = [ newStateChips, this.state.chipGroup[1] ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n\n        if (factFilter !== prevProps.factFilter) {\n            newFactFilter = { category: 'Name', chips:\n                factFilter !== ''\n                    ? [ factFilter ]\n                    : []\n            };\n\n            newChipGroup = [ this.state.chipGroup[0], newFactFilter ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n    }\n\n    setStateChips = (stateFilters) => {\n        let stateChips = [];\n\n        stateFilters.forEach(function(filter) {\n            if (filter.selected) {\n                stateChips.push(filter.display);\n            }\n        });\n\n        return stateChips;\n    }\n\n    removeChip = (chip) => {\n        const { stateFilters, addStateFilter, filterByFact } = this.props;\n\n        if (chip === 'Same' || chip === 'Different' || chip === 'Incomplete data') {\n            stateFilters.forEach(function(stateFilter) {\n                if (stateFilter.display === chip) {\n                    addStateFilter(stateFilter);\n                }\n            });\n        } else {\n            filterByFact('');\n        }\n    }\n\n    render() {\n        const { chipGroup } = this.state;\n        let chipKeyCount = 0;\n\n        return (\n            <ChipGroup withToolbar>\n                { chipGroup.map(currentGroup => (\n                    <ChipGroupToolbarItem key={ currentGroup.category } categoryName={ currentGroup.category }>\n                        { currentGroup.chips.map(chip => (\n                            <Chip key={ currentGroup.category + chipKeyCount++ } onClick={ () => this.removeChip(chip) }>\n                                { chip }\n                            </Chip>\n                        )) }\n                    </ChipGroupToolbarItem>\n                )) }\n            </ChipGroup>\n        );\n    }\n}\n\nDriftFilterChips.propTypes = {\n    factFilter: PropTypes.string,\n    stateFilters: PropTypes.array,\n    filterByFact: PropTypes.func,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        filterByFact: (filter) => dispatch(compareActions.filterByFact(filter)),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DriftFilterChips);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport { errorAlertActions } from '../ErrorAlert/redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nimport DriftTable from './DriftTable/DriftTable';\nimport FilterDropDown from './FilterDropDown/FilterDropDown';\nimport SearchBar from './SearchBar/SearchBar';\nimport ActionKebab from './ActionKebab/ActionKebab';\nimport ErrorAlert from '../ErrorAlert/ErrorAlert';\nimport TablePagination from './Pagination/Pagination';\nimport ExportCSVButton from './ExportCSVButton/ExportCSVButton';\nimport DriftFilterChips from './DriftFilterChips/DriftFilterChips';\n\nexport class DriftPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.props.clearSelectedBaselines();\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    render() {\n        const { systems, baselines, loading } = this.props;\n\n        if (this.props.error.detail) {\n            this.props.toggleErrorAlert();\n        }\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='System Comparison'/>\n                </PageHeader>\n                <Main>\n                    <ErrorAlert />\n                    <Card className='pf-t-light pf-m-opaque-100'>\n                        <CardBody>\n                            <div>\n                                { (systems.length > 0 || baselines.length > 0) && !loading ?\n                                    <React.Fragment>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <SearchBar />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <FilterDropDown />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ExportCSVButton />\n                                                </ToolbarItem>\n                                                <ToolbarItem>\n                                                    <ActionKebab />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                            <ToolbarGroup className=\"pf-c-pagination\">\n                                                <ToolbarItem>\n                                                    <TablePagination />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                        <Toolbar className=\"drift-toolbar\">\n                                            <ToolbarGroup>\n                                                <ToolbarItem>\n                                                    <DriftFilterChips />\n                                                </ToolbarItem>\n                                            </ToolbarGroup>\n                                        </Toolbar>\n                                    </React.Fragment>\n                                    : null\n                                }\n                                <DriftTable />\n                                { systems.length > 0 && !loading ?\n                                    <Toolbar className=\"drift-toolbar\">\n                                        <ToolbarGroup className=\"pf-c-pagination\">\n                                            <ToolbarItem>\n                                                <TablePagination />\n                                            </ToolbarItem>\n                                        </ToolbarGroup>\n                                    </Toolbar>\n                                    : null\n                                }\n                            </div>\n                        </CardBody>\n                    </Card>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nDriftPage.propTypes = {\n    error: PropTypes.object,\n    loading: PropTypes.bool,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    toggleErrorAlert: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleErrorAlert: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        clearSelectedBaselines: () => dispatch(baselinesTableActions.clearSelectedBaselines())\n    };\n}\n\nfunction mapStateToProps(state) {\n    return {\n        error: state.compareState.error,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftPage));\n"],"sourceRoot":""}