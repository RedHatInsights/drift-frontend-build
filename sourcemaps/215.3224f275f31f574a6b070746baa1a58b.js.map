{"version":3,"file":"js/215.1648127898236.edfee128106f6356d350.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryLoadError.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Inventory/InventoryTable.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/EditBaselineNameModal/EditBaselineNameModal.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/DeleteFactModal/helpers.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/EditBaselineKebab/EditBaselineKebab.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/AddFactButton/AddFactButton.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/EditBaselineToolbar/EditBaselineToolbar.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/FactModal/FactModal.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/EditBaseline/EditBaseline.js","webpack:///./src/SmartComponents/SystemsTable/NotificationsSystemsTable.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/DeleteNotificationModal/DeleteNotificationModal.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/redux/actions.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/SystemNotification.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/EditBaselinePage.js","webpack:///./src/SmartComponents/ErrorAlert/ErrorAlert.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/lodash/isEmpty.js","webpack:///./node_modules/lodash/isEqual.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect } from 'react';\nvar InventoryLoadError = function (_a) {\n    var component = _a.component, props = __rest(_a, [\"component\"]);\n    useEffect(function () {\n        console.error(\"Unable to load inventory component. Failed to load \".concat(component, \".\"), props);\n    }, []);\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h1\", null, \"Unable to load inventory component\"),\n        React.createElement(\"h2\", null,\n            \"Failed to load \",\n            component),\n        React.createElement(\"code\", null, \"More info can be found in browser console output.\")));\n};\nexport default InventoryLoadError;\n//# sourceMappingURL=InventoryLoadError.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from 'react-redux';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport InventoryLoadError from './InventoryLoadError';\nimport classNames from 'classnames';\nvar BaseInvTable = function (props) {\n    var history = useHistory();\n    var store = useStore();\n    var Cmp = props.component;\n    return (React.createElement(Cmp, { className: classNames(props.className, 'inventory') },\n        React.createElement(Suspense, { fallback: props.fallback },\n            React.createElement(ScalprumComponent, __assign({ history: history, store: store, appName: \"inventory\", module: \"./InventoryTable\", scope: \"inventory\", ErrorComponent: React.createElement(InventoryLoadError, __assign({ component: \"InventoryDetailHead\", history: history, store: store }, props)), ref: props.innerRef }, props)))));\n};\nBaseInvTable.propTypes = {\n    fallback: PropTypes.node,\n    innerRef: PropTypes.object,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nvar InvTable = React.forwardRef(function (props, ref) { return React.createElement(BaseInvTable, __assign({ innerRef: ref }, props)); });\nInvTable.propTypes = {\n    fallback: PropTypes.node,\n    component: PropTypes.string,\n    className: PropTypes.string,\n};\nInvTable.defaultProps = {\n    fallback: (React.createElement(Bullseye, { className: \"pf-u-p-lg\" },\n        React.createElement(Spinner, { size: \"xl\" }))),\n    component: 'section',\n};\nexport default InvTable;\n//# sourceMappingURL=InventoryTable.js.map","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Form, FormGroup, Modal, ModalVariant, TextInput, ValidatedOptions } from '@patternfly/react-core';\n\nimport { editBaselineActions } from '../redux';\n\nexport class EditBaselineNameModal extends Component {\n    constructor(props) {\n        super(props);\n\n        /*eslint-disable camelcase*/\n        this.state = {\n            baselineName: this.props.baselineData.display_name\n        };\n        /*eslint-enable camelcase*/\n\n        this.updateBaselineName = (value) => {\n            this.setState({ baselineName: value });\n        };\n\n        this.confirmModal = this.confirmModal.bind(this);\n    }\n\n    async confirmModal() {\n        const { baselineName } = this.state;\n        const { baselineData, patchBaseline, toggleEditNameModal } = this.props;\n\n        try {\n            /*eslint-disable camelcase*/\n            await patchBaseline(baselineData.id, { display_name: baselineName, facts_patch: []});\n            /*eslint-enable camelcase*/\n\n            toggleEditNameModal();\n        } catch (e) {\n            // do nothing and let redux handle\n        }\n    }\n\n    cancelModal = () => {\n        const { toggleEditNameModal, baselineData } = this.props;\n\n        this.updateBaselineName(baselineData.display_name);\n        toggleEditNameModal();\n    }\n\n    checkKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            this.confirmModal();\n        }\n    }\n\n    renderModalBody() {\n        const { baselineName } = this.state;\n        const { error } = this.props;\n        const hasError = Object.prototype.hasOwnProperty.call(error, 'status')  ? ValidatedOptions.error : null;\n\n        return (<div className='fact-value'>\n            <Form>\n                <FormGroup\n                    label='Baseline title'\n                    isRequired\n                    fieldId='baseline name'\n                    helperTextInvalid={ Object.prototype.hasOwnProperty.call(error, 'detail') ? error.detail : null }\n                    validated={ hasError }\n                    onKeyPress={ this.checkKeyPress }\n                >\n                    <TextInput\n                        value={ baselineName }\n                        type=\"text\"\n                        onChange={ this.updateBaselineName }\n                        validated={ hasError }\n                        aria-label=\"baseline name\"\n                    />\n                </FormGroup>\n            </Form>\n        </div>);\n    }\n\n    render() {\n        const { modalOpened } = this.props;\n\n        return (\n            <Modal\n                className=\"drift\"\n                variant={ ModalVariant.small }\n                title=\"Edit name\"\n                isOpen={ modalOpened }\n                onClose={ this.cancelModal }\n                actions={ [\n                    <Button\n                        key=\"confirm\"\n                        variant=\"primary\"\n                        ouiaId=\"save\"\n                        onClick={ this.confirmModal }>\n                        Save\n                    </Button>,\n                    <Button\n                        key=\"cancel\"\n                        variant=\"link\"\n                        ouiaId=\"cancel\"\n                        onClick={ this.cancelModal }>\n                        Cancel\n                    </Button>\n                ] }\n            >\n                { this.renderModalBody() }\n            </Modal>\n        );\n    };\n}\n\nEditBaselineNameModal.propTypes = {\n    baselineData: PropTypes.object,\n    toggleEditNameModal: PropTypes.func,\n    modalOpened: PropTypes.bool,\n    patchBaseline: PropTypes.func,\n    error: PropTypes.object\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        patchBaseline: (baselineId, newBaselineBody) => dispatch(editBaselineActions.patchBaseline(baselineId, newBaselineBody))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(EditBaselineNameModal);\n","import editBaselineHelpers from '../EditBaseline/helpers';\n\nfunction countFacts(editBaselineTableData) {\n    let categories = 0;\n    let facts = 0;\n\n    editBaselineTableData.forEach(function(fact) {\n        if (fact.selected) {\n            if (editBaselineHelpers.isCategory(fact)) {\n                categories += 1;\n            } else {\n                facts += 1;\n            }\n        } else if (editBaselineHelpers.isCategory(fact)) {\n            editBaselineHelpers.baselineSubFacts(fact).forEach(function(subFact) {\n                if (subFact.selected) {\n                    facts += 1;\n                }\n            });\n        }\n    });\n\n    return { categories, facts };\n}\n\nexport default {\n    countFacts\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Dropdown, KebabToggle, DropdownItem } from '@patternfly/react-core';\n\nimport DeleteFactModal from '../DeleteFactModal/DeleteFactModal';\nimport editBaselineHelpers from '../EditBaseline/helpers';\nimport deleteFactModalHelpers from '../DeleteFactModal/helpers';\n\nclass EditBaselineKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            kebabOpened: false,\n            modalOpened: false\n        };\n\n        this.toggleKebab = () => {\n            const { kebabOpened } = this.state;\n            this.setState({\n                kebabOpened: !kebabOpened\n            });\n        };\n\n        this.toggleModalOpened = () => {\n            const { modalOpened } = this.state;\n            this.setState({\n                modalOpened: !modalOpened,\n                kebabOpened: false\n            });\n        };\n    }\n\n    isDisabled = () => {\n        const { editBaselineTableData } = this.props;\n        let isDisabled = true;\n\n        editBaselineTableData.forEach((fact) => {\n            if (fact.selected) {\n                isDisabled = false;\n            }\n\n            if (editBaselineHelpers.isCategory(fact)) {\n                editBaselineHelpers.baselineSubFacts(fact).forEach((subFact) => {\n                    if (subFact.selected) {\n                        isDisabled = false;\n                    }\n                });\n            }\n        });\n\n        return isDisabled;\n    }\n\n    render() {\n        const { kebabOpened, modalOpened } = this.state;\n        const { editBaselineTableData } = this.props;\n        let dropdownItems;\n        let categoryMessage;\n        let factMessage;\n        let { categories, facts } = deleteFactModalHelpers.countFacts(editBaselineTableData);\n\n        if (categories > 0) {\n            categoryMessage = categories === 1 ? '1 category' : categories + ' categories';\n        }\n\n        if (facts > 0) {\n            factMessage = facts === 1 ? '1 fact' : facts + ' facts';\n        }\n\n        dropdownItems = [\n            <DropdownItem\n                key=\"multi-delete\"\n                component=\"button\"\n                data-ouia-component-id='delete-facts-dropdown-item'\n                onClick={ this.toggleModalOpened }\n                isDisabled={ editBaselineTableData.length > 0 ? this.isDisabled() : true }\n            >\n                Delete facts\n            </DropdownItem>\n        ];\n\n        return (\n            <React.Fragment>\n                { modalOpened ? <DeleteFactModal\n                    toggleModal={ this.toggleModalOpened.bind(this) }\n                    modalOpened={ modalOpened }\n                    categoryMessage={ categoryMessage }\n                    factMessage={ factMessage }\n                /> : null }\n                <Dropdown\n                    style={{ float: 'left' }}\n                    toggle={ <KebabToggle\n                        data-ouia-component-id='delete-facts-dropdown-toggle'\n                        data-ouia-component-type='PF4/DropdownToggle'\n                        onToggle={ this.toggleKebab } /> }\n                    isOpen={ kebabOpened }\n                    dropdownItems={ dropdownItems }\n                    isPlain\n                    ouiaId='delete-facts-dropdown'\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nEditBaselineKebab.propTypes = {\n    editBaselineTableData: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        editBaselineTableData: state.editBaselineState.editBaselineTableData\n    };\n}\n\nexport default connect(mapStateToProps, null)(EditBaselineKebab);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Tooltip } from '@patternfly/react-core';\n\nimport { editBaselineActions } from '../redux';\n\nclass AddFactButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleAddFact = () => {\n        const { setFactData, toggleFactModal } = this.props;\n\n        setFactData({ factName: '', factValue: '', fact: []});\n        toggleFactModal();\n    }\n\n    render() {\n        const { editBaselineEmptyState, isDisabled, permissions } = this.props;\n\n        return (\n            <React.Fragment>\n                { !permissions.baselinesWrite && permissions.baselinesWrite !== undefined\n                    ? <Tooltip\n                        content={ <div>You do not have permissions to perform this action</div> }\n                    >\n                        <div className={ editBaselineEmptyState ? 'tooltip-button-margin' : null }>\n                            <Button\n                                variant='primary'\n                                isDisabled\n                                onClick={ this.handleAddFact }\n                                ouiaId='add-fact-or-category-button'\n                            >\n                                Add fact or category\n                            </Button>\n                        </div>\n                    </Tooltip>\n                    : <Button\n                        variant='primary'\n                        isDisabled={ isDisabled }\n                        onClick={ this.handleAddFact }\n                        ouiaId='add-fact-or-category-button'\n                    >\n                        Add fact or category\n                    </Button>\n                }\n            </React.Fragment>\n        );\n    };\n}\n\nAddFactButton.propTypes = {\n    toggleFactModal: PropTypes.func,\n    setFactData: PropTypes.func,\n    isDisabled: PropTypes.bool,\n    permissions: PropTypes.object,\n    editBaselineEmptyState: PropTypes.bool\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleFactModal: () => dispatch(editBaselineActions.toggleFactModal()),\n        setFactData: (factData) => dispatch(editBaselineActions.setFactData(factData))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddFactButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DropdownItem, Toolbar, ToolbarGroup, ToolbarItem, ToolbarContent } from '@patternfly/react-core';\nimport { BulkSelect } from '@redhat-cloud-services/frontend-components';\n\nimport EditBaselineKebab from '../EditBaselineKebab/EditBaselineKebab';\nimport AddFactButton from '../AddFactButton/AddFactButton';\nimport helpers from '../../../helpers';\nimport ExportCSVButton from '../../../ExportCSVButton/ExportCSVButton';\n\nexport class EditBaselineToolbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bulkSelectItems: [\n                {\n                    title: 'Select all',\n                    key: 'select-all',\n                    onClick: () => this.props.onBulkSelect(true)\n                }, {\n                    title: 'Select none',\n                    key: 'select-none',\n                    onClick: () => this.props.onBulkSelect(false)\n                }\n            ],\n            dropdownOpen: false,\n            dropdownItems: [\n                <DropdownItem\n                    key='export-to-CSV'\n                    component='button'\n                    ouiaId='edit-baseline-export-to-csv'\n                    onClick={ () => this.props.exportToCSV(this.props.tableData, this.props.baselineData) }\n                >\n                    Export to CSV\n                </DropdownItem>,\n                <DropdownItem\n                    key='export-to-JSON'\n                    component='button'\n                    ouiaId='edit-baseline-export-to-json'\n                    onClick={ () => this.props.exportToJSON(this.props.tableData) }\n                >\n                    Export to JSON\n                </DropdownItem>\n            ]\n        };\n    }\n\n    onToggle = () => {\n        const { dropdownOpen } = this.state;\n\n        this.setState({\n            dropdownOpen: !dropdownOpen\n        });\n    }\n\n    render() {\n        const { isDisabled, onBulkSelect, permissions, selected, totalFacts } = this.props;\n        const { bulkSelectItems, dropdownItems, dropdownOpen } = this.state;\n\n        return (\n            <Toolbar className='drift-toolbar'>\n                <ToolbarContent>\n                    <ToolbarItem>\n                        <BulkSelect\n                            count={ selected > 0 ? selected : null }\n                            items={ bulkSelectItems }\n                            checked={ helpers.findCheckedValue(totalFacts, selected) }\n                            onSelect={ () => onBulkSelect(!selected > 0) }\n                            isDisabled={ isDisabled }\n                            ouiaId='edit-baseline-bulk-selector-dropdown'\n                        />\n                    </ToolbarItem>\n                    <ToolbarItem>\n                        <AddFactButton\n                            isDisabled={ isDisabled }\n                            permissions={ permissions }\n                        />\n                    </ToolbarItem>\n                    <ToolbarGroup variant='icon-button-group'>\n                        <ToolbarItem>\n                            <ExportCSVButton\n                                dropdownItems={ dropdownItems }\n                                isOpen={ dropdownOpen }\n                                onToggle={ this.onToggle }\n                                ouiaId='edit-baseline-export-dropdown'\n                            />\n                        </ToolbarItem>\n                        <ToolbarItem>\n                            <EditBaselineKebab />\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                </ToolbarContent>\n            </Toolbar>\n        );\n    };\n}\n\nEditBaselineToolbar.propTypes = {\n    isDisabled: PropTypes.bool,\n    onBulkSelect: PropTypes.func,\n    selected: PropTypes.any,\n    totalFacts: PropTypes.number,\n    exportToCSV: PropTypes.func,\n    exportToJSON: PropTypes.func,\n    tableData: PropTypes.array,\n    baselineData: PropTypes.object,\n    permissions: PropTypes.object\n};\n\nexport default EditBaselineToolbar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Checkbox, Form, FormGroup, Modal, ModalVariant, TextInput, ValidatedOptions } from '@patternfly/react-core';\n\nimport { editBaselineActions } from '../redux';\nimport editBaselineHelpers from '../EditBaseline/helpers';\n\nexport class FactModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.cancelFact = this.cancelFact.bind(this);\n        this.confirmModal = this.confirmModal.bind(this);\n        this.renderCategoryCheckbox = this.renderCategoryCheckbox.bind(this);\n        this.renderFactInput = this.renderFactInput.bind(this);\n        this.renderValueInput = this.renderValueInput.bind(this);\n        this.renderModalBody = this.renderModalBody.bind(this);\n\n        this.state = {\n            factName: this.props.factName,\n            factValue: this.props.factValue,\n            factData: this.props.factData,\n            isCategory: this.props.isCategory\n        };\n\n        this.state.isAddFact = this.props.factName === '' && this.props.factValue === '';\n        this.state.isEditFact = this.props.factName !== '' && this.props.factValue !== '';\n\n        this.handleChange = checked => {\n            this.setState({ isCategory: checked });\n        };\n\n        this.handleNewName = value => {\n            this.setState({ factName: value });\n        };\n\n        this.handleNewValue = value => {\n            this.setState({ factValue: value });\n        };\n    }\n\n    cancelFact() {\n        const { toggleFactModal } = this.props;\n\n        toggleFactModal();\n    }\n\n    async confirmModal() {\n        const { toggleFactModal, baselineData, patchBaseline, fetchBaselineData } = this.props;\n        const { isAddFact } = this.state;\n        let newAPIBody = '';\n\n        try {\n            if (isAddFact) {\n                newAPIBody = this.addFact(baselineData);\n            } else {\n                newAPIBody = this.editFact(baselineData);\n            }\n\n            let results = await patchBaseline(baselineData.id, newAPIBody);\n            if (results) {\n                fetchBaselineData(baselineData.id);\n            }\n\n            toggleFactModal();\n        } catch (e) {\n            // do nothing and let redux handle\n        }\n    }\n\n    addFact(baselineData) {\n        const { isCategory, factName, factValue, factData } = this.state;\n\n        let newFactData = editBaselineHelpers.buildNewFactData(isCategory, factName, factValue, factData);\n\n        return editBaselineHelpers.makeAddFactPatch(newFactData, baselineData);\n    }\n\n    editFact(baselineData) {\n        const { isCategory, factName, factValue, factData } = this.state;\n\n        let editedFactData = editBaselineHelpers.buildEditedFactData(\n            isCategory, this.props.factName, factName, this.props.factValue, factValue, factData\n        );\n        return editBaselineHelpers.makeEditFactPatch(editedFactData, baselineData, factData);\n    }\n\n    renderCategoryCheckbox() {\n        const { isCategory, isEditFact } = this.state;\n\n        return <Checkbox\n            data-ouia-component-type='PF4/Checkbox'\n            data-ouia-component-id='category-checkbox'\n            className=\"sm-padding-bottom\"\n            aria-label=\"controlled checkbox example\"\n            label=\"This is a category\"\n            id=\"isCategory\"\n            name=\"isCategory\"\n            onChange={ this.handleChange }\n            isChecked={ isCategory }\n            isDisabled={ isCategory && isEditFact }\n        />;\n    }\n\n    checkKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            this.confirmModal();\n        }\n    }\n\n    renderFactInput() {\n        const { inlineError } = this.props;\n        const { factName, isCategory } = this.state;\n\n        return (\n            <div className=\"fact-value\">\n                <FormGroup\n                    label={ isCategory ? 'Category name' : 'Fact name' }\n                    isRequired\n                    helperTextInvalid={ Object.prototype.hasOwnProperty.call(inlineError, 'detail') ? inlineError.detail : null }\n                    validated={ Object.prototype.hasOwnProperty.call(inlineError, 'status') ? 'error' : null }\n                    fieldId='fact name'\n                    onKeyPress={ this.checkKeyPress }\n                >\n                    <TextInput\n                        data-ouia-component-type='PF4/TextInput'\n                        data-ouia-component-id='fact-name-input'\n                        value={ factName }\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        onChange={ this.handleNewName }\n                        validated={ Object.prototype.hasOwnProperty.call(inlineError, 'status') ? ValidatedOptions.error : null }\n                        aria-label=\"fact name\"\n                    />\n                </FormGroup>\n            </div>\n        );\n    }\n\n    renderValueInput() {\n        const { inlineError } = this.props;\n        const { factValue } = this.state;\n\n        return (\n            <div className=\"fact-value\">\n                <FormGroup\n                    label='Value'\n                    isRequired\n                    helperTextInvalid={ Object.prototype.hasOwnProperty.call(inlineError, 'detail') ? inlineError.detail : null }\n                    validated={ Object.prototype.hasOwnProperty.call(inlineError, 'status') ? 'error' : null }\n                    fieldId='fact value'\n                    onKeyPress={ this.checkKeyPress }\n                >\n                    <TextInput\n                        data-ouia-component-type='PF4/TextInput'\n                        data-ouia-component-id='value-input'\n                        value={ factValue }\n                        type=\"text\"\n                        placeholder=\"Value\"\n                        onChange={ this.handleNewValue }\n                        validated={ Object.prototype.hasOwnProperty.call(inlineError, 'status') ? ValidatedOptions.error : null }\n                        aria-label=\"value\"\n                    />\n                </FormGroup>\n            </div>\n        );\n    }\n\n    renderModalBody() {\n        const { isSubFact } = this.props;\n        const { isAddFact, isCategory } = this.state;\n        let modalBody;\n\n        modalBody =\n            <React.Fragment>\n                { (isAddFact && !isSubFact) || isCategory ? this.renderCategoryCheckbox() : null }\n                <Form>\n                    { this.renderFactInput() }\n                    { isCategory ? null : this.renderValueInput() }\n                </Form>\n            </React.Fragment>;\n\n        return modalBody;\n    }\n\n    title() {\n        const { isSubFact } = this.props;\n        const { isAddFact, isEditFact, isCategory } = this.state;\n        let title = 'Add fact';\n\n        if (isEditFact === true && !isCategory && !isSubFact) {\n            title = 'Edit fact';\n        } else if (isAddFact === true && isCategory === true) {\n            title = 'Add category';\n        } else if (isAddFact === true && isSubFact === true) {\n            title = 'Add sub fact';\n        } else if (isEditFact === true && isSubFact === true) {\n            title = 'Edit sub fact';\n        } else if (isCategory === true) {\n            title = 'Edit category';\n        }\n\n        return title;\n    }\n\n    render() {\n        const { factModalOpened } = this.props;\n\n        return (\n            <Modal\n                className=\"drift\"\n                ouiaId='add-fact-modal'\n                variant={ ModalVariant.small }\n                title={ this.title() }\n                isOpen={ factModalOpened }\n                onClose={ this.cancelFact }\n                actions={ [\n                    <Button\n                        key=\"confirm\"\n                        variant=\"primary\"\n                        ouiaId=\"fact-modal-save-button\"\n                        onClick={ this.confirmModal }>\n                        Save\n                    </Button>,\n                    <Button\n                        key=\"cancel\"\n                        variant=\"link\"\n                        ouiaId=\"fact-modal-cancel-button\"\n                        onClick={ this.cancelFact }>\n                        Cancel\n                    </Button>\n                ] }\n            >\n                { this.renderModalBody() }\n            </Modal>\n        );\n    };\n}\n\nFactModal.propTypes = {\n    toggleFactModal: PropTypes.func,\n    factModalOpened: PropTypes.bool,\n    factName: PropTypes.string,\n    factValue: PropTypes.string,\n    factData: PropTypes.object,\n    isCategory: PropTypes.bool,\n    isSubFact: PropTypes.bool,\n    baselineData: PropTypes.object,\n    patchBaseline: PropTypes.func,\n    fetchBaselineData: PropTypes.func,\n    inlineError: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factModalOpened: state.editBaselineState.factModalOpened,\n        factName: state.editBaselineState.factName,\n        factValue: state.editBaselineState.factValue,\n        factData: state.editBaselineState.factData,\n        isCategory: state.editBaselineState.isCategory,\n        isSubFact: state.editBaselineState.isSubFact,\n        baselineData: state.editBaselineState.baselineData,\n        inlineError: state.editBaselineState.inlineError\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleFactModal: () => dispatch(editBaselineActions.toggleFactModal()),\n        patchBaseline: (baselineId, newBaselineBody) => dispatch(editBaselineActions.patchBaseline(baselineId, newBaselineBody)),\n        fetchBaselineData: (baselineUUID) => dispatch(editBaselineActions.fetchBaselineData(baselineUUID))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FactModal);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card, CardBody, Checkbox } from '@patternfly/react-core';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\nimport { AngleDownIcon, AngleRightIcon, ExclamationCircleIcon, UndoIcon } from '@patternfly/react-icons';\nimport { cellWidth } from '@patternfly/react-table';\n\nimport EditBaselineToolbar from '../EditBaselineToolbar/EditBaselineToolbar';\nimport ErrorAlert from '../../../ErrorAlert/ErrorAlert';\nimport FactModal from '../FactModal/FactModal';\nimport AddFactButton from '../AddFactButton/AddFactButton';\nimport editBaselineHelpers from './helpers';\nimport { EMPTY_BASELINE_MESSAGE, EMPTY_BASELINE_TITLE, FACT_ID, FACT_NAME, FACT_VALUE } from '../../../../constants';\nimport EmptyStateDisplay from '../../../EmptyStateDisplay/EmptyStateDisplay';\n\nclass EditBaseline extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modalOpened: false,\n            errorMessage: [ 'The baseline cannot be displayed at this time. Please retry and if',\n                'the problem persists contact your system administrator.',\n                ''\n            ],\n            loadingColumns: [\n                { title: 'Fact', transforms: [ cellWidth(40) ]},\n                { title: 'Value', transforms: [ cellWidth(45) ]},\n                { title: '', transforms: [ cellWidth(5) ]}\n            ]\n        };\n    }\n\n    retryBaselineFetch = () => {\n        const { clearErrorData } = this.props;\n\n        clearErrorData();\n        this.fetchBaselineId();\n    }\n\n    renderHeaderRow(baselinesWrite) {\n        return (\n            <tr\n                key='edit-baseline-table-header'\n                data-ouia-component-type='PF4/TableHeaderRow'\n                data-ouia-component-id='edit-baseline-table-header-row'>\n                { baselinesWrite ? <th className=\"sticky-header\"></th> : null }\n                <th className=\"edit-baseline-header sticky-header\"><div>Fact</div></th>\n                <th className=\"edit-baseline-header sticky-header\"><div>Value</div></th>\n                <th className=\"sticky-header\"></th>\n            </tr>\n        );\n    }\n\n    renderLoadingRows() {\n        const { loadingColumns } = this.state;\n\n        return <SkeletonTable\n            columns={ loadingColumns }\n            rowSize={ 8 }\n            onSelect={ true }\n            canSelectAll={ false }\n            isSelectable={ true }\n        />;\n    }\n\n    renderExpandableRowButton(factName) {\n        const { expandedRows } = this.props;\n        let expandIcon;\n\n        if (expandedRows.includes(factName)) {\n            expandIcon = <AngleDownIcon\n                className=\"pointer active-blue\"\n                data-ouia-component-type='PF4/Button'\n                data-ouia-component-id={ 'expand-category-button-' + factName }\n                onClick={ () => this.props.expandRow(factName) } />;\n        } else {\n            expandIcon = <AngleRightIcon\n                className=\"pointer\"\n                data-ouia-component-type='PF4/Button'\n                data-ouia-component-id={ 'expand-category-button-' + factName }\n                onClick={ () => this.props.expandRow(factName) } />;\n        }\n\n        return expandIcon;\n    }\n\n    onSelect = (isSelected, event) => {\n        const { editBaselineTableData, selectFact } = this.props;\n        let facts = [];\n        let factData;\n        let id = Number(event.target.name);\n\n        editBaselineTableData.forEach(function(fact) {\n            if (fact[FACT_ID] === id) {\n                factData = fact;\n            } else if (editBaselineHelpers.isCategory(fact)) {\n                editBaselineHelpers.baselineSubFacts(fact).forEach(function(subFact) {\n                    if (subFact[FACT_ID] === id) {\n                        factData = subFact;\n                    }\n                });\n            }\n        });\n\n        facts = [ factData[0] ];\n\n        if (editBaselineHelpers.isCategory(factData)) {\n            editBaselineHelpers.baselineSubFacts(factData).forEach(function(subFact) {\n                facts.push(subFact[FACT_ID]);\n            });\n        }\n\n        selectFact(facts, isSelected);\n    }\n\n    onBulkSelect = (isSelected) => {\n        const { editBaselineTableData, selectFact } = this.props;\n        let facts = [];\n\n        editBaselineTableData.forEach(function(fact) {\n            facts.push(fact[FACT_ID]);\n            if (editBaselineHelpers.isCategory(fact)) {\n                editBaselineHelpers.baselineSubFacts(fact).forEach(function(subFact) {\n                    facts.push(subFact[FACT_ID]);\n                });\n            }\n        });\n\n        selectFact(facts, isSelected);\n    }\n\n    renderCheckbox = (fact) => {\n        let id;\n\n        if (editBaselineHelpers.isCategory(fact)) {\n            id = 'category-' + fact[FACT_ID];\n        } else if (typeof(fact[FACT_VALUE]) === 'string') {\n            id = 'fact-' + fact[FACT_ID];\n        }\n\n        return (\n            <Checkbox\n                data-ouia-component-type='PF4/Checkbox'\n                data-ouia-component-id={ 'checkbox-' + fact[FACT_NAME] }\n                isChecked={ fact.selected }\n                onChange={ this.onSelect }\n                id={ id }\n                name={ fact[FACT_ID] }\n            />\n        );\n    }\n\n    renderRowData(fact, baselinesWrite) {\n        const { expandedRows, baselineData } = this.props;\n        let row = [];\n        let rows = [];\n\n        let factData = baselineData.baseline_facts.find((baselineFact) => {\n            if (baselineFact.name === fact[FACT_NAME]) {\n                if (baselineFact.value && fact[FACT_VALUE] === baselineFact.value) {\n                    return fact;\n                } else if (baselineFact.values && Array.isArray(fact[FACT_VALUE])) {\n                    return fact;\n                }\n            }\n        });\n\n        baselinesWrite\n            ? row.push(<td\n                className={ expandedRows.includes(fact[FACT_NAME]) && Array.isArray(fact[2])\n                    ? 'pf-c-table__check nested-fact'\n                    : 'pf-c-table__check' }\n            >\n                { this.renderCheckbox(fact) }\n            </td>)\n            : null;\n\n        if (editBaselineHelpers.isCategory(fact)) {\n            row.push(<td>\n                { this.renderExpandableRowButton(fact[FACT_NAME]) } { fact[FACT_NAME] }</td>);\n            row.push(<td></td>);\n            row.push(editBaselineHelpers.renderKebab({ factName: fact[FACT_NAME], factData, isCategory: true, baselinesWrite }));\n            rows.push(<tr\n                data-ouia-component-type='PF4/TableRow'\n                data-ouia-component-id={ 'edit-baseline-table-row-' + factData?.name }\n                key={ fact[FACT_NAME] }>{ row }</tr>);\n\n            if (expandedRows.includes(fact[FACT_NAME])) {\n                editBaselineHelpers.baselineSubFacts(fact).forEach((subFact) => {\n                    row = [];\n                    baselinesWrite\n                        ? row.push(<td className='pf-c-table__check nested-fact'>{ this.renderCheckbox(subFact) }</td>)\n                        : null;\n                    row.push(<td>\n                        <p className=\"child-row\">{ subFact[FACT_NAME] }</p>\n                    </td>);\n                    row.push(<td>{ subFact[FACT_VALUE] }</td>);\n                    row.push(editBaselineHelpers.renderKebab({\n                        factName: subFact[FACT_NAME],\n                        factValue: subFact[FACT_VALUE],\n                        factData,\n                        isSubFact: true,\n                        baselinesWrite\n                    }));\n                    rows.push(<tr\n                        data-ouia-component-type='PF4/TableRow'\n                        data-ouia-component-id={ 'edit-baseline-table-row-' + subFact[FACT_NAME] }\n                        category={ factData?.name }\n                        key={ subFact[FACT_NAME] }>{ row }</tr>);\n                });\n            }\n        } else {\n            row.push(<td>{ fact[FACT_NAME] }</td>);\n            row.push(<td>{ fact[FACT_VALUE] }</td>);\n            row.push(editBaselineHelpers.renderKebab({ factName: fact[FACT_NAME], factValue: fact[FACT_VALUE], factData, baselinesWrite }));\n            rows.push(<tr\n                data-ouia-component-type='PF4/TableRow'\n                data-ouia-component-id={ 'edit-baseline-table-row-' + factData?.name }\n                key={ fact[FACT_NAME] }>{ row }</tr>);\n        }\n\n        return rows;\n    }\n\n    renderRows(baselinesWrite) {\n        const { editBaselineTableData } = this.props;\n        let facts = editBaselineTableData;\n        let rows = [];\n        let rowData = [];\n\n        if (facts.length !== 0) {\n            for (let i = 0; i < facts.length; i += 1) {\n                rowData = this.renderRowData(facts[i], baselinesWrite);\n                rows.push(rowData);\n            }\n        }\n\n        return rows;\n    }\n\n    renderEmptyState(permissions) {\n        const { editBaselineEmptyState, editBaselineError } = this.props;\n        const { errorMessage } = this.state;\n\n        if (editBaselineError.status !== 200 && editBaselineError.status !== undefined) {\n            return <EmptyStateDisplay\n                icon={ ExclamationCircleIcon }\n                color='#c9190b'\n                title={ 'Baseline cannot be displayed' }\n                text={ errorMessage }\n                error={ 'Error ' + editBaselineError.status + ': ' + editBaselineError.detail }\n                button={ <a onClick={ () => this.retryBaselineFetch() }>\n                    <UndoIcon className='reload-button' />\n                        Retry\n                </a> }\n            />;\n        } else {\n            return <EmptyStateDisplay\n                title={ EMPTY_BASELINE_TITLE }\n                text={ EMPTY_BASELINE_MESSAGE }\n                button={ <AddFactButton\n                    permissions={ permissions }\n                    editBaselineEmptyState={ editBaselineEmptyState }\n                /> }\n            />;\n        }\n    }\n\n    renderTable({ baselinesWrite }) {\n        return (\n            <table className=\"pf-c-table ins-c-table pf-m-grid-md ins-entity-table edit-baseline-table\">\n                <thead>\n                    { this.renderHeaderRow(baselinesWrite) }\n                </thead>\n                <tbody key='edit-baseline-table'>\n                    { this.renderRows(baselinesWrite) }\n                </tbody>\n            </table>\n        );\n    }\n\n    render() {\n        const { baselineData, baselineDataLoading, editBaselineTableData, exportToCSV, exportToJSON, factModalOpened,\n            editBaselineEmptyState, editBaselineError, clearErrorData, permissions } = this.props;\n        let selected = editBaselineHelpers.findSelected(editBaselineTableData);\n\n        return (\n            <React.Fragment>\n                { factModalOpened\n                    ? <FactModal />\n                    : <div></div>\n                }\n                <ErrorAlert\n                    error={ !editBaselineEmptyState && editBaselineError.status ? editBaselineError : {} }\n                    onClose={ clearErrorData }\n                />\n                { editBaselineEmptyState\n                    ? this.renderEmptyState(permissions)\n                    : <Card className='pf-t-light pf-m-opaque-100'>\n                        <CardBody>\n                            <EditBaselineToolbar\n                                selected={ selected }\n                                onBulkSelect={ this.onBulkSelect }\n                                isDisabled={ editBaselineTableData.length === 0 || !permissions.baselinesWrite }\n                                totalFacts={ editBaselineHelpers.findFactCount(editBaselineTableData) }\n                                baselineData={ baselineData }\n                                exportToCSV={ exportToCSV }\n                                exportToJSON={ exportToJSON }\n                                tableData={ editBaselineTableData }\n                                permissions={ permissions }\n                            />\n                            { baselineDataLoading\n                                ? this.renderLoadingRows()\n                                : this.renderTable(permissions)\n                            }\n                        </CardBody>\n                    </Card>\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nEditBaseline.propTypes = {\n    history: PropTypes.object,\n    match: PropTypes.any,\n    baselineData: PropTypes.object,\n    baselineDataLoading: PropTypes.bool,\n    factModalOpened: PropTypes.bool,\n    editBaselineTableData: PropTypes.array,\n    expandRow: PropTypes.func,\n    expandedRows: PropTypes.array,\n    selectFact: PropTypes.func,\n    clearErrorData: PropTypes.func,\n    editBaselineError: PropTypes.object,\n    editBaselineEmptyState: PropTypes.bool,\n    exportToCSV: PropTypes.func,\n    exportToJSON: PropTypes.func,\n    permissions: PropTypes.object\n};\n\nexport default EditBaseline;\n","/*eslint-disable camelcase*/\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { connect } from 'react-redux';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport { LockIcon } from '@patternfly/react-icons';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\n\nimport selectedReducer from '../../store/reducers';\nimport { compareActions } from '../modules';\nimport systemsTableActions from './actions';\nimport EmptyStateDisplay from '../EmptyStateDisplay/EmptyStateDisplay';\nimport helpers from '../helpers';\nimport isEqual from 'lodash/isEqual';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setSelectedSystemIds: (systemIds) => dispatch(compareActions.setSelectedSystemIds(systemIds)),\n        driftClearFilters: () => dispatch(systemsTableActions.clearAllFilters()),\n        selectEntities: (toSelect) => dispatch({ type: 'SELECT_ENTITY', payload: toSelect })\n    };\n}\n\nexport const SystemsTable = connect(null, mapDispatchToProps)(({\n    baselineId,\n    setSelectedSystemIds,\n    driftClearFilters,\n    createBaselineModal,\n    historicalProfiles,\n    hasMultiSelect,\n    selectHistoricProfiles,\n    permissions,\n    selectEntities,\n    selectVariant,\n    systemNotificationIds,\n    toolbarButton,\n    isAddSystemNotifications,\n    registry,\n    onSystemSelect,\n    selectSystemsToAdd,\n    deleteNotifications,\n    systemColumns\n}) => {\n    const tagsFilter = useSelector(({ globalFilterState }) => globalFilterState?.tagsFilter);\n    const workloadsFilter = useSelector(({ globalFilterState }) => globalFilterState?.workloadsFilter);\n    const sidsFilter = useSelector(({ globalFilterState }) => globalFilterState?.sidsFilter);\n    const entities = useSelector(({ entities }) => entities);\n    const selected = useSelector(({ entities }) => entities?.selectedSystemIds || []);\n    const getEntities = useRef(() => undefined);\n    const selectedRef = useRef([]);\n\n    const onSelect = (event) => {\n        let toSelect = [];\n        switch (event) {\n            case 'none': {\n                toSelect = { id: 0, selected: false, bulk: true };\n\n                break;\n            }\n\n            case 'page': {\n                toSelect = { id: 0, selected: true };\n\n                break;\n            }\n        }\n\n        selectEntities(toSelect);\n    };\n\n    const buildTableProps = () => {\n        if (permissions.notificationsWrite) {\n            return {\n                canSelectAll: false,\n                selectVariant,\n                ouiaId: 'systems-table',\n                isStickyHeader: true\n            };\n        } else {\n            return {\n                canSelectAll: false,\n                selectVariant,\n                ouiaId: 'systems-table',\n                onSelect: false,\n                isStickyHeader: true\n            };\n        }\n    };\n\n    const buildDeleteNotificationsKebab = () => {\n        return <div\n            className='pointer'\n            key=\"delete-baseline-notification\"\n            onClick={ () => deleteNotifications(entities?.selectedSystemIds) }\n            isDisabled={ !entities?.selectedSystemIds?.length }\n        >\n            { entities?.selectedSystemIds?.length > 1 ? 'Delete associated systems' : 'Delete associated system' }\n        </div>;\n    };\n\n    const buildActionsConfig = () => {\n        if (permissions.notificationsWrite) {\n            return [\n                toolbarButton,\n                buildDeleteNotificationsKebab()\n            ];\n        } else {\n            return [];\n        }\n    };\n\n    useEffect(() => {\n        if (!isEqual(selectedRef.current, selected)) {\n            selectedRef.current = [ ...selected ];\n            onSystemSelect(selected);\n        }\n    });\n\n    return (\n        permissions.inventoryRead ? (\n            <InventoryTable\n                columns={ systemColumns }\n                onLoad={ ({ mergeWithEntities, INVENTORY_ACTION_TYPES, api }) => {\n                    getEntities.current = api?.getEntities;\n                    driftClearFilters();\n                    registry.register(mergeWithEntities(\n                        selectedReducer(\n                            INVENTORY_ACTION_TYPES, baselineId, createBaselineModal, historicalProfiles,\n                            hasMultiSelect, undefined, isAddSystemNotifications, selectHistoricProfiles,\n                            systemNotificationIds, selectSystemsToAdd, deleteNotifications, permissions\n                        )\n                    ));\n                    setSelectedSystemIds(selected);\n                } }\n                showTags\n                noDetail\n                customFilters={{\n                    tags: tagsFilter,\n                    filter: {\n                        system_profile: {\n                            ...workloadsFilter?.SAP?.isSelected && { sap_system: true },\n                            ...workloadsFilter?.['Ansible Automation Platform']?.isSelected\n                                && { ansible: { controller_version: true }},\n                            ...workloadsFilter?.['Microsoft SQL']?.isSelected\n                                && { mssql: { version: 'not_nil' }},\n                            ...sidsFilter?.length > 0 && { sap_sids: sidsFilter }\n                        }\n                    }\n                }}\n                tableProps={ buildTableProps() }\n                getEntities={ async (_items, config) => {\n                    const currIds = (systemNotificationIds || [])\n                    .slice((config.page - 1) * config.per_page, config.page * config.per_page);\n                    const data = await getEntities.current?.(\n                        currIds,\n                        {\n                            hasItems: true\n                        },\n                        true\n                    );\n                    return {\n                        ...data,\n                        results: data.results.map((system) => ({\n                            ...system,\n                            ...currIds.find(({ uuid }) => uuid === system.id) || {}\n                        })),\n                        total: (systemNotificationIds || []).length,\n                        page: config.page,\n                        per_page: config.per_page\n                    };\n                } }\n                bulkSelect={ onSelect && {\n                    isDisabled: !hasMultiSelect || !permissions.notificationsWrite,\n                    count: entities?.selectedSystemIds ? entities.selectedSystemIds.length : 0,\n                    items: [{\n                        title: `Select none (0)`,\n                        onClick: () => {\n                            onSelect('none');\n                        }\n                    }, {\n                        title: `Select page (${ entities?.count || 0 })`,\n                        onClick: () => {\n                            onSelect('page');\n                        }\n                    }],\n                    onSelect: (value) => {\n                        value ? onSelect('page') : onSelect('none');\n                    },\n                    checked: entities?.selectedSystemIds\n                        ? helpers.findCheckedValue(entities?.total, entities?.selectedSystemIds.length)\n                        : null\n                } }\n                actionsConfig={{\n                    actions: buildActionsConfig()\n                }}\n            />\n        )\n            : <EmptyStateDisplay\n                icon={ LockIcon }\n                color='#6a6e73'\n                title={ 'You do not have access to the inventory' }\n                text={ [ 'Contact your organization administrator(s) for more information.' ] }\n            />\n    );\n});\n\nSystemsTable.propTypes = {\n    setSelectedSystemIds: PropTypes.func,\n    selectedSystemIds: PropTypes.array,\n    selectHistoricProfiles: PropTypes.func,\n    createBaselineModal: PropTypes.bool,\n    driftClearFilters: PropTypes.func,\n    historicalProfiles: PropTypes.array,\n    hasMultiSelect: PropTypes.bool,\n    selectedHSPIds: PropTypes.array,\n    permissions: PropTypes.object,\n    entities: PropTypes.object,\n    selectEntities: PropTypes.func,\n    selectVariant: PropTypes.string,\n    systemNotificationIds: PropTypes.array,\n    baselineId: PropTypes.string,\n    toolbarDropdown: PropTypes.array,\n    isAddSystemNotifications: PropTypes.bool,\n    registry: PropTypes.shape({\n        register: PropTypes.func\n    }),\n    onSystemSelect: PropTypes.func,\n    systemColumns: PropTypes.array\n};\n\nSystemsTable.defaultProps = {\n    selectedSystemIds: []\n};\n\nconst SystemsTableWithContext = (props) => {\n    const [ registry, setRegistry ] = useState();\n    const listener = useRef();\n\n    useEffect(() => {\n        listener.current = new MiddlewareListener();\n        setRegistry(() => new ReducerRegistry({}, [ listener.current.getMiddleware(), promiseMiddleware ]));\n    }, []);\n    return registry?.store ? <Provider store={ registry.store }>\n        <SystemsTable { ...props } registry={ registry } addNewListener={ (...args) => listener.current.addNew(...args) } />\n    </Provider> : null;\n};\n\nexport default SystemsTableWithContext;\n/*eslint-enable camelcase*/\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\n\nexport class DeleteNotificationModal extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    /*eslint-disable camelcase*/\n    deleteNotification = async () => {\n        const { baselineId, deleteNotifications, fetchSystems, systemsToDelete, toggleDeleteNotificationsModal } = this.props;\n\n        await deleteNotifications(baselineId, systemsToDelete);\n        fetchSystems(baselineId);\n        toggleDeleteNotificationsModal();\n    }\n    /*eslint-enable camelcase*/\n\n    render() {\n        const { deleteNotificationsModalOpened, systemsToDelete, toggleDeleteNotificationsModal } = this.props;\n\n        return (\n            <React.Fragment>\n                <Modal\n                    className=\"drift\"\n                    ouiaId='delete-baseline-notification-modal'\n                    variant={ ModalVariant.small }\n                    title={ systemsToDelete?.length === 1 ? 'Delete associated system' : 'Delete associated systems' }\n                    isOpen={ deleteNotificationsModalOpened }\n                    onClose={ () => toggleDeleteNotificationsModal() }\n                    actions = { [\n                        <Button\n                            key=\"confirm\"\n                            ouiaId='delete-baseline-notification-button'\n                            variant=\"danger\"\n                            onClick={ this.deleteNotification }\n                        >\n                            Delete\n                        </Button>,\n                        <Button\n                            key=\"cancel\"\n                            ouiaId='delete-baseline-notification-cancel-button'\n                            variant=\"link\"\n                            onClick={ () => toggleDeleteNotificationsModal() }\n                        >\n                        Cancel\n                        </Button>\n                    ] }\n                >\n                    You have selected { ' ' } { systemsToDelete?.length === 1 ? 'an associated system' : 'multiple associated systems' }\n                    { ' ' } to be deleted.\n                    <br></br>\n                    { <div className=\"md-padding-top\">Deleting an associated system cannot be undone.</div> }\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nDeleteNotificationModal.propTypes = {\n    baselineId: PropTypes.string,\n    deleteNotificationsModalOpened: PropTypes.bool,\n    deleteNotifications: PropTypes.func,\n    fetchSystems: PropTypes.func,\n    systemsToDelete: PropTypes.array,\n    toggleDeleteNotificationsModal: PropTypes.func\n};\n\nexport default DeleteNotificationModal;\n","import types from './types';\nimport api from '../../../../../api';\n\nfunction toggleDeleteNotificationsModal() {\n    return {\n        type: types.TOGGLE_DELETE_NOTIFICATION_MODAL\n    };\n}\n\nfunction setSystemsToDelete(systemIds) {\n    return {\n        type: types.SET_SYSTEMS_TO_DELETE,\n        payload: systemIds\n    };\n}\n\nfunction deleteNotifications(baselineId, systemIds) {\n    return {\n        type: types.DELETE_NOTIFICATIONS,\n        payload: api.deleteSystemNotifications(baselineId, systemIds)\n    };\n}\n\nfunction getNotifications(baselineId) {\n    return {\n        type: types.GET_NOTIFICATIONS,\n        payload: api.getBaselineNotification(baselineId)\n    };\n}\n\nfunction addNotifications(baselineId, systemsToAdd) {\n    return {\n        type: types.ADD_NOTIFICATIONS,\n        payload: api.addSystemNotification(baselineId, systemsToAdd)\n    };\n}\n\nexport default {\n    toggleDeleteNotificationsModal,\n    setSystemsToDelete,\n    deleteNotifications,\n    getNotifications,\n    addNotifications\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Bullseye, Button, Modal, ModalVariant, Spinner } from '@patternfly/react-core';\nimport NotificationsSystemsTable from '../../../SystemsTable/NotificationsSystemsTable';\nimport SystemsTable from '../../../SystemsTable/SystemsTable';\nimport DeleteNotificationModal from './DeleteNotificationModal/DeleteNotificationModal';\nimport { systemNotificationsActions } from './redux';\n\nexport class SystemNotification extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modalOpened: false,\n            systemsToAdd: []\n        };\n\n        this.toggleModal = () => {\n            const { setSelectedSystemIds } = this.props;\n            const { modalOpened } = this.state;\n\n            setSelectedSystemIds([]);\n            this.setState({ modalOpened: !modalOpened });\n        };\n    }\n\n    buildSystemColumns = (isAddSystemNotifications) => {\n        const { permissions } = this.props;\n        let columns = [\n            { key: 'display_name', props: { width: isAddSystemNotifications ? 20 : null }, title: 'Name' },\n            { key: 'tags', props: { width: isAddSystemNotifications ? 10 : null, isStatic: true }, title: 'Tags' },\n            { key: 'updated', props: { width: isAddSystemNotifications ? 10 : null }, title: 'Last seen' }\n        ];\n\n        if (permissions.notificationsWrite && !isAddSystemNotifications) {\n            columns.push({\n                key: 'system_notification',\n                title: '',\n                props: {\n                    isStatic: true\n                }\n            });\n        }\n\n        return columns;\n    };\n\n    deleteNotifications = async (systemIds) => {\n        const { setSystemsToDelete, toggleDeleteNotificationsModal } = this.props;\n\n        toggleDeleteNotificationsModal();\n        setSystemsToDelete(systemIds);\n    }\n\n    selectSystemsToAdd = (systemIds) => {\n        const { systemNotificationIds } = this.props;\n        let array = [ ...systemNotificationIds ];\n\n        const newIds = systemIds.filter((newId) => !array.some((existingId) => existingId === newId));\n\n        this.setState({ systemsToAdd: newIds });\n    }\n\n    addNotification = async () => {\n        const { systemsToAdd } = this.state;\n        const { addNotifications, baselineId } = this.props;\n\n        await addNotifications(baselineId, systemsToAdd);\n        this.setState({ systemsToAdd: []});\n\n        this.toggleModal();\n        this.fetchSystems(baselineId);\n    }\n\n    buildNotificationsButton = () => {\n        return <Button\n            key=\"add-baseline-notification\"\n            variant=\"primary\"\n            onClick={ this.toggleModal }\n            ouiaId=\"add-baseline-notification-button\"\n        >\n            Add associated system\n        </Button>;\n    }\n\n    fetchSystems = async (baselineId) => {\n        const { fetchBaselineData, getNotifications } = this.props;\n\n        getNotifications(baselineId);\n        fetchBaselineData(baselineId);\n    }\n\n    async componentDidMount() {\n        await this.fetchSystems(this.props.baselineId);\n    }\n\n    render() {\n        const { baselineId, baselineName, deleteNotifications, deleteNotificationsModalOpened, driftClearFilters, entities,\n            permissions, selectEntities, selectHistoricProfiles, setSelectedSystemIds, systemNotificationIds,\n            systemsToDelete, toggleDeleteNotificationsModal, systemNotificationLoaded } = this.props;\n        const { modalOpened } = this.state;\n\n        return (\n            <React.Fragment>\n                <DeleteNotificationModal\n                    baselineId={ baselineId }\n                    deleteNotifications={ deleteNotifications }\n                    deleteNotificationsModalOpened={ deleteNotificationsModalOpened }\n                    systemsToDelete={ systemsToDelete }\n                    toggleDeleteNotificationsModal={ toggleDeleteNotificationsModal }\n                    fetchSystems={ this.fetchSystems }\n                />\n                <Modal\n                    className=\"drift\"\n                    width='1200px'\n                    ouiaId='add-baseline-notification-modal'\n                    variant={ ModalVariant.medium }\n                    title={ 'Associate system with ' + baselineName }\n                    isOpen={ modalOpened }\n                    onClose={ this.toggleModal }\n                    actions = { [\n                        <Button\n                            key=\"confirm\"\n                            ouiaId='add-baseline-notification-button'\n                            variant=\"primary\"\n                            onClick={ this.addNotification }\n                        >\n                            Submit\n                        </Button>,\n                        <Button\n                            key=\"cancel\"\n                            ouiaId='add-baseline-notification-cancel-button'\n                            variant=\"link\"\n                            onClick={ this.toggleModal }\n                        >\n                            Cancel\n                        </Button>\n                    ] }\n                >\n                    <SystemsTable\n                        hasMultiSelect={ true }\n                        permissions={ permissions }\n                        entities={ entities }\n                        selectVariant='checkbox'\n                        systemNotificationIds={ systemNotificationIds }\n                        baselineId={ baselineId }\n                        isAddSystemNotifications={ true }\n                        driftClearFilters={ driftClearFilters }\n                        selectEntities={ selectEntities }\n                        selectHistoricProfiles={ selectHistoricProfiles }\n                        selectSystemsToAdd={ this.selectSystemsToAdd }\n                        selectedSystemIds={ entities?.selectedSystemIds || [] }\n                        systemColumns={ this.buildSystemColumns(true) }\n                    />\n                </Modal>\n                { systemNotificationLoaded ? <NotificationsSystemsTable\n                    hasMultiSelect={ true }\n                    permissions={ permissions }\n                    selectVariant='checkbox'\n                    systemNotificationIds={ systemNotificationIds }\n                    baselineId={ baselineId }\n                    toolbarButton={ this.buildNotificationsButton() }\n                    driftClearFilters={ driftClearFilters }\n                    selectEntities={ selectEntities }\n                    selectHistoricProfiles={ selectHistoricProfiles }\n                    onSystemSelect={ setSelectedSystemIds }\n                    deleteNotifications={ this.deleteNotifications }\n                    systemColumns={ this.buildSystemColumns() }\n                /> : <Bullseye><Spinner size=\"xl\"/></Bullseye> }\n            </React.Fragment>\n        );\n    }\n}\n\nSystemNotification.propTypes = {\n    addNotifications: PropTypes.func,\n    baselineId: PropTypes.string,\n    baselineName: PropTypes.string,\n    entities: PropTypes.object,\n    fetchBaselineData: PropTypes.func,\n    permissions: PropTypes.object,\n    selectHistoricProfiles: PropTypes.func,\n    setSelectedSystemIds: PropTypes.func,\n    driftClearFilters: PropTypes.func,\n    selectEntities: PropTypes.func,\n    toggleDeleteNotificationsModal: PropTypes.func,\n    setSystemsToDelete: PropTypes.func,\n    systemsToDelete: PropTypes.array,\n    deleteNotifications: PropTypes.func,\n    deleteNotificationsModalOpened: PropTypes.bool,\n    getNotifications: PropTypes.func,\n    setSystemsToAdd: PropTypes.func,\n    systemNotificationIds: PropTypes.array,\n    systemNotificationLoaded: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n    return {\n        deleteNotificationsModalOpened: state.systemNotificationsState.deleteNotificationsModalOpened,\n        systemNotificationIds: state.systemNotificationsState.systemNotificationIds,\n        systemNotificationLoaded: state.systemNotificationsState.systemNotificationLoaded,\n        systemsToDelete: state.systemNotificationsState.systemsToDelete\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addNotifications: (baselineId, systemsToAdd) => dispatch(systemNotificationsActions.addNotifications(baselineId, systemsToAdd)),\n        toggleDeleteNotificationsModal: () => dispatch(systemNotificationsActions.toggleDeleteNotificationsModal()),\n        setSystemsToDelete: (systemIds) => dispatch(systemNotificationsActions.setSystemsToDelete(systemIds)),\n        deleteNotifications: (baselineId, systemIds) => dispatch(systemNotificationsActions.deleteNotifications(baselineId, systemIds)),\n        getNotifications: (baselineId) => dispatch(systemNotificationsActions.getNotifications(baselineId)),\n        setSelectedSystemIds: (systemIds) => dispatch({ type: 'SET_SELECTED_SYSTEM_IDS', payload: systemIds })\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemNotification);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbHeading, Tab, Tabs } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport { EditAltIcon, LockIcon } from '@patternfly/react-icons';\nimport { cellWidth } from '@patternfly/react-table';\n\nimport EditBaselineNameModal from './EditBaselineNameModal/EditBaselineNameModal';\nimport EditBaseline from './EditBaseline/EditBaseline';\nimport SystemNotification from './SystemNotification/SystemNotification';\nimport { compareActions } from '../../modules';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { editBaselineActions } from './redux';\nimport systemsTableActions from '../../SystemsTable/actions';\nimport { historicProfilesActions } from '../../HistoricalProfilesPopover/redux';\nimport EmptyStateDisplay from '../../EmptyStateDisplay/EmptyStateDisplay';\nimport { PermissionContext } from '../../../App';\nimport NotificationDetails from '../../BaselinesTable/NotificationDetails/NotificationDetails';\n\nimport _ from 'lodash';\n\nexport class EditBaselinePage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modalOpened: false,\n            loadingColumns: [\n                { title: 'Fact', transforms: [ cellWidth(40) ]},\n                { title: 'Value', transforms: [ cellWidth(45) ]},\n                { title: '', transforms: [ cellWidth(5) ]}\n            ],\n            activeTab: 0,\n            error: {}\n        };\n\n        this.fetchBaselineId();\n        this.renderBreadcrumb = this.renderBreadcrumb.bind(this);\n        this.goToBaselinesList = this.goToBaselinesList.bind(this);\n\n        this.toggleEditNameModal = () => {\n            const { modalOpened } = this.state;\n            const { clearErrorData } = this.props;\n\n            this.setState({ modalOpened: !modalOpened });\n            clearErrorData();\n        };\n    }\n\n    async componentDidMount() {\n        const { match: { params }} = this.props;\n\n        await window.insights.chrome.auth.getUser();\n        await window.insights?.chrome?.appAction?.('baseline-view');\n        await window.insights?.chrome?.appObjectId(params.id);\n    }\n\n    componentDidUpdate(prevProps) {\n        const { baselineData, editBaselineError, notificationsSwitchError } = this.props;\n\n        if (baselineData) {\n            document.title = this.props.baselineData.display_name + ' - Baselines - Drift | Red Hat Insights';\n        }\n\n        if (prevProps.editBaselineError !== editBaselineError) {\n            this.setState({ error: editBaselineError });\n        }\n\n        if (prevProps.notificationsSwitchError !== notificationsSwitchError) {\n            this.setState({ error: notificationsSwitchError });\n        }\n    }\n\n    changeActiveTab = (event, tabIndex) => {\n        this.setState({ activeTab: tabIndex });\n    }\n\n    async fetchBaselineId() {\n        const { match: { params }, fetchBaselineData } = this.props;\n\n        await fetchBaselineData(params.id);\n    }\n\n    goToBaselinesList() {\n        const { clearBaselineData, fetchBaselines, history } = this.props;\n\n        clearBaselineData('CHECKBOX');\n        fetchBaselines('CHECKBOX');\n        history.push('/baselines');\n    }\n\n    retryBaselineFetch = () => {\n        const { clearErrorData } = this.props;\n\n        clearErrorData();\n        this.fetchBaselineId();\n    }\n\n    renderBreadcrumb(baselineData, baselinesRead) {\n        let breadcrumb;\n\n        /*eslint-disable camelcase*/\n        breadcrumb = <Breadcrumb ouiaId='edit-baseline-breadcrumb'>\n            <BreadcrumbItem>\n                <a onClick={ () => this.goToBaselinesList() }>\n                    Baselines\n                </a>\n            </BreadcrumbItem>\n            { baselineData && baselinesRead\n                ? <BreadcrumbHeading>\n                    { baselineData.display_name }\n                </BreadcrumbHeading>\n                : null\n            }\n        </Breadcrumb>;\n        /*eslint-enable camelcase*/\n\n        return breadcrumb;\n    }\n\n    renderPageTitle(baselineData, baselinesRead, baselinesWrite) {\n        let pageTitle;\n\n        if (baselinesRead) {\n            if (baselinesWrite) {\n                pageTitle = <React.Fragment>\n                    <span className='pf-c-title pf-m-2xl'>\n                        { !_.isEmpty(baselineData) ? baselineData.display_name : null }\n                    </span>\n                    <span>\n                        { <EditAltIcon\n                            className='pointer not-active edit-icon-margin'\n                            data-ouia-component-id='edit-baseline-name-button'\n                            data-ouia-component-type='PF4/Button'\n                            onClick={ () => this.toggleEditNameModal() } /> }\n                    </span>\n                </React.Fragment>;\n            } else {\n                pageTitle = <React.Fragment>{ !_.isEmpty(baselineData) ? baselineData.display_name : null }</React.Fragment>;\n            }\n        } else {\n            pageTitle = <React.Fragment>{ 'Baseline' }</React.Fragment>;\n        }\n\n        return pageTitle;\n    }\n\n    renderPageHeader = ({ baselinesRead, baselinesWrite, notificationsRead }) => {\n        const { modalOpened } = this.state;\n        const { baselineData, baselineDataLoading, notificationsSwitchError, inlineError,\n            toggleNotificationPending, toggleNotificationFulfilled, toggleNotificationRejected } = this.props;\n        let pageHeader;\n\n        if (baselineDataLoading) {\n            pageHeader = <PageHeader>\n                <div><Skeleton size={ SkeletonSize.lg } /></div>\n            </PageHeader>;\n        } else {\n            if (baselineData !== undefined) {\n                /*eslint-disable camelcase*/\n                pageHeader = <React.Fragment>\n                    <EditBaselineNameModal\n                        baselineData={ baselineData }\n                        modalOpened={ modalOpened }\n                        toggleEditNameModal={ this.toggleEditNameModal }\n                        error={ inlineError }\n                    />\n                    <PageHeader className={ notificationsRead ? 'bottom-padding-0' : '' }>\n                        { this.renderBreadcrumb(baselineData, baselinesRead) }\n                        <div id=\"edit-baseline-title\">\n                            { this.renderPageTitle(baselineData, baselinesRead, baselinesWrite) }\n                            <NotificationDetails\n                                classname='float-right'\n                                hasBadge={ false }\n                                hasLabel={ true }\n                                hasSwitch={ true }\n                                baselineData={{\n                                    id: baselineData.id,\n                                    display_name: baselineData.display_name,\n                                    associated_systems: baselineData.mapped_system_count,\n                                    notifications_enabled: baselineData.notifications_enabled\n                                }}\n                                notificationsSwitchError={ notificationsSwitchError }\n                                toggleNotificationPending={ toggleNotificationPending }\n                                toggleNotificationFulfilled={ toggleNotificationFulfilled }\n                                toggleNotificationRejected={ toggleNotificationRejected }\n                            />\n                        </div>\n                        { notificationsRead\n                            ? this.renderTabs()\n                            : null\n                        }\n                    </PageHeader>\n                </React.Fragment>;\n                /*eslint-enable camelcase*/\n            } else {\n                pageHeader = <PageHeader>\n                    { this.renderBreadcrumb() }\n                    <PageHeaderTitle title='Baseline' />\n                </PageHeader>;\n            }\n        }\n\n        return pageHeader;\n    }\n\n    renderTabs() {\n        const { activeTab } = this.state;\n\n        return <div>\n            <Tabs\n                activeKey={ activeTab }\n                onSelect={ this.changeActiveTab }\n            >\n                <Tab\n                    eventKey={ 0 }\n                    title=\"Facts\"\n                    id=\"baseline-tab\"\n                    data-ouia-component-id=\"baseline-tab-button\"\n                >\n                </Tab>\n                <Tab\n                    eventKey={ 1 }\n                    title=\"Associated systems\"\n                    id=\"system-notifications-tab\"\n                    data-ouia-component-id=\"\"\n                >\n                </Tab>\n            </Tabs>\n        </div>;\n    }\n\n    renderMain(permissions) {\n        const { baselineData, baselineDataLoading, clearErrorData, driftClearFilters, editBaselineEmptyState, editBaselineError,\n            editBaselineTableData, entities, expandRow, expandedRows, exportToCSV, exportToJSON, factModalOpened, fetchBaselineData,\n            selectFact, match: { params }, selectEntities, selectHistoricProfiles, setSelectedSystemIds } = this.props;\n        const { activeTab } = this.state;\n        let body;\n\n        if (activeTab === 0) {\n            body = <EditBaseline\n                baselineData={ baselineData }\n                baselineDataLoading={ baselineDataLoading }\n                clearErrorData={ clearErrorData }\n                editBaselineEmptyState={ editBaselineEmptyState }\n                editBaselineError={ editBaselineError }\n                notificationsSwitchError\n                editBaselineTableData={ editBaselineTableData }\n                expandRow={ expandRow }\n                expandedRows={ expandedRows }\n                exportToCSV={ exportToCSV }\n                exportToJSON={ exportToJSON }\n                factModalOpened={ factModalOpened }\n                permissions={ permissions }\n                history={ history }\n                selectFact={ selectFact }\n            />;\n        } else {\n            body = <SystemNotification\n                baselineId={ params.id }\n                baselineName={ baselineData?.display_name }\n                permissions={ permissions }\n                entities={ entities }\n                driftClearFilters={ driftClearFilters }\n                fetchBaselineData={ fetchBaselineData }\n                selectEntities={ selectEntities }\n                selectHistoricProfiles={ selectHistoricProfiles }\n                setSelectedSystemIds={ setSelectedSystemIds }\n            />;\n        }\n\n        return body;\n    }\n\n    /*eslint-disable*/\n    render() {\n        return (\n            <PermissionContext.Consumer>\n                { value =>\n                    <React.Fragment>\n                        { this.renderPageHeader(value.permissions) }\n                        <Main>\n                            { value.permissions.baselinesRead === false\n                                ? <EmptyStateDisplay\n                                    icon={ LockIcon }\n                                    color='#6a6e73'\n                                    title={ 'You do not have access to view this Baseline' }\n                                    text={ [ 'Contact your organization administrator(s) for more information.' ] }\n                                />\n                                : this.renderMain(value.permissions)\n                            }\n                        </Main>\n                    </React.Fragment>\n                }\n            </PermissionContext.Consumer>\n        );\n    }\n}\n/*eslint-enable*/\n\nEditBaselinePage.propTypes = {\n    history: PropTypes.object,\n    match: PropTypes.any,\n    clearBaselineData: PropTypes.func,\n    baselineData: PropTypes.object,\n    baselineDataLoading: PropTypes.bool,\n    fetchBaselineData: PropTypes.func,\n    factModalOpened: PropTypes.bool,\n    editBaselineTableData: PropTypes.array,\n    expandRow: PropTypes.func,\n    expandedRows: PropTypes.array,\n    selectFact: PropTypes.func,\n    clearErrorData: PropTypes.func,\n    editBaselineError: PropTypes.object,\n    notificationsSwitchError: PropTypes.object,\n    inlineError: PropTypes.object,\n    editBaselineEmptyState: PropTypes.bool,\n    exportToCSV: PropTypes.func,\n    exportToJSON: PropTypes.func,\n    fetchBaselines: PropTypes.func,\n    entities: PropTypes.object,\n    selectHistoricProfiles: PropTypes.func,\n    setSelectedSystemIds: PropTypes.func,\n    driftClearFilters: PropTypes.func,\n    selectEntities: PropTypes.func,\n    toggleNotificationPending: PropTypes.func,\n    toggleNotificationFulfilled: PropTypes.func,\n    toggleNotificationRejected: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselineData: state.editBaselineState.baselineData,\n        baselineDataLoading: state.editBaselineState.baselineDataLoading,\n        factModalOpened: state.editBaselineState.factModalOpened,\n        editBaselineTableData: state.editBaselineState.editBaselineTableData,\n        expandedRows: state.editBaselineState.expandedRows,\n        editBaselineError: state.editBaselineState.editBaselineError,\n        notificationsSwitchError: state.editBaselineState.notificationsSwitchError,\n        editBaselineEmptyState: state.editBaselineState.editBaselineEmptyState,\n        inlineError: state.editBaselineState.inlineError,\n        entities: state.entities\n    };\n}\n\n/*eslint-disable camelcase*/\nfunction mapDispatchToProps(dispatch) {\n    return {\n        clearBaselineData: (tableId) => dispatch(baselinesTableActions.clearBaselineData(tableId)),\n        expandRow: (factName) => dispatch(editBaselineActions.expandRow(factName)),\n        fetchBaselineData: (baselineUUID) => dispatch(editBaselineActions.fetchBaselineData(baselineUUID)),\n        selectFact: (facts, isSelected) => dispatch(editBaselineActions.selectFact(facts, isSelected)),\n        clearErrorData: () => dispatch(editBaselineActions.clearErrorData()),\n        exportToCSV: (exportData, baselineRowData)=> {\n            dispatch(editBaselineActions.exportToCSV(exportData, baselineRowData));\n        },\n        exportToJSON: (exportData)=> {\n            dispatch(editBaselineActions.exportToJSON(exportData));\n        },\n        fetchBaselines: (tableId, params) => dispatch(baselinesTableActions.fetchBaselines(tableId, params)),\n        selectHistoricProfiles: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfiles(historicProfileIds)),\n        setSelectedSystemIds: (systemIds) => dispatch(compareActions.setSelectedSystemIds(systemIds)),\n        driftClearFilters: () => dispatch(systemsTableActions.clearAllFilters()),\n        selectEntities: (toSelect) => dispatch({ type: 'SELECT_ENTITY', payload: toSelect }),\n        toggleNotificationPending: () => dispatch(editBaselineActions.toggleNotificationPending()),\n        toggleNotificationFulfilled: (data) => dispatch(editBaselineActions.toggleNotificationFulfilled(data)),\n        toggleNotificationRejected: (error, id, display_name) => {\n            dispatch(editBaselineActions.toggleNotificationRejected(error, id, display_name));\n        }\n    };\n}\n/*eslint-enable camelcase*/\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditBaselinePage));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\n\nexport class ErrorAlert extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    closeToast = (tableId) => {\n        const { onClose } = this.props;\n\n        if (tableId) {\n            onClose(tableId);\n        } else {\n            onClose();\n        }\n    }\n\n    render() {\n        const { addNotification, error, tableId } = this.props;\n\n        return (\n            <React.Fragment>\n                { error.status\n                    ? addNotification({\n                        variant: 'danger',\n                        title: 'Error',\n                        description: error.detail,\n                        dismissable: true\n                    })\n                    : null\n                }\n                { error.status ? this.closeToast(tableId) : null }\n            </React.Fragment>\n        );\n    }\n}\n\nErrorAlert.propTypes = {\n    error: PropTypes.object,\n    tableId: PropTypes.string,\n    onClose: PropTypes.func,\n    addNotification: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addNotification: (payload) => dispatch(addNotification(payload))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(ErrorAlert);\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n"],"names":["_a","component","props","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","useEffect","console","error","concat","__assign","assign","n","arguments","apply","this","BaseInvTable","history","useHistory","store","useStore","Cmp","className","Suspense","fallback","ScalprumComponent","appName","module","scope","ErrorComponent","ref","innerRef","propTypes","InvTable","defaultProps","Bullseye","Spinner","size","EditBaselineNameModal","cancelModal","toggleEditNameModal","baselineData","updateBaselineName","display_name","checkKeyPress","event","key","preventDefault","confirmModal","state","baselineName","value","setState","bind","patchBaseline","id","facts_patch","hasError","ValidatedOptions","Form","FormGroup","label","isRequired","fieldId","helperTextInvalid","detail","validated","onKeyPress","TextInput","type","onChange","modalOpened","Modal","variant","ModalVariant","title","isOpen","onClose","actions","Button","ouiaId","onClick","renderModalBody","Component","PropTypes","connect","dispatch","baselineId","newBaselineBody","editBaselineActions","editBaselineTableData","categories","facts","forEach","fact","selected","editBaselineHelpers","subFact","EditBaselineKebab","isDisabled","kebabOpened","toggleKebab","toggleModalOpened","dropdownItems","categoryMessage","factMessage","deleteFactModalHelpers","DropdownItem","DeleteFactModal","toggleModal","Dropdown","style","float","toggle","KebabToggle","onToggle","isPlain","editBaselineState","AddFactButton","handleAddFact","setFactData","toggleFactModal","factName","factValue","editBaselineEmptyState","permissions","baselinesWrite","undefined","Tooltip","content","factData","EditBaselineToolbar","dropdownOpen","bulkSelectItems","onBulkSelect","exportToCSV","tableData","exportToJSON","totalFacts","Toolbar","ToolbarContent","ToolbarItem","BulkSelect","count","items","checked","helpers","onSelect","ToolbarGroup","ExportCSVButton","FactModal","cancelFact","renderCategoryCheckbox","renderFactInput","renderValueInput","isCategory","isAddFact","isEditFact","handleChange","handleNewName","handleNewValue","fetchBaselineData","newAPIBody","addFact","editFact","newFactData","editedFactData","Checkbox","name","isChecked","inlineError","placeholder","isSubFact","factModalOpened","baselineUUID","EditBaseline","retryBaselineFetch","clearErrorData","fetchBaselineId","isSelected","selectFact","Number","target","FACT_ID","push","renderCheckbox","FACT_VALUE","FACT_NAME","errorMessage","loadingColumns","transforms","cellWidth","SkeletonTable","columns","rowSize","canSelectAll","isSelectable","expandedRows","includes","AngleDownIcon","expandRow","AngleRightIcon","row","rows","baseline_facts","find","baselineFact","values","Array","isArray","renderExpandableRowButton","category","rowData","renderRowData","editBaselineError","status","EmptyStateDisplay","icon","ExclamationCircleIcon","color","text","button","UndoIcon","EMPTY_BASELINE_TITLE","EMPTY_BASELINE_MESSAGE","renderHeaderRow","renderRows","baselineDataLoading","ErrorAlert","renderEmptyState","Card","CardBody","renderLoadingRows","renderTable","match","SystemsTable","setSelectedSystemIds","systemIds","compareActions","driftClearFilters","systemsTableActions","selectEntities","toSelect","payload","createBaselineModal","historicalProfiles","hasMultiSelect","selectHistoricProfiles","selectVariant","systemNotificationIds","toolbarButton","isAddSystemNotifications","registry","onSystemSelect","selectSystemsToAdd","deleteNotifications","systemColumns","tagsFilter","useSelector","globalFilterState","workloadsFilter","sidsFilter","entities","selectedSystemIds","getEntities","useRef","selectedRef","bulk","isEqual","current","inventoryRead","InventoryTable","onLoad","mergeWithEntities","INVENTORY_ACTION_TYPES","api","register","selectedReducer","showTags","noDetail","customFilters","tags","filter","system_profile","SAP","sap_system","ansible","controller_version","mssql","version","sap_sids","tableProps","notificationsWrite","isStickyHeader","_items","config","currIds","slice","page","per_page","hasItems","data","results","map","system","uuid","total","bulkSelect","actionsConfig","LockIcon","selectedHSPIds","toolbarDropdown","useState","setRegistry","listener","MiddlewareListener","ReducerRegistry","getMiddleware","promiseMiddleware","Provider","addNewListener","addNew","DeleteNotificationModal","deleteNotification","fetchSystems","systemsToDelete","toggleDeleteNotificationsModal","deleteNotificationsModalOpened","types","systemsToAdd","SystemNotification","buildSystemColumns","width","isStatic","setSystemsToDelete","array","newIds","newId","some","existingId","addNotification","addNotifications","buildNotificationsButton","getNotifications","systemNotificationLoaded","NotificationsSystemsTable","setSystemsToAdd","systemNotificationsState","systemNotificationsActions","EditBaselinePage","changeActiveTab","tabIndex","activeTab","renderPageHeader","baselinesRead","notificationsRead","notificationsSwitchError","toggleNotificationPending","toggleNotificationFulfilled","toggleNotificationRejected","PageHeader","Skeleton","SkeletonSize","renderBreadcrumb","renderPageTitle","NotificationDetails","classname","hasBadge","hasLabel","hasSwitch","associated_systems","mapped_system_count","notifications_enabled","renderTabs","PageHeaderTitle","goToBaselinesList","params","window","insights","chrome","auth","getUser","appAction","appObjectId","prevProps","document","clearBaselineData","fetchBaselines","Breadcrumb","BreadcrumbItem","BreadcrumbHeading","EditAltIcon","Tabs","activeKey","Tab","eventKey","Main","renderMain","withRouter","tableId","baselinesTableActions","exportData","baselineRowData","historicProfileIds","historicProfilesActions","closeToast","description","dismissable","hasOwn","classNames","classes","arg","argType","inner","toString","join","exports","default","baseKeys","getTag","isArguments","isArrayLike","isBuffer","isPrototype","isTypedArray","splice","tag","baseIsEqual","other"],"sourceRoot":""}