{"version":3,"sources":["webpack:///./src/Utilities/asyncComponent.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/SmartComponents/AddSystemModal/redux/actions.js","webpack:///./src/SmartComponents/AddSystemModal/redux/types.js","webpack:///./src/SmartComponents/BaselinesPage/CreateBaselineModal/redux/types.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/DeleteFactModal/DeleteFactModal.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/FactKebab/FactKebab.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/EditBaseline/helpers.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/redux/types.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/redux/actions.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/redux/types.js","webpack:///./src/SmartComponents/BaselinesTable/redux/helpers.js","webpack:///./src/SmartComponents/BaselinesTable/redux/actions.js","webpack:///./src/SmartComponents/BaselinesTable/redux/baselinesTableReducer.js","webpack:///./src/SmartComponents/BaselinesTable/redux/index.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/types.js","webpack:///./src/SmartComponents/EmptyStateDisplay/EmptyStateDisplay.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/HistoricalProfilesCheckbox/HistoricalProfilesCheckbox.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/HistoricalProfilesRadio/HistoricalProfilesRadio.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/HistoricalProfilesPopover.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/redux/types.js","webpack:///./src/SmartComponents/SystemsTable/actions.js","webpack:///./src/SmartComponents/helpers.js","webpack:///./src/SmartComponents/modules/actions.js","webpack:///./src/SmartComponents/modules/types.js","webpack:///./src/Utilities/getBaseName.js","webpack:///./src/api.js","webpack:///./src/constants.js","webpack:///./src/SmartComponents/modules/helpers.js","webpack:///./src/SmartComponents/modules/reducers.js","webpack:///./src/SmartComponents/AddSystemModal/redux/helpers.js","webpack:///./src/SmartComponents/AddSystemModal/redux/addSystemModalReducer.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/filterDropdownReducer.js","webpack:///./src/SmartComponents/BaselinesPage/CreateBaselineModal/redux/reducers.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/redux/reducers.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/redux/reducers.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/redux/reducer.js","webpack:///./src/store/index.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/SystemKebab/SystemKebab.js","webpack:///./src/store/reducers.js","webpack:///./src/App.scss","webpack:////home/travis/build/RedHatInsights/drift-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/App.scss?75e2"],"names":["asyncComponent","importComponent","props","state","component","this","setState","C","Component","DriftPage","BaselinesPage","EditBaselinePage","InsightsRoute","title","rest","document","Route","propTypes","PropTypes","Routes","Switch","exact","path","Redirect","to","PermissionContext","createContext","withRouter","history","useHistory","dispatch","useDispatch","useState","hasCompareReadPermissions","undefined","hasBaselinesReadPermissions","hasBaselinesWritePermissions","hasHSPReadPermissions","hasInventoryReadPermissions","arePermissionsLoaded","setPermissions","hasPermission","permission","permissionList","forEach","permissions","useEffect","insights","chrome","init","identifyApp","on","event","domEvent","type","push","navId","window","getUserPermissions","driftPermissions","fullPermissions","concat","hasCompareRead","permissionsList","map","some","hasBaselinesRead","hasBaselinesWrite","hasHSPRead","hasInventoryRead","data","mapGlobalFilter","workloads","SID","tags","actions","Provider","value","compareRead","baselinesRead","baselinesWrite","hspRead","inventoryRead","NotificationsPortal","childProps","toggleAddSystemModal","types","selectActiveTab","newActiveTab","payload","setSelectedSystemIds","selectedSystemIds","handleSystemSelection","content","isSelected","handleBaselineSelection","handleHSPSelection","OPEN_ADD_SYSTEM_MODAL","SELECT_ACTIVE_TAB","SET_SELECTED_SYSTEMS_COMPARISON","HANDLE_SYSTEM_SELECTION","HANDLE_BASELINE_SELECTION","HANDLE_HSP_SELECTION","TOGGLE_CREATE_BASELINE_MODAL","CREATE_BASELINE","DeleteFactModal","deleteFacts","bind","deleteBaselineData","fetchBaselineData","baselineData","editBaselineTableData","apiBody","editBaselineHelpers","toggleModal","id","deleteFact","categoryMessage","factMessage","modalOpened","Modal","className","ouiaId","variant","ModalVariant","isOpen","onClose","Button","key","onClick","connect","editBaselineState","baselineId","newBaselineBody","editBaselineActions","baselineUUID","FactKebab","editFact","addFact","toggleModalOpened","toggleFactModal","setFactData","factName","factValue","fact","isCategory","isSubFact","factToDelete","name","newAPIBody","onKebabToggle","dropdownItems","DropdownItem","data-ouia-component-id","Dropdown","position","DropdownPosition","style","float","toggle","KebabToggle","data-ouia-compoent-type","onToggle","isPlain","factData","makeAPIPatch","originalAPIBody","originalParentFact","patchBody","Array","isArray","length","baseline_facts","makePatchBody","jiff","diff","subfacts","baselineSubFacts","renderKebab","hasWritePermissions","buildNewFactData","isParent","newFactData","subFacts","values","subFact","buildEditedFactData","originalFactName","originalValueName","originalSubFact","newSubFact","buildDeletedSubFact","newSubFacts","buildBaselineTableData","row","rows","subfact","makeDeleteFactsPatch","factsToDelete","unselectedFacts","index","selected","unselectedSubFacts","idx","patch","display_name","facts_patch","makeAddFactPatch","Object","prototype","hasOwnProperty","call","i","op","makeAddFactToCategoryPatch","oldFactData","newFactBody","makeEditFactPatch","editedFactBody","makeDeleteFactPatch","makeDeleteSubFactPatch","parentFact","toggleExpandedRow","expandedRows","newExpandedRows","includes","filter","slice","splice","isAllSelected","allSelected","findFactCount","totalFacts","findSelected","convertDataToCSV","lineDelimiter","result","rowData","subFactData","TOGGLE_DELETE_NOTIFICATION_MODAL","SET_SYSTEMS_TO_DELETE","DELETE_NOTIFICATIONS","GET_NOTIFICATIONS","ADD_NOTIFICATIONS","expandRow","api","clearEditBaselineData","patchBaseline","selectFact","ids","clearErrorData","exportToCSV","baselineRowData","exportType","exportData","EXPAND_PARENT_FACT","FETCH_BASELINE_DATA","CLEAR_EDIT_BASELINE_DATA","PATCH_BASELINE","DELETE_BASELINE_DATA","SET_FACT_DATA","TOGGLE_FACT_MODAL","SELECT_FACT","CLEAR_ERROR_DATA","EXPORT_BASELINE_DATA_TO_CSV","setSelected","baselineRows","selectedBaselineIds","baseline","find","fetchBaselines","tableId","fetchParams","params","order_by","orderBy","order_how","orderHow","limit","perPage","offset","page","search","buildBaselinesTable","dateTime","dateTimeStamp","updated","moment","fromNow","setBaselineArray","baselines","baselineArray","convertListToCSV","columnDelimiter","detail","revertBaselineFetch","selectBaseline","setSelectedBaselines","clearSelectedBaselines","clearBaselineData","deleteSelectedBaselines","deleteBaselinesAPIBody","initialState","loading","baselineTableData","IdToDelete","emptyState","baselineError","totalBaselines","tableReducer","response","errorObject","action","selectedBaselines","newBaselineTableData","baselinesReducerHelpers","meta","total_available","count","status","statusText","message","union","pop","item","helpers","baselinesTableRootReducer","combineReducers","checkboxTable","baselinesTableReducer","radioTable","comparisonTable","OPEN_FILTER_DROPDOWN","EmptyStateDisplay","appAction","button","color","error","icon","isSmall","text","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","size","EmptyStateBody","join","HistoricalProfilesCheckbox","findChecked","checked","profile","selectedHSPIds","entities","updateBadgeCount","captured_date","handleChange","onSelect","Checkbox","label","format","isChecked","onChange","aria-label","data-ouia-component-type","selectHistoricProfiles","selectSystem","HistoricalProfilesRadio","selectedHSP","onSingleSelect","prevProps","Radio","HistoricalProfilesPopover","fetchCompare","systemIds","referenceId","createDropdownArray","hasMultiSelect","historicalData","badgeCountFunc","onSelectFunc","onSingleSelectFunc","profiles","ExclamationCircleIcon","retryFetch","UndoIcon","badgeCount","hsp","renderBadge","Badge","isVisible","dropDownArray","renderLoadingRows","fetchData","system","newSelectedHSPIds","selectSingleHSP","updateColumns","systemName","system_id","fetchedData","system_name","shift","Skeleton","SkeletonSize","hasBadge","hasCompareButton","Popover","shouldClose","headerContent","bodyContent","maxHeight","overflowY","footerContent","HistoryIcon","fetchHistoricalData","dropdownDirection","historicProfilesState","baselinesTableState","systemsTableActions","addSystemModalActions","SELECT_HISTORIC_PROFILES","clearAllFilters","disableSystemTable","isDisabled","findCheckedValue","total","paginateData","selectedPage","itemsPerPage","paginatedData","Math","ceil","buildSystemsTableWithSelectedHSP","deselectHistoricalProfiles","display_selected_hsp","CloseIcon","downloadCSV","filename","csv","baselinesTableHelpers","Date","toISOString","match","encodeURI","link","createElement","setAttribute","dispatchEvent","MouseEvent","bubbles","cancelable","view","baselineIds","systemHSPIds","revertCompareData","clearComparison","clearComparisonFilters","toggleFactSort","currentSort","ASC","DESC","addStateFilter","filterData","toggleStateSort","newSort","filterByFact","handleFactFilter","clearAllFactFilters","updatePagination","pagination","updateReferenceId","setGlobalFilterTags","setGlobalFilterWorkloads","setGlobalFilterSIDs","SIDs","SELECT_ENTITY","FETCH_COMPARE","SET_SELECTED_SYSTEM_IDS","TOGGLE_FACT_SORT","ADD_STATE_FILTER","TOGGLE_STATE_SORT","FILTER_BY_FACT","HANDLE_FACT_FILTER","CLEAR_ALL_FACT_FILTERS","UPDATE_DRIFT_PAGINATION","CLEAR_COMPARISON","CLEAR_COMPARISON_FILTERS","EXPORT_TO_CSV","EXPAND_ROW","REVERT_COMPARE_DATA","TOGGLE_ACTIVE_SORT","UPDATE_REFERENCE_ID","SELECT_SINGLE_HSP","UPDATE_COLUMNS","SET_GLOBAL_FILTER_TAGS","SET_GLOBAL_FILTER_WORKLOADS","SET_GLOBAL_FILTER_SIDS","DRIFT_CLEAR_ALL_FILTERS","DISABLE_SYSTEM_TABLE","pathname","release","pathName","split","post","body","axios","DRIFT_API_ROOT","request","getBaselines","getParams","BASELINE_API_ROOT","getBaseline","system_ids","postSystemNotifications","postBaseline","deleteBaselines","HISTORICAL_PROFILES_API_ROOT","getCompare","historicalSystemProfileIds","baseline_ids","historical_system_profile_ids","reference_id","getBaselineList","getBaselineData","patchBaselineData","deleteBaselinesData","postNewBaseline","uuid","systemId","getHistoricalData","getBaselineNotification","getNotificationSystems","addSystemNotification","systems","deleteSystemNotifications","FACT_ID","FACT_NAME","FACT_VALUE","COLUMN_DELIMITER","LINE_DELIMITER","getStateSelected","stateFilters","stateFilter","getState","isStateSelected","setTooltip","comparisons","multivalues","tooltip","display","filterComparisons","factFilter","activeFactFilters","filteredComparisons","filteredMultivalueItems","filterMultiFacts","filterFact","multivalueItems","isFiltered","sortFacts","filteredFacts","factSort","stateSort","sort","a","b","toLowerCase","addRow","replace","factsPerPage","paginatedFacts","filteredSubfacts","newFilteredFacts","filteredValues","driftData","systemNames","mappedDates","last_updated","systemUpdates","date","convertFactsToCSV","updatedStateFilter","newStateFilters","indexOf","fullCompareData","filteredCompareData","sortedFilteredFacts","historicalProfiles","previousStateSystems","compareReducer","sortedFacts","newFactFilter","updatedStateFilters","newActiveFactFilters","reducerHelpers","facts","historical_system_profiles","globalFilterReducer","applyReducerHash","tagsFilter","workloadsFilter","sidsFilter","selectedContent","exists","newSelectedContent","ClockIcon","addSystemModalOpened","activeTab","selectedSystemContent","selectedBaselineContent","selectedHSPContent","addSystemModalReducer","filterDropdownReducer","filterDropdownOpened","createBaselineModalOpened","baselineDataLoading","createBaselineError","createBaselineModalReducer","editBaselineError","inlineError","factModalOpened","editBaselineEmptyState","editBaselineReducer","newEditBaselineTableData","factId","subFactId","historicProfilesReducer","deleteNotificationsModalOpened","systemsToDelete","systemNotificationIds","systemNotificationLoaded","systemNotificationsReducer","registry","middlewareListener","createMiddlewareListener","MiddlewareListener","middleware","getRegistry","promiseMiddleware","getMiddleware","register","compareState","addSystemModalState","createBaselineModalState","systemNotificationsState","notifications","globalFilterState","addNewListener","actionType","callback","addNew","SystemKebab","buildDropdownItems","deleteNotifications","kebabOpened","toggleKebab","INVENTORY_ACTIONS","createBaselineModal","hasHistoricalDropdown","isAddSystemNotifications","selectSystemsToAdd","newColumns","LOAD_ENTITIES_FULFILLED","columns","results","mergeArraysByKey","isStatic","width","findIndex","systemInfo","historical_profiles","disableSelection","column","system_notification","displaySelectedHSP","composed","activeFilters","nameColumn","unshift","newRows","selectedSystems","oneRow","Set","bulk","ServerIcon","loaded","___CSS_LOADER_EXPORT___","module","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","exports","update","hot","invalidate","oldLocals","accept","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/928.c9a440f2b8c56a27763b.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default function asyncComponent(importComponent) {\n    class AsyncComponent extends Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                component: null\n            };\n        }\n\n        async componentDidMount() {\n            const { default: component } = await importComponent();\n\n            this.setState({\n                component\n            });\n        }\n\n        render() {\n            const C = this.state.component;\n\n            return C ? <C { ...this.props } /> : <div>Loading...</div>;\n        }\n    }\n\n    return AsyncComponent;\n}\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport asyncComponent from './Utilities/asyncComponent';\n\nconst DriftPage = asyncComponent(() => import ('./SmartComponents/DriftPage/DriftPage'));\nconst BaselinesPage = asyncComponent(() => import ('./SmartComponents/BaselinesPage/BaselinesPage'));\nconst EditBaselinePage = asyncComponent(() => import ('./SmartComponents/BaselinesPage/EditBaselinePage/EditBaselinePage'));\n\nconst InsightsRoute = ({ component: Component, title, ...rest }) => {\n    title ? document.title = title : null;\n\n    return (<Route { ...rest } component={ Component } />);\n};\n\nInsightsRoute.propTypes = {\n    component: PropTypes.func,\n    title: PropTypes.string\n};\n\nexport const Routes = () => {\n    return (\n        <Switch>\n            <InsightsRoute\n                exact path='/baselines'\n                component={ BaselinesPage }\n                title='Baselines - Drift | Red Hat Insights'\n            />\n            <InsightsRoute path='/baselines/:id' component={ EditBaselinePage } />\n            <InsightsRoute\n                exact path='/'\n                component={ DriftPage }\n                title='Comparison - Drift | Red Hat Insights'\n            />\n            <Redirect to='/'/>\n        </Switch>\n    );\n};\n","import React, { createContext, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport actions from './SmartComponents/modules/actions';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\n\nimport { Routes } from './Routes';\nimport './App.scss';\n\nexport const PermissionContext = createContext();\n\nconst App = (props) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [{\n        hasCompareReadPermissions,\n        hasBaselinesReadPermissions,\n        hasBaselinesWritePermissions,\n        hasHSPReadPermissions,\n        hasInventoryReadPermissions,\n        arePermissionsLoaded\n    }, setPermissions ] = useState({\n        hasCompareReadPermissions: undefined,\n        hasBaselinesReadPermissions: undefined,\n        hasBaselinesWritePermissions: undefined,\n        hasHSPReadPermissions: undefined,\n        hasInventoryReadPermissions: undefined,\n        arePermissionsLoaded: false\n    });\n\n    const handlePermissionsUpdate = (hasCompareRead, hasBaselinesRead, hasBaselinesWrite, hasHSPRead, hasInventoryRead) => {\n        setPermissions({\n            hasCompareReadPermissions: hasCompareRead,\n            hasBaselinesReadPermissions: hasBaselinesRead,\n            hasBaselinesWritePermissions: hasBaselinesWrite,\n            hasHSPReadPermissions: hasHSPRead,\n            hasInventoryReadPermissions: hasInventoryRead,\n            arePermissionsLoaded: true\n        });\n    };\n\n    const hasPermission = (permission, permissionList) => {\n        let hasPermission = false;\n\n        permissionList.forEach((permissions) => {\n            if (permission === permissions) {\n                hasPermission = true;\n            }\n        });\n\n        return hasPermission;\n    };\n\n    useEffect(() => {\n        insights.chrome.init();\n        insights.chrome.identifyApp('drift');\n        insights.chrome.on('APP_NAVIGATION', event => {\n            if (event.domEvent !== undefined && event.domEvent.type === 'click') {\n                history.push(`/${event.navId}`);\n            }\n        });\n        (async () => {\n            const driftPermissions = await window.insights.chrome.getUserPermissions('drift');\n            const fullPermissions = driftPermissions.concat(await window.insights.chrome.getUserPermissions('inventory'));\n            const permissionsList = fullPermissions.map(permissions => permissions.permission);\n            handlePermissionsUpdate(\n                permissionsList.some((permission) => hasPermission(permission, [ 'drift:*:*', 'drift:comparisons:read', 'drift:*:read' ])),\n                permissionsList.some((permission) => hasPermission(permission, [ 'drift:*:*', 'drift:baselines:read', 'drift:*:read' ])),\n                permissionsList.some((permission) => hasPermission(permission, [ 'drift:*:*', 'drift:baselines:write', 'drift:*:write' ])),\n                permissionsList.some((permission) => hasPermission(\n                    permission, [ 'drift:*:*', 'drift-historical-system-profiles:read', 'drift:*:read' ])\n                ),\n                permissionsList.some((permission) => hasPermission(permission, [ 'inventory:*:*', 'inventory:*:read' ]))\n            );\n        })();\n\n        insights.chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n            const [ workloads, SID, tags ] = insights.chrome?.mapGlobalFilter?.(data, false, true) || [];\n            dispatch(actions.setGlobalFilterTags(tags));\n            dispatch(actions.setGlobalFilterWorkloads(workloads));\n            dispatch(actions.setGlobalFilterSIDs(SID));\n        });\n    }, []);\n\n    return (\n        arePermissionsLoaded\n            ? <PermissionContext.Provider\n                value={{\n                    permissions: {\n                        compareRead: hasCompareReadPermissions,\n                        baselinesRead: hasBaselinesReadPermissions,\n                        baselinesWrite: hasBaselinesWritePermissions,\n                        hspRead: hasHSPReadPermissions,\n                        inventoryRead: hasInventoryReadPermissions\n                    }\n                }}>\n                <NotificationsPortal />\n                <Routes childProps={ props } />\n            </PermissionContext.Provider>\n            : null\n    );\n};\n\nexport default withRouter (App);\n","import types from './types';\n\nfunction toggleAddSystemModal() {\n    return {\n        type: types.OPEN_ADD_SYSTEM_MODAL\n    };\n}\n\nfunction selectActiveTab(newActiveTab) {\n    return {\n        type: types.SELECT_ACTIVE_TAB,\n        payload: newActiveTab\n    };\n}\n\nfunction setSelectedSystemIds(selectedSystemIds) {\n    return {\n        type: types.SET_SELECTED_SYSTEMS_COMPARISON,\n        payload: selectedSystemIds\n    };\n}\n\nfunction handleSystemSelection(content, isSelected) {\n    return {\n        type: types.HANDLE_SYSTEM_SELECTION,\n        payload: { content, isSelected }\n    };\n}\n\nfunction handleBaselineSelection(content, isSelected) {\n    return {\n        type: types.HANDLE_BASELINE_SELECTION,\n        payload: { content, isSelected }\n    };\n}\n\nfunction handleHSPSelection(content) {\n    return {\n        type: types.HANDLE_HSP_SELECTION,\n        payload: content\n    };\n}\n\nexport default {\n    toggleAddSystemModal,\n    selectActiveTab,\n    setSelectedSystemIds,\n    handleSystemSelection,\n    handleBaselineSelection,\n    handleHSPSelection\n};\n","const OPEN_ADD_SYSTEM_MODAL = 'OPEN_ADD_SYSTEM_MODAL';\nconst SELECT_ACTIVE_TAB = 'SELECT_ACTIVE_TAB';\nconst SET_SELECTED_SYSTEMS_COMPARISON = 'SET_SELECTED_SYSTEMS_COMPARISON';\nconst HANDLE_SYSTEM_SELECTION = 'HANDLE_SYSTEM_SELECTION';\nconst HANDLE_BASELINE_SELECTION = 'HANDLE_BASELINE_SELECTION';\nconst HANDLE_HSP_SELECTION = 'HANDLE_HSP_SELECTION';\n\nexport default {\n    OPEN_ADD_SYSTEM_MODAL,\n    SELECT_ACTIVE_TAB,\n    SET_SELECTED_SYSTEMS_COMPARISON,\n    HANDLE_SYSTEM_SELECTION,\n    HANDLE_BASELINE_SELECTION,\n    HANDLE_HSP_SELECTION\n};\n","const TOGGLE_CREATE_BASELINE_MODAL = 'TOGGLE_CREATE_BASELINE_MODAL';\nconst CREATE_BASELINE = 'CREATE_BASELINE';\n\nexport default {\n    TOGGLE_CREATE_BASELINE_MODAL,\n    CREATE_BASELINE\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Modal, ModalVariant, Button } from '@patternfly/react-core';\n\nimport { editBaselineActions } from '../redux';\nimport editBaselineHelpers from '../EditBaseline/helpers';\n\nclass DeleteFactModal extends Component {\n    constructor(props) {\n        super(props);\n        this.deleteFacts = this.deleteFacts.bind(this);\n    }\n\n    async deleteFacts() {\n        const { deleteBaselineData, fetchBaselineData, baselineData, editBaselineTableData } = this.props;\n        let apiBody = editBaselineHelpers.makeDeleteFactsPatch(editBaselineTableData, baselineData);\n        this.props.toggleModal();\n\n        try {\n            await deleteBaselineData(baselineData.id, apiBody);\n            fetchBaselineData(baselineData.id);\n        } catch (e) {\n            // do nothing and let redux handle\n        }\n    }\n\n    render() {\n        const { deleteFact, categoryMessage, factMessage, modalOpened } = this.props;\n\n        return (\n            <Modal\n                className=\"drift\"\n                ouiaId='delete-fact-modal'\n                variant={ ModalVariant.small }\n                title=\"Delete facts\"\n                isOpen={ modalOpened }\n                onClose={ this.props.toggleModal }\n                actions = { [\n                    <Button\n                        key=\"confirm\"\n                        ouiaId='delete-fact-button'\n                        variant=\"danger\"\n                        onClick={ deleteFact ? deleteFact : this.deleteFacts }\n                    >\n                    Delete facts\n                    </Button>,\n                    <Button\n                        key=\"cancel\"\n                        ouiaId='delete-fact-cancel-button'\n                        variant=\"link\"\n                        onClick={ this.props.toggleModal }\n                    >\n                    Cancel\n                    </Button>\n                ] }\n            >\n                You have selected { ' ' }\n                { categoryMessage ? <b>{ categoryMessage }</b> : null }\n                { categoryMessage && factMessage ? ' and ' : null }\n                { factMessage ? <b>{ factMessage }</b> : null }\n                { ' ' } to be deleted.\n                <br></br>\n                { categoryMessage ?\n                    'Deleting a category will delete all facts within the category.'\n                    : null\n                }\n                { <div className=\"md-padding-top\">This cannot be undone.</div> }\n            </Modal>\n        );\n    }\n}\n\nDeleteFactModal.propTypes = {\n    modalOpened: PropTypes.bool,\n    deleteBaselineData: PropTypes.func,\n    fetchBaselineData: PropTypes.func,\n    editBaselineTableData: PropTypes.array,\n    baselineData: PropTypes.object,\n    toggleModal: PropTypes.func,\n    deleteFact: PropTypes.func,\n    categoryMessage: PropTypes.string,\n    factMessage: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselineData: state.editBaselineState.baselineData,\n        editBaselineTableData: state.editBaselineState.editBaselineTableData\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        deleteBaselineData: (baselineId, newBaselineBody) => dispatch(editBaselineActions.deleteBaselineData(baselineId, newBaselineBody)),\n        fetchBaselineData: (baselineUUID) => dispatch(editBaselineActions.fetchBaselineData(baselineUUID))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteFactModal);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Dropdown, DropdownItem, DropdownPosition, KebabToggle } from '@patternfly/react-core';\n\nimport { editBaselineActions } from '../redux';\nimport editBaselineHelpers from '../EditBaseline/helpers';\nimport DeleteFactModal from '../DeleteFactModal/DeleteFactModal';\n\nclass FactKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.editFact = this.editFact.bind(this);\n        this.deleteFact = this.deleteFact.bind(this);\n        this.addFact = this.addFact.bind(this);\n\n        this.state = {\n            isOpen: false,\n            modalOpened: false\n        };\n\n        this.toggleModalOpened = () => {\n            const { modalOpened } = this.state;\n\n            this.setState({\n                modalOpened: !modalOpened,\n                isOpen: false\n            });\n        };\n    }\n\n    onKebabToggle(isOpen) {\n        this.setState({\n            isOpen\n        });\n    }\n\n    editFact() {\n        const { toggleFactModal, setFactData, factName, factValue, fact, isCategory, isSubFact } = this.props;\n\n        toggleFactModal();\n        setFactData({\n            factName,\n            factValue,\n            fact,\n            isCategory,\n            isSubFact\n        });\n    }\n\n    async deleteFact() {\n        const { baselineData, deleteBaselineData, factName, factValue, fact, isSubFact, fetchBaselineData } = this.props;\n        let factToDelete = { name: factName, value: factValue };\n        let newAPIBody;\n\n        if (isSubFact === true) {\n            newAPIBody = editBaselineHelpers.makeDeleteSubFactPatch(factToDelete, fact, baselineData);\n        } else {\n            newAPIBody = editBaselineHelpers.makeDeleteFactPatch(factToDelete, baselineData, []);\n        }\n\n        this.toggleModalOpened();\n\n        try {\n            await deleteBaselineData(baselineData.id, newAPIBody);\n            fetchBaselineData(baselineData.id);\n        } catch (e) {\n            // do nothing and let redux handle\n        }\n\n        this.onKebabToggle(false);\n    }\n\n    addFact() {\n        const { toggleFactModal, setFactData, fact, isCategory } = this.props;\n\n        toggleFactModal();\n        setFactData({\n            factName: '',\n            factValue: '',\n            fact,\n            isSubFact: isCategory\n        });\n    }\n\n    render() {\n        const { isOpen, modalOpened } = this.state;\n        const { isCategory, factName } = this.props;\n        const dropdownItems = [];\n\n        if (isCategory === true) {\n            dropdownItems.push(\n                <DropdownItem\n                    key=\"add fact\"\n                    data-ouia-component-id={ 'add-subfact-dropdown-item-' + factName }\n                    component=\"button\"\n                    onClick={ this.addFact }>\n                    Add sub fact\n                </DropdownItem>\n            );\n        }\n\n        dropdownItems.push(\n            <DropdownItem\n                key=\"edit\"\n                component=\"button\"\n                data-ouia-component-id={ 'edit-fact-dropdown-item-' + factName }\n                onClick={ this.editFact }>\n                { isCategory ? 'Edit category' : 'Edit fact' }\n            </DropdownItem>,\n            <DropdownItem\n                key=\"delete\"\n                component=\"button\"\n                data-ouia-component-id={ 'delete-fact-dropdown-item-' + factName }\n                onClick={ this.toggleModalOpened }>\n                { isCategory ? 'Delete category' : 'Delete fact' }\n            </DropdownItem>\n        );\n\n        return (\n            <React.Fragment>\n                { modalOpened ? <DeleteFactModal\n                    toggleModal={ this.toggleModalOpened.bind(this) }\n                    deleteFact={ this.deleteFact.bind(this) }\n                    isCategory={ isCategory }\n                    modalOpened={ modalOpened }\n                    categoryMessage={ isCategory ? '1 category' : null }\n                    factMessage={ isCategory ? null : '1 fact' }\n                /> : null }\n                <Dropdown\n                    position={ DropdownPosition.right }\n                    style={{ float: 'right' }}\n                    className={ 'baseline-fact-kebab' }\n                    ouiaId={ 'fact-dropdown-' + factName }\n                    toggle={ <KebabToggle\n                        data-ouia-component-id={ 'fact-dropdown-toggle-' + factName }\n                        data-ouia-compoent-type='PF4/DropdownToggle'\n                        onToggle={ (isOpen) => this.onKebabToggle(isOpen) } /> }\n                    isOpen={ isOpen }\n                    dropdownItems={ dropdownItems }\n                    isPlain\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nFactKebab.propTypes = {\n    factName: PropTypes.string,\n    factValue: PropTypes.string,\n    fact: PropTypes.object,\n    isCategory: PropTypes.bool,\n    isSubFact: PropTypes.bool,\n    toggleFactModal: PropTypes.func,\n    setFactData: PropTypes.func,\n    baselineData: PropTypes.object,\n    deleteBaselineData: PropTypes.func,\n    fetchBaselineData: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselineData: state.editBaselineState.baselineData\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleFactModal: () => dispatch(editBaselineActions.toggleFactModal()),\n        setFactData: (factData) => dispatch(editBaselineActions.setFactData(factData)),\n        deleteBaselineData: (baselineId, newAPIBody) => dispatch(editBaselineActions.deleteBaselineData(baselineId, newAPIBody)),\n        fetchBaselineData: (baselineUUID) => dispatch(editBaselineActions.fetchBaselineData(baselineUUID))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FactKebab);\n","import React from 'react';\nimport jiff from 'jiff';\nimport FactKebab from '../FactKebab/FactKebab';\n\n/*eslint-disable react/prop-types*/\nfunction renderKebab({ factName, factValue, factData, isCategory, isSubFact, hasWritePermissions } = {}) {\n    return (\n        hasWritePermissions\n            ? <td>\n                <FactKebab\n                    factName={ factName }\n                    factValue={ factValue }\n                    fact={ factData }\n                    isCategory={ isCategory }\n                    isSubFact={ isSubFact }\n                />\n            </td>\n            : null\n    );\n}\n/*eslint-enable react/prop-types*/\n\nfunction buildNewFactData(isParent, factName, factValue, factData) {\n    let newFactData = {};\n    let subFacts = [];\n\n    if (factData && !Array.isArray(factData)) {\n        factData.values.forEach(function(subFact) {\n            subFacts.push(subFact);\n        });\n        subFacts.push({ name: factName, value: factValue });\n\n        newFactData.name = factData.name;\n        newFactData.values = subFacts;\n\n        return newFactData;\n    }\n\n    newFactData.name = factName;\n    if (isParent) {\n        newFactData.values = [];\n    } else {\n        newFactData.value = factValue;\n    }\n\n    return newFactData;\n}\n\nfunction buildEditedFactData(isParent, originalFactName, factName, originalValueName, factValue, factData) {\n    let newAPIBody = {};\n    let subFacts = [];\n    let originalSubFact = { name: originalFactName, value: originalValueName };\n\n    if (isParent) {\n        newAPIBody.name = factName;\n        factData.values.forEach(function(subFact) {\n            subFacts.push(subFact);\n        });\n        newAPIBody.values = subFacts;\n    } else {\n        if (factData.values && factValue !== '') {\n            newAPIBody.name = factData.name;\n            let newSubFact = { name: factName, value: factValue };\n\n            factData.values.forEach(function(subFact) {\n                if (subFact.name === originalSubFact.name && subFact.value === originalSubFact.value) {\n                    return;\n                }\n\n                subFacts.push(subFact);\n            });\n            subFacts.push(newSubFact);\n            newAPIBody.values = subFacts;\n        } else {\n            newAPIBody = { name: factName, value: factValue };\n        }\n    }\n\n    return newAPIBody;\n}\n\nfunction buildDeletedSubFact(factToDelete, fact) {\n    let newParentFact;\n    let newSubFacts = [];\n\n    fact.values.forEach(function(subFact) {\n        if (subFact.name === factToDelete.name && subFact.value === factToDelete.value) {\n            return;\n        }\n\n        newSubFacts.push(subFact);\n    });\n\n    newParentFact = { name: fact.name, values: newSubFacts };\n\n    return newParentFact;\n}\n\nfunction makeDeleteFactPatch(factToDelete, originalAPIBody) {\n    let op = 'remove';\n    let path = '/';\n\n    /*eslint-disable camelcase*/\n    originalAPIBody.baseline_facts.forEach(function(fact, index) {\n        if (fact.name === factToDelete.name) {\n            path += index;\n        }\n    });\n\n    let newAPIBody = {\n        display_name: originalAPIBody.display_name,\n        facts_patch: [{ op, path }]\n    };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\nfunction makeDeleteSubFactPatch(factToDelete, parentFact, originalAPIBody) {\n    let op = 'remove';\n    let path = '';\n\n    /*eslint-disable camelcase*/\n    originalAPIBody.baseline_facts.forEach(function(fact, index) {\n        if (fact.name === parentFact.name) {\n            path = `/${index}/values`;\n        }\n    });\n\n    parentFact.values.forEach(function(fact, index) {\n        if (fact.name === factToDelete.name) {\n            path += `/${index}`;\n        }\n    });\n\n    let newAPIBody = {\n        display_name: originalAPIBody.display_name,\n        facts_patch: [{ op, path }]\n    };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\nfunction makeDeleteFactsPatch(factsToDelete, originalAPIBody) {\n    let unselectedFacts = [];\n\n    factsToDelete.forEach(function(fact, index) {\n        if (!fact.selected) {\n            if (isCategory(fact)) {\n                let newAPIBody;\n                let unselectedSubFacts = [];\n\n                baselineSubFacts(fact).forEach(function(subFact, idx) {\n                    if (!subFact.selected) {\n                        unselectedSubFacts.push(originalAPIBody.baseline_facts[index].values[idx]);\n                    }\n                });\n\n                newAPIBody = {\n                    name: originalAPIBody.baseline_facts[index].name,\n                    values: unselectedSubFacts\n                };\n\n                unselectedFacts.push(newAPIBody);\n            } else {\n                unselectedFacts.push(originalAPIBody.baseline_facts[index]);\n            }\n        }\n    });\n\n    let patch = makePatchBody(unselectedFacts, originalAPIBody.baseline_facts);\n\n    /*eslint-disable camelcase*/\n    let newAPIBody = { display_name: originalAPIBody.display_name, facts_patch: patch };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\n/*eslint-disable camelcase*/\nfunction makeAddFactPatch(newFactData, originalAPIBody) {\n    let op = 'add';\n    let path = '/' + originalAPIBody.baseline_facts.length;\n    let value = newFactData;\n    let index;\n\n    if (Object.prototype.hasOwnProperty.call(newFactData, 'values') && newFactData.values.length > 0) {\n        value = newFactData.values[newFactData.values.length - 1];\n\n        for (let i = 0; i < originalAPIBody.baseline_facts.length; i += 1) {\n            if (originalAPIBody.baseline_facts[i].name === newFactData.name) {\n                index = i;\n            }\n        }\n\n        path = `/${index}/values/${newFactData.values.length - 1}`;\n    }\n\n    let newAPIBody = {\n        display_name: originalAPIBody.display_name,\n        facts_patch: [{ op, path, value }]\n    };\n\n    return newAPIBody;\n}\n/*eslint-enable camelcase*/\n\nfunction makeAddFactToCategoryPatch(newFactData, originalAPIBody, oldFactData) {\n    if (newFactData === undefined || originalAPIBody === undefined) {\n        return {};\n    }\n\n    let newFactBody = makeAPIPatch(newFactData, originalAPIBody, oldFactData);\n\n    newFactBody.push(newFactData);\n\n    let patch = makePatchBody(newFactBody, originalAPIBody.baseline_facts);\n\n    /*eslint-disable camelcase*/\n    let newAPIBody = { display_name: originalAPIBody.display_name, facts_patch: patch };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\nfunction makeEditFactPatch(newFactData, originalAPIBody, oldFactData) {\n    if (newFactData === undefined || originalAPIBody === undefined) {\n        return {};\n    }\n\n    let editedFactBody = makeAPIPatch(newFactData, originalAPIBody, oldFactData);\n\n    editedFactBody.push(newFactData);\n\n    let patch = makePatchBody(editedFactBody, originalAPIBody.baseline_facts);\n\n    /*eslint-disable camelcase*/\n    let newAPIBody = { display_name: originalAPIBody.display_name, facts_patch: patch };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\nfunction makeAPIPatch(data, originalAPIBody, originalParentFact) {\n    let patchBody = [];\n\n    if (Array.isArray(originalParentFact) && originalParentFact.length === 0) {\n        originalAPIBody.baseline_facts.forEach(function(fact) {\n            if (fact.name !== data.name) {\n                patchBody.push(fact);\n            }\n        });\n    } else {\n        originalAPIBody.baseline_facts.forEach(function(fact) {\n            if (fact.name !== originalParentFact.name) {\n                patchBody.push(fact);\n            }\n        });\n    }\n\n    return patchBody;\n}\n\nfunction makePatchBody(newAPIBody, originalAPIBody) {\n    return jiff.diff(originalAPIBody, newAPIBody);\n}\n\nfunction buildBaselineTableData(baselineData) {\n    let rows = [];\n    let row;\n    let id = 0;\n\n    if (baselineData) {\n        baselineData.forEach(function(fact) {\n            row = [];\n            row.push(id);\n            row.push(fact.name);\n            id += 1;\n\n            if (fact.values) {\n                let subfacts = [];\n                if (fact.values.length > 0) {\n                    fact.values.forEach(function(subFact) {\n                        let subfact = [];\n                        subfact.push(id);\n                        subfact.push(subFact.name);\n                        subfact.push(subFact.value);\n                        id += 1;\n                        subfacts.push(subfact);\n                    });\n\n                    row.push(subfacts);\n                } else {\n                    row.push([]);\n                }\n            } else {\n                row.push(fact.value);\n            }\n\n            rows.push(row);\n        });\n    }\n\n    return rows;\n}\n\nfunction toggleExpandedRow(expandedRows, factName) {\n    let newExpandedRows;\n\n    if (expandedRows.includes(factName)) {\n        newExpandedRows = expandedRows.filter(fact => fact !== factName);\n    } else {\n        newExpandedRows = expandedRows.slice();\n        newExpandedRows.splice(0, 0, factName);\n    }\n\n    return newExpandedRows;\n}\n\nfunction isAllSelected(data) {\n    let allSelected = true;\n\n    data.forEach(function(fact) {\n        if (!fact.selected) {\n            allSelected = false;\n        }\n    });\n\n    return allSelected;\n}\n\nfunction isCategory(fact) {\n    let subfacts = fact[2];\n    if (Array.isArray(subfacts)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction baselineSubFacts(fact) {\n    return fact[2];\n}\n\nfunction findFactCount(editBaselineTableData) {\n    let totalFacts = 0;\n\n    editBaselineTableData.forEach(function(fact) {\n        if (Array.isArray(fact[2])) {\n            totalFacts += fact[2].length;\n        } else {\n            totalFacts += 1;\n        }\n    });\n\n    return totalFacts;\n}\n\nfunction findSelected(editBaselineTableData) {\n    let selected = 0;\n\n    editBaselineTableData.forEach(function(fact) {\n        if (Array.isArray(fact[2])) {\n            fact[2].forEach(function(subFact) {\n                if (subFact.selected === true) {\n                    selected += 1;\n                }\n            });\n        } else {\n            if (fact.selected === true) {\n                selected += 1;\n            }\n        }\n    });\n\n    return selected;\n}\n\nfunction convertDataToCSV(data, baselineData) {\n    if (data === null || !data.length) {\n        return null;\n    }\n\n    let columnDelimiter = ',';\n    let lineDelimiter = '\\n';\n\n    /*eslint-disable camelcase*/\n    let headers = 'Fact,Value,';\n    let result = baselineData.display_name + lineDelimiter + headers + lineDelimiter;\n    /*eslint-enable camelcase*/\n\n    data.forEach(function(row) {\n        row.forEach(function(rowData) {\n            if (row[0] === rowData) {\n                return;\n            }\n\n            if (Array.isArray(rowData)) {\n                rowData.forEach(function(subFact) {\n                    result += lineDelimiter;\n                    result += '    ';\n                    subFact.forEach(function(subFactData) {\n                        if (subFact[0] === subFactData) {\n                            return;\n                        }\n\n                        result += subFactData;\n                        result += columnDelimiter;\n                    });\n                });\n            } else {\n                result += rowData;\n                result += columnDelimiter;\n            }\n        });\n\n        result += lineDelimiter;\n    });\n\n    return result;\n}\n\nexport default {\n    renderKebab,\n    buildNewFactData,\n    buildEditedFactData,\n    buildDeletedSubFact,\n    buildBaselineTableData,\n    makeDeleteFactsPatch,\n    makeAddFactPatch,\n    makeAddFactToCategoryPatch,\n    makeEditFactPatch,\n    makeDeleteFactPatch,\n    makeDeleteSubFactPatch,\n    toggleExpandedRow,\n    isAllSelected,\n    isCategory,\n    baselineSubFacts,\n    findFactCount,\n    findSelected,\n    convertDataToCSV\n};\n","const TOGGLE_DELETE_NOTIFICATION_MODAL = 'TOGGLE_DELETE_NOTIFICATION_MODAL';\nconst SET_SYSTEMS_TO_DELETE = 'SET_SYSTEMS_TO_DELETE';\nconst DELETE_NOTIFICATIONS = 'DELETE_NOTIFICATIONS';\nconst GET_NOTIFICATIONS = 'GET_NOTIFICATIONS';\nconst ADD_NOTIFICATIONS = 'ADD_NOTIFICATIONS';\n\nexport default {\n    TOGGLE_DELETE_NOTIFICATION_MODAL,\n    SET_SYSTEMS_TO_DELETE,\n    DELETE_NOTIFICATIONS,\n    GET_NOTIFICATIONS,\n    ADD_NOTIFICATIONS\n};\n","import types from './types';\nimport api from '../../../../api';\n\nfunction expandRow(factName) {\n    return {\n        type: types.EXPAND_PARENT_FACT,\n        payload: factName\n    };\n}\n\nfunction fetchBaselineData(baselineUUID) {\n    return {\n        type: types.FETCH_BASELINE_DATA,\n        payload: api.getBaselineData(baselineUUID)\n    };\n}\n\nfunction clearEditBaselineData() {\n    return {\n        type: types.CLEAR_EDIT_BASELINE_DATA\n    };\n}\n\nfunction patchBaseline(baselineId, apiBody) {\n    return {\n        type: types.PATCH_BASELINE,\n        payload: api.patchBaselineData(baselineId, apiBody)\n    };\n}\n\nfunction deleteBaselineData(baselineId, apiBody) {\n    return {\n        type: types.DELETE_BASELINE_DATA,\n        payload: api.patchBaselineData(baselineId, apiBody)\n    };\n}\n\nfunction toggleFactModal() {\n    return {\n        type: types.TOGGLE_FACT_MODAL\n    };\n}\n\nfunction setFactData(factData) {\n    return {\n        type: types.SET_FACT_DATA,\n        payload: factData\n    };\n}\n\nfunction selectFact(ids, isSelected) {\n    return {\n        type: types.SELECT_FACT,\n        payload: { ids, isSelected }\n    };\n}\n\nfunction clearErrorData() {\n    return {\n        type: types.CLEAR_ERROR_DATA\n    };\n}\n\nfunction exportToCSV(baselineData, baselineRowData = []) {\n    let data = {\n        exportType: 'baselines data',\n        exportData: baselineData,\n        baselineRowData\n    };\n\n    return {\n        type: `EXPORT_BASELINE_DATA_TO_CSV`,\n        payload: data\n    };\n}\n\nexport default {\n    expandRow,\n    fetchBaselineData,\n    clearEditBaselineData,\n    patchBaseline,\n    deleteBaselineData,\n    setFactData,\n    toggleFactModal,\n    selectFact,\n    clearErrorData,\n    exportToCSV\n};\n","const EXPAND_PARENT_FACT = 'EXPAND_PARENT_FACT';\nconst FETCH_BASELINE_DATA = 'FETCH_BASELINE_DATA';\nconst CLEAR_EDIT_BASELINE_DATA = 'CLEAR_EDIT_BASELINE_DATA';\nconst PATCH_BASELINE = 'PATCH_BASELINE';\nconst DELETE_BASELINE_DATA = 'DELETE_BASELINE_DATA';\nconst SET_FACT_DATA = 'SET_FACT_DATA';\nconst TOGGLE_FACT_MODAL = 'TOGGLE_FACT_MODAL';\nconst SELECT_FACT = 'SELECT_FACT';\nconst CLEAR_ERROR_DATA = 'CLEAR_ERROR_DATA';\nconst EXPORT_BASELINE_DATA_TO_CSV = 'EXPORT_BASELINE_DATA_TO_CSV';\n\nexport default {\n    EXPAND_PARENT_FACT,\n    FETCH_BASELINE_DATA,\n    CLEAR_EDIT_BASELINE_DATA,\n    PATCH_BASELINE,\n    DELETE_BASELINE_DATA,\n    SET_FACT_DATA,\n    TOGGLE_FACT_MODAL,\n    SELECT_FACT,\n    CLEAR_ERROR_DATA,\n    EXPORT_BASELINE_DATA_TO_CSV\n};\n","import moment from 'moment';\n\nfunction fetchBaselines (tableId, fetchBaselines, fetchParams = {}) {\n    let params = {};\n\n    /*eslint-disable camelcase*/\n    params.order_by = fetchParams.orderBy;\n    params.order_how = fetchParams.orderHow;\n    params.limit = fetchParams.perPage;\n    params.offset = (fetchParams.page - 1) * fetchParams.perPage;\n\n    if (fetchParams.search) {\n        params.display_name = fetchParams.search;\n    }\n    /*eslint-enable camelcase*/\n\n    fetchBaselines(tableId, params);\n}\n\nfunction buildBaselinesTable(data, selectedBaselineIds) {\n    let rows = [];\n\n    data.forEach(function(baseline) {\n        let row = [];\n\n        let dateTimeStamp = getDateTimeStamp(baseline.updated);\n\n        row.push(baseline.id);\n        row.push(baseline.display_name);\n        row.push(dateTimeStamp);\n\n        rows.push(row);\n    });\n\n    if (selectedBaselineIds) {\n        rows = setSelected(rows, selectedBaselineIds);\n    }\n\n    return rows;\n}\n\nfunction setSelected(baselineRows, selectedBaselineIds) {\n    if (selectedBaselineIds === undefined) {\n        selectedBaselineIds = [];\n    }\n\n    baselineRows.forEach(function(baseline) {\n        let found = selectedBaselineIds.find(function(id) {\n            return baseline[0] === id;\n        });\n\n        if (found !== undefined) {\n            baseline.selected = true;\n        }\n    });\n\n    return baselineRows;\n}\n\nfunction setBaselineArray(baselines) {\n    let baselineArray = [];\n\n    baselines.forEach(function(baseline) {\n        if (baseline.selected) {\n            baselineArray.push(baseline[0]);\n        }\n    });\n\n    return baselineArray;\n}\n\nfunction getDateTimeStamp(dateTime) {\n    return moment(dateTime).fromNow();\n}\n\nfunction toggleExpandedRow(expandedRows, factName) {\n    if (expandedRows.includes(factName)) {\n        expandedRows = expandedRows.filter(fact => fact !== factName);\n    } else {\n        expandedRows.push(factName);\n    }\n\n    return expandedRows;\n}\n\nfunction convertListToCSV(data) {\n    if (data === null || !data.length) {\n        return null;\n    }\n\n    let columnDelimiter = data.columnDelimiter || ',';\n    let lineDelimiter = data.lineDelimiter || '\\n';\n\n    let headers = 'UUID,Name,Last updated,';\n    let result = headers + lineDelimiter;\n\n    data.forEach(function(baseline) {\n        baseline.forEach(function(detail) {\n            result += detail;\n            result += columnDelimiter;\n        });\n\n        result += lineDelimiter;\n    });\n\n    return result;\n}\n\nexport default {\n    fetchBaselines,\n    buildBaselinesTable,\n    setBaselineArray,\n    toggleExpandedRow,\n    setSelected,\n    convertListToCSV\n};\n","import api from '../../../api';\n\nfunction fetchBaselines(tableId, params = {}) {\n    return {\n        type: `FETCH_BASELINE_LIST_${ tableId }`,\n        payload: api.getBaselineList(params)\n    };\n}\n\nfunction revertBaselineFetch(tableId) {\n    return {\n        type: `REVERT_BASELINE_FETCH_${tableId}`\n    };\n}\n\nfunction selectBaseline(ids, isSelected, tableId) {\n    return {\n        type: `SELECT_BASELINE_${tableId}`,\n        payload: { ids, isSelected }\n    };\n}\n\nfunction setSelectedBaselines(selectedBaselineIds, tableId) {\n    return {\n        type: `SET_SELECTED_BASELINES_${tableId}`,\n        payload: selectedBaselineIds\n    };\n}\n\nfunction clearSelectedBaselines(tableId) {\n    return {\n        type: `CLEAR_SELECTED_BASELINES_${tableId}`\n    };\n}\n\nfunction clearBaselineData(tableId) {\n    return {\n        type: `CLEAR_BASELINE_DATA_${tableId}`\n    };\n}\n\nfunction deleteSelectedBaselines(deleteBaselinesAPIBody, tableId) {\n    return {\n        type: `DELETE_SELECTED_BASELINES_${tableId}`,\n        payload: api.deleteBaselinesData(deleteBaselinesAPIBody)\n    };\n}\n\nfunction exportToCSV(baselineData, baselineRowData = []) {\n    let data = {\n        exportType: 'baseline list',\n        exportData: baselineData,\n        baselineRowData\n    };\n\n    return {\n        type: `EXPORT_BASELINES_LIST_TO_CSV_CHECKBOX`,\n        payload: data\n    };\n}\n\nexport default {\n    fetchBaselines,\n    revertBaselineFetch,\n    selectBaseline,\n    setSelectedBaselines,\n    clearSelectedBaselines,\n    clearBaselineData,\n    deleteSelectedBaselines,\n    exportToCSV\n};\n","import baselinesReducerHelpers from './helpers';\nimport helpers from '../../helpers';\nimport union from 'lodash/union';\n\nconst initialState = {\n    loading: true,\n    baselineTableData: [],\n    selectedBaselineIds: [],\n    IdToDelete: '',\n    emptyState: false,\n    baselineError: {},\n    totalBaselines: 0\n};\n\nconst baselinesTableReducer = (tableId = '') => {\n    const tableReducer = (state = initialState, action) => {\n        let rows = [];\n        let selectedBaselines = [];\n        let newBaselineTableData = [];\n        let response;\n        let errorObject;\n\n        switch (action.type) {\n            case `FETCH_BASELINE_LIST_${tableId}_PENDING`:\n                return {\n                    ...state,\n                    loading: true\n                };\n            case `FETCH_BASELINE_LIST_${tableId}_FULFILLED`:\n                rows = baselinesReducerHelpers.buildBaselinesTable(action.payload.data, state.selectedBaselineIds, tableId);\n\n                return {\n                    ...state,\n                    loading: false,\n                    emptyState: action.payload.meta.total_available === 0,\n                    baselineTableData: rows,\n                    totalBaselines: action.payload.meta.count\n                };\n            case `FETCH_BASELINE_LIST_${tableId}_REJECTED`:\n                response = action.payload.response;\n                errorObject = { status: response.status };\n                if (response.data === '') {\n                    errorObject.detail = response.statusText;\n                } else if (response.data.message) {\n                    errorObject.detail = response.data.message;\n                } else {\n                    errorObject.detail = response.data.detail;\n                }\n\n                return {\n                    ...state,\n                    loading: false,\n                    emptyState: true,\n                    baselineError: errorObject\n                };\n            case `REVERT_BASELINE_FETCH_${tableId}`:\n                return {\n                    ...state,\n                    emptyState: false,\n                    baselineError: {},\n                    loading: false\n                };\n            case `SELECT_BASELINE_${tableId}`:\n                selectedBaselines = [ ...state.selectedBaselineIds ];\n\n                if (action.payload.ids.length === 0) {\n                    selectedBaselines = [];\n                } else if (action.payload.isSelected) {\n                    if (tableId === 'CHECKBOX' || tableId === 'COMPARISON') {\n                        selectedBaselines = union(selectedBaselines.concat(action.payload.ids));\n                    } else if (tableId === 'RADIO') {\n                        selectedBaselines.pop();\n                        selectedBaselines.push(action.payload.ids[0]);\n                    }\n                } else if (!action.payload.isSelected) {\n                    selectedBaselines = selectedBaselines.filter(function(item) {\n                        return !action.payload.ids.includes(item);\n                    });\n                }\n\n                state.baselineTableData.map(row => {\n                    if (selectedBaselines.includes(row[0])) {\n                        row.selected = true;\n                    } else {\n                        row.selected = false;\n                    }\n\n                    newBaselineTableData.push(row);\n                });\n\n                return {\n                    ...state,\n                    baselineTableData: newBaselineTableData,\n                    selectedBaselineIds: selectedBaselines\n                };\n            case `SET_SELECTED_BASELINES_${tableId}`:\n                newBaselineTableData = [ ...state.baselineTableData ];\n                //rows = baselinesReducerHelpers.setSelected(newBaselineTableData, state.selectedBaselineIds);\n                rows = baselinesReducerHelpers.setSelected(newBaselineTableData, action.payload);\n\n                return {\n                    ...state,\n                    baselineTableData: rows,\n                    //selectedBaselineIds: action.payload.length ? action.payload : state.selectedBaselineIds\n                    selectedBaselineIds: action.payload\n                };\n            case `CLEAR_SELECTED_BASELINES_${tableId}`:\n                return {\n                    ...state,\n                    selectedBaselineIds: []\n                };\n            case `CLEAR_BASELINE_DATA_${tableId}`:\n                return {\n                    ...state,\n                    baselineData: undefined\n                };\n            case `DELETE_SELECTED_BASELINES_${tableId}_PENDING`:\n                return {\n                    ...state,\n                    loading: true\n                };\n            case `DELETE_SELECTED_BASELINES_${tableId}_FULFILLED`:\n                return {\n                    ...state,\n                    loading: false\n                };\n            case `DELETE_SELECTED_BASELINES_${tableId}_REJECTED`:\n                response = action.payload.response;\n                errorObject = { status: response.status };\n                if (response.data === '') {\n                    errorObject.detail = response.statusText;\n                } else if (response.data.message) {\n                    errorObject.detail = response.data.message;\n                } else {\n                    errorObject.detail = response.data.detail;\n                }\n\n                return {\n                    ...state,\n                    loading: false,\n                    baselineError: errorObject\n                };\n            case `EXPORT_BASELINES_LIST_TO_CSV_${tableId}`:\n                helpers.downloadCSV(action.payload);\n                return {\n                    ...state\n                };\n            default:\n                return state;\n        }\n    };\n\n    return tableReducer;\n};\n\nexport default baselinesTableReducer;\n","import { combineReducers } from 'redux';\nexport { default as baselinesTableActions } from './actions';\nimport baselinesTableReducer from './baselinesTableReducer';\n\nexport const baselinesTableRootReducer = combineReducers({\n    checkboxTable: baselinesTableReducer('CHECKBOX'),\n    radioTable: baselinesTableReducer('RADIO'),\n    comparisonTable: baselinesTableReducer('COMPARISON')\n});\n","const OPEN_FILTER_DROPDOWN = 'OPEN_FILTER_DROPDOWN';\n\nexport default {\n    OPEN_FILTER_DROPDOWN\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\n\nexport class EmptyStateDisplay extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    async componentDidMount() {\n        await window.insights?.chrome?.appAction?.('comparison-list');\n    }\n\n    render() {\n        const { button, color, error, icon, isSmall, text, title } = this.props;\n\n        return (\n            <EmptyState variant={ isSmall ? EmptyStateVariant.small : EmptyStateVariant.large }>\n                { icon\n                    ? <EmptyStateIcon\n                        icon={ icon }\n                        color={ color ? color : null }\n                        className={ isSmall ? 'small-empty-state-icon' : null }\n                    />\n                    : null\n                }\n                <br></br>\n                <Title\n                    headingLevel={ isSmall ? 'h5' : 'h1' }\n                    size={ isSmall ? 'md' : 'lg' }\n                >\n                    { title }\n                </Title>\n                <EmptyStateBody>\n                    { text ? text.join('\\n') : null }\n                    { error ? error : null }\n                </EmptyStateBody>\n                { button }\n            </EmptyState>\n        );\n    }\n}\n\nEmptyStateDisplay.propTypes = {\n    button: PropTypes.object,\n    color: PropTypes.string,\n    error: PropTypes.string,\n    icon: PropTypes.any,\n    isSmall: PropTypes.bool,\n    text: PropTypes.array,\n    title: PropTypes.string\n};\n\nexport default EmptyStateDisplay;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nexport class HistoricalProfilesCheckbox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: this.findChecked()\n        };\n    }\n\n    findChecked = () => {\n        const { profile, selectedHSPIds, entities, updateBadgeCount } = this.props;\n        let checked;\n\n        if (profile.captured_date === 'Latest') {\n            checked = entities.selectedSystemIds.some(id => id === profile.id);\n            updateBadgeCount(checked);\n        } else {\n            checked = selectedHSPIds?.some(id => id === profile.id);\n        }\n\n        return checked;\n    }\n\n    handleChange = () => {\n        const { checked } = this.state;\n        const { onSelect, profile } = this.props;\n\n        this.setState({\n            checked: !checked\n        });\n\n        onSelect(checked, profile);\n    }\n\n    render() {\n        const { profile } = this.props;\n        const { checked } = this.state;\n\n        /*eslint-disable camelcase*/\n        return (\n            <React.Fragment>\n                <Checkbox\n                    label={ profile.captured_date === 'Latest'\n                        ? profile.captured_date\n                        : moment.utc(profile.captured_date).format('DD MMM YYYY, HH:mm UTC') }\n                    isChecked={ checked }\n                    onChange={ this.handleChange }\n                    aria-label={ profile.id }\n                    id={ profile.id }\n                    name={ profile.id }\n                    data-ouia-component-id={ 'hsp-popover-option-checkbox-' + profile.id }\n                    data-ouia-component-type='PF4/Checkbox'\n                />\n            </React.Fragment>\n        );\n        /*eslint-enable camelcase*/\n    }\n}\n\nHistoricalProfilesCheckbox.propTypes = {\n    profile: PropTypes.object,\n    selectHistoricProfiles: PropTypes.func,\n    selectedHSPIds: PropTypes.array,\n    updateBadgeCount: PropTypes.func,\n    selectSystem: PropTypes.func,\n    entities: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        entities: state.entities\n    };\n}\n\nexport default (connect(mapStateToProps, null)(HistoricalProfilesCheckbox));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Radio } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nexport class HistoricalProfilesRadio extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: this.findChecked()\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { entities, profile } = this.props;\n\n        if (prevProps.entities?.selectedHSP !== entities?.selectedHSP) {\n            this.setState({\n                checked: entities.selectedHSP?.id === profile.id\n            });\n        }\n    }\n\n    findChecked = () => {\n        const { profile, entities } = this.props;\n        let checked;\n\n        if (profile.captured_date === 'Latest') {\n            checked = entities.selectedSystemIds.some(id => id === profile.id);\n        } else {\n            checked = entities?.selectedHSP?.id === profile.id;\n        }\n\n        return checked;\n    }\n\n    handleChange = () => {\n        const { checked } = this.state;\n        const { onSingleSelect, profile } = this.props;\n\n        if (!checked) {\n            this.setState({\n                checked: true\n            });\n        }\n\n        onSingleSelect(profile);\n    }\n\n    render() {\n        const { profile } = this.props;\n        const { checked } = this.state;\n\n        /*eslint-disable camelcase*/\n        return (\n            <React.Fragment>\n                <Radio\n                    isChecked={ checked }\n                    id={ profile.captured_date }\n                    name={ profile.captured_date }\n                    label={ moment.utc(profile.captured_date).format('DD MMM YYYY, HH:mm UTC') }\n                    value={ profile.captured_date }\n                    onChange={ this.handleChange }\n                />\n            </React.Fragment>\n        );\n        /*eslint-enable camelcase*/\n    }\n}\n\nHistoricalProfilesRadio.propTypes = {\n    profile: PropTypes.object,\n    entities: PropTypes.object,\n    onSingleSelect: PropTypes.func,\n    checked: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n    return {\n        entities: state.entities\n    };\n}\n\nexport default (connect(mapStateToProps, null)(HistoricalProfilesRadio));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Badge, Button, Popover } from '@patternfly/react-core';\nimport { ExclamationCircleIcon, HistoryIcon, UndoIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nimport systemsTableActions from '../SystemsTable/actions';\nimport HistoricalProfilesCheckbox from './HistoricalProfilesCheckbox/HistoricalProfilesCheckbox';\nimport api from '../../api';\nimport EmptyStateDisplay from '../EmptyStateDisplay/EmptyStateDisplay';\nimport HistoricalProfilesRadio from './HistoricalProfilesRadio/HistoricalProfilesRadio';\nimport { addSystemModalActions } from '../AddSystemModal/redux';\n\nexport class HistoricalProfilesPopover extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: false,\n            historicalData: undefined,\n            dropDownArray: this.renderLoadingRows(),\n            badgeCount: this.props.badgeCount ? this.props.badgeCount : 0,\n            error: undefined\n        };\n\n        this.onToggle = () => {\n            const { isVisible } = this.state;\n\n            if (isVisible === false) {\n                this.fetchData(this.props.system);\n            }\n\n            this.setState({\n                isVisible: !isVisible\n            });\n        };\n\n        this.onSelect = this.onSelect.bind(this);\n        this.onSingleSelect = this.onSingleSelect.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.selectedHSPIds !== prevProps.selectedHSPIds) {\n            this.updateBadgeCount();\n            this.setState({ dropDownArray: this.createDropdownArray() });\n        }\n    }\n\n    async onSelect(checked, profile) {\n        const { handleHSPSelection, selectHistoricProfiles, selectSystem, selectedHSPIds } = this.props;\n        let newSelectedHSPIds = [ ...selectedHSPIds ];\n\n        if (profile.captured_date === 'Latest') {\n            await selectSystem(profile.id, !checked);\n        } else {\n            if (newSelectedHSPIds.includes(profile.id)) {\n                newSelectedHSPIds = newSelectedHSPIds.filter(hsp => hsp !== profile.id);\n            } else {\n                newSelectedHSPIds.push(profile.id);\n            }\n\n            await selectHistoricProfiles(newSelectedHSPIds);\n        }\n\n        handleHSPSelection(profile);\n        this.updateBadgeCount(!checked);\n    }\n\n    async onSingleSelect(profile) {\n        const { selectSystem, selectSingleHSP, updateColumns } = this.props;\n\n        if (profile.captured_date === 'Latest') {\n            await selectSystem(profile.id, true);\n        }\n\n        updateColumns('display_selected_hsp');\n        selectSingleHSP(profile);\n    }\n\n    fetchCompare = () => {\n        const { systemIds, selectedBaselineIds, selectedHSPIds, referenceId, fetchCompare } = this.props;\n\n        fetchCompare(systemIds, selectedBaselineIds, selectedHSPIds, referenceId);\n    }\n\n    async retryFetch() {\n        const { system } = this.props;\n        this.setState({\n            dropDownArray: this.renderLoadingRows()\n        });\n\n        await this.fetchData(system);\n    }\n\n    /*eslint-disable camelcase*/\n    async fetchData(system) {\n        const { systemName } = this.props;\n\n        let fetchedData = await api.fetchHistoricalData(system.system_id ? system.system_id : system.id);\n\n        fetchedData.profiles?.forEach(function(profile) {\n            profile.system_name = systemName;\n        });\n\n        if (fetchedData.status) {\n            this.setState({\n                error: { status: fetchedData.status, message: fetchedData.data.message }\n            });\n        } else {\n            fetchedData.profiles.shift();\n\n            this.setState({\n                historicalData: fetchedData\n            });\n        }\n\n        this.setState({\n            dropDownArray: this.createDropdownArray()\n        });\n    }\n    /*eslint-enable camelcase*/\n\n    createDropdownArray = () => {\n        const { hasMultiSelect, selectedHSPIds } = this.props;\n        const { historicalData, error } = this.state;\n\n        let dropdownItems = [];\n        let badgeCountFunc = this.updateBadgeCount;\n        let onSelectFunc = this.onSelect;\n        let onSingleSelectFunc = this.onSingleSelect;\n\n        if (historicalData && historicalData.profiles.length > 0) {\n            historicalData.profiles.forEach(function(profile, index) {\n                dropdownItems.push(\n                    <div className={ index > 0 ? 'sm-padding-top' : null }>\n                        { hasMultiSelect\n                            ? <HistoricalProfilesCheckbox\n                                profile={ profile }\n                                updateBadgeCount={ badgeCountFunc }\n                                onSelect={ onSelectFunc }\n                                selectedHSPIds={ selectedHSPIds }\n                            />\n                            : <HistoricalProfilesRadio\n                                profile={ profile }\n                                onSingleSelect={ onSingleSelectFunc }\n                                selectedHSPIds={ selectedHSPIds }\n                            />\n                        }\n                    </div>\n                );\n            });\n        } else if (error) {\n            dropdownItems.push(\n                <EmptyStateDisplay\n                    icon={ ExclamationCircleIcon }\n                    isSmall={ true }\n                    color='#c9190b'\n                    title={ 'Cannot get historical check-ins' }\n                    error={ error.status + ': ' + error.message }\n                    button={ <a onClick={ () => this.retryFetch() }>\n                        <UndoIcon className='reload-button' />\n                            Retry\n                    </a> }\n                />\n            );\n        } else {\n            dropdownItems.push(\n                <div>\n                    There are no historical profiles to display.\n                </div>\n            );\n        }\n\n        return dropdownItems;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rows.push(\n                <Skeleton\n                    className='hsp-dropdown-loading'\n                    size={ SkeletonSize.sm }\n                    key={ 'skeleton-row-' + i }\n                />\n            );\n        }\n\n        return rows;\n    }\n\n    updateBadgeCount = () => {\n        this.setState({\n            badgeCount: this.state.historicalData?.profiles.filter((hsp) => {\n                return this.props.selectedHSPIds.includes(hsp.id);\n            }).length\n        });\n    }\n\n    renderBadge = () => {\n        const { badgeCount } = this.state;\n\n        if (badgeCount > 0) {\n            return <Badge key={ 1 }>{ badgeCount }</Badge>;\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        /*eslint-disable camelcase*/\n        const { dropDownArray, isVisible } = this.state;\n        const { hasBadge, hasCompareButton, system } = this.props;\n        let id = system?.system_id ? system?.system_id : system?.id;\n        /*eslint-enable camelcase*/\n\n        return (\n            <React.Fragment>\n                <span\n                    className='hsp-icon-padding'\n                    data-ouia-component-id={ 'hsp-popover-toggle-' + id  }\n                    data-ouia-component-type='PF4/Button' >\n                    <Popover\n                        id={ 'hsp-popover-' + id }\n                        isVisible={ isVisible }\n                        shouldClose={ () => this.onToggle() }\n                        headerContent={ <div>Historical profiles for this system</div> }\n                        bodyContent={ <div style={{ maxHeight: '350px', overflowY: 'scroll' }}>\n                            { dropDownArray }\n                        </div> }\n                        footerContent={ hasCompareButton\n                            ? <Button\n                                variant='primary'\n                                ouiaId=\"hsp-popover-compare\"\n                                onClick={ () => this.fetchCompare() }>\n                                Compare\n                            </Button>\n                            : null }\n                    >\n                        <HistoryIcon className='hsp-dropdown-icon' onClick={ () => this.onToggle() } />\n                    </Popover>\n                </span>\n                { hasBadge ? this.renderBadge() : null }\n            </React.Fragment>\n        );\n    }\n}\n\nHistoricalProfilesPopover.propTypes = {\n    fetchHistoricalData: PropTypes.func,\n    system: PropTypes.object,\n    fetchCompare: PropTypes.func,\n    systemIds: PropTypes.array,\n    selectedHSPIds: PropTypes.array,\n    selectedBaselineIds: PropTypes.array,\n    selectHistoricProfiles: PropTypes.func,\n    selectSystem: PropTypes.func,\n    hasBadge: PropTypes.bool,\n    hasCompareButton: PropTypes.bool,\n    badgeCount: PropTypes.number,\n    referenceId: PropTypes.string,\n    dropdownDirection: PropTypes.string,\n    hasMultiSelect: PropTypes.bool,\n    selectSingleHSP: PropTypes.func,\n    updateColumns: PropTypes.func,\n    handleHSPSelection: PropTypes.func,\n    systemName: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        selectedHSPIds: state.historicProfilesState?.selectedHSPIds || [],\n        selectedBaselineIds: state.baselinesTableState?.checkboxTable.selectedBaselineIds || []\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        selectSystem: (id, selected) => dispatch({\n            type: 'SELECT_ENTITY',\n            payload: { id, selected }\n        }),\n        selectSingleHSP: (profile) => dispatch(systemsTableActions.selectSingleHSP(profile)),\n        updateColumns: (key) => dispatch(systemsTableActions.updateColumns(key)),\n        handleHSPSelection: (content) => dispatch(addSystemModalActions.handleHSPSelection(content))\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HistoricalProfilesPopover));\n","const SELECT_HISTORIC_PROFILES = 'SELECT_HISTORIC_PROFILES';\n\nexport default {\n    SELECT_HISTORIC_PROFILES\n};\n","import types from '../modules/types';\n\nfunction selectSingleHSP(profile) {\n    return {\n        type: types.SELECT_SINGLE_HSP,\n        payload: profile\n    };\n}\n\nfunction updateColumns(key) {\n    return {\n        type: types.UPDATE_COLUMNS,\n        payload: key\n    };\n}\n\nfunction clearAllFilters() {\n    return {\n        type: types.DRIFT_CLEAR_ALL_FILTERS\n    };\n}\n\nfunction disableSystemTable(isDisabled) {\n    return {\n        type: types.DISABLE_SYSTEM_TABLE,\n        payload: isDisabled\n    };\n}\n\nexport default {\n    selectSingleHSP,\n    updateColumns,\n    clearAllFilters,\n    disableSystemTable\n};\n","import React from 'react';\nimport { CloseIcon, HistoryIcon } from '@patternfly/react-icons';\nimport moment from 'moment';\nimport baselinesTableHelpers from './BaselinesTable/redux/helpers';\nimport editBaselineHelpers from './BaselinesPage/EditBaselinePage/EditBaseline/helpers';\n\nfunction findCheckedValue(total, selected) {\n    if (selected === total && total > 0) {\n        return true;\n    } else if (selected > 0 && selected < total) {\n        return null;\n    } else {\n        return false;\n    }\n}\n\nfunction paginateData(data, selectedPage, itemsPerPage) {\n    let paginatedData = [];\n\n    if (data === null || !data.length) {\n        return [];\n    }\n\n    for (let i = 0; i < data.length; i++) {\n        if (Math.ceil((i + 1) / itemsPerPage) === selectedPage) {\n            paginatedData.push(data[i]);\n        }\n    }\n\n    return paginatedData;\n}\n\nfunction buildSystemsTableWithSelectedHSP (rows, selectedHSP, deselectHistoricalProfiles) {\n    /*eslint-disable camelcase*/\n    rows.forEach((row) => {\n        row.selected = false;\n        row.display_selected_hsp = row.display_name;\n        if (selectedHSP.system_id === row.id) {\n            row.display_selected_hsp = <React.Fragment>\n                <div>\n                    { row.display_name }\n                </div>\n                <div>\n                    <HistoryIcon className='active-blue margin-right-5-px' />\n                    {\n                        moment.utc(selectedHSP.captured_date).format('DD MMM YYYY, HH:mm UTC')\n                    }\n                    <CloseIcon\n                        className='pointer active-blue margin-left-5-px'\n                        onClick={ () => deselectHistoricalProfiles() }\n                    />\n                </div>\n            </React.Fragment>;\n        }\n    });\n    /*eslint-enable camelcase*/\n\n    return rows;\n}\n\nfunction downloadCSV(baselineData) {\n    let filename;\n    let csv;\n\n    if (baselineData.exportType === 'baseline list') {\n        filename = 'baseline-list-export-';\n        csv = baselinesTableHelpers.convertListToCSV(baselineData.exportData);\n    } else if (baselineData.exportType === 'baselines data') {\n        filename = 'baseline-data-export-';\n        csv = editBaselineHelpers.convertDataToCSV(baselineData.exportData, baselineData.baselineRowData);\n    }\n\n    if (csv === null) {\n        return;\n    }\n\n    let today = new Date();\n    filename += today.toISOString();\n    filename += '.csv';\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = 'data:text/csv;charset=utf-8,' + csv;\n    }\n\n    let data = encodeURI(csv);\n\n    let link = document.createElement('a');\n    link.setAttribute('href', data);\n    link.setAttribute('download', filename);\n    link.dispatchEvent(new MouseEvent(`click`, { bubbles: true, cancelable: true, view: window }));\n}\n\nexport default {\n    findCheckedValue,\n    paginateData,\n    buildSystemsTableWithSelectedHSP,\n    downloadCSV\n};\n","import types from './types';\nimport api from '../../api';\nimport { ASC, DESC } from '../../constants';\n\nfunction fetchCompare(systemIds, baselineIds, systemHSPIds, referenceId) {\n    return {\n        type: types.FETCH_COMPARE,\n        payload: api.getCompare(systemIds, baselineIds, systemHSPIds, referenceId)\n    };\n}\n\nfunction revertCompareData() {\n    return {\n        type: types.REVERT_COMPARE_DATA\n    };\n}\n\nfunction clearComparison() {\n    return {\n        type: types.CLEAR_COMPARISON\n    };\n}\n\nfunction clearComparisonFilters() {\n    return {\n        type: types.CLEAR_COMPARISON_FILTERS\n    };\n}\n\nfunction setSelectedSystemIds(selectedSystemIds) {\n    return {\n        type: types.SET_SELECTED_SYSTEM_IDS,\n        payload: { selectedSystemIds }\n    };\n}\n\nfunction toggleFactSort(currentSort) {\n    return {\n        type: types.TOGGLE_FACT_SORT,\n        payload: currentSort === ASC ? DESC : ASC\n    };\n}\n\nfunction toggleStateSort(currentSort) {\n    let newSort;\n\n    if (currentSort === ASC) {\n        newSort = DESC;\n    }\n    else if (currentSort === DESC) {\n        newSort = '';\n    } else {\n        newSort = ASC;\n    }\n\n    return {\n        type: types.TOGGLE_STATE_SORT,\n        payload: newSort\n    };\n}\n\nfunction addStateFilter(filterData) {\n    filterData.selected = !filterData.selected;\n    return {\n        type: types.ADD_STATE_FILTER,\n        payload: filterData\n    };\n}\n\nfunction filterByFact(filter) {\n    return {\n        type: types.FILTER_BY_FACT,\n        payload: filter\n    };\n}\n\nfunction handleFactFilter(filter) {\n    return {\n        type: types.HANDLE_FACT_FILTER,\n        payload: filter\n    };\n}\n\nfunction clearAllFactFilters() {\n    return {\n        type: types.CLEAR_ALL_FACT_FILTERS\n    };\n}\n\nfunction updatePagination(pagination) {\n    return {\n        type: types.UPDATE_DRIFT_PAGINATION,\n        payload: pagination\n    };\n}\n\nfunction exportToCSV() {\n    return {\n        type: types.EXPORT_TO_CSV\n    };\n}\n\nfunction expandRow(factName) {\n    return {\n        type: types.EXPAND_ROW,\n        payload: factName\n    };\n}\n\nfunction updateReferenceId(id) {\n    return {\n        type: types.UPDATE_REFERENCE_ID,\n        payload: id\n    };\n}\n\nfunction setGlobalFilterTags(tags = []) {\n    return {\n        type: types.SET_GLOBAL_FILTER_TAGS,\n        payload: tags\n    };\n}\n\nfunction setGlobalFilterWorkloads(workloads = []) {\n    return {\n        type: types.SET_GLOBAL_FILTER_WORKLOADS,\n        payload: workloads\n    };\n}\n\nfunction setGlobalFilterSIDs(SIDs = []) {\n    return {\n        type: types.SET_GLOBAL_FILTER_SIDS,\n        payload: SIDs\n    };\n}\n\nexport default {\n    fetchCompare,\n    revertCompareData,\n    clearComparison,\n    clearComparisonFilters,\n    setSelectedSystemIds,\n    toggleFactSort,\n    addStateFilter,\n    toggleStateSort,\n    filterByFact,\n    handleFactFilter,\n    clearAllFactFilters,\n    updatePagination,\n    exportToCSV,\n    expandRow,\n    updateReferenceId,\n    setGlobalFilterTags,\n    setGlobalFilterWorkloads,\n    setGlobalFilterSIDs\n};\n","const SELECT_ENTITY = 'SELECT_ENTITY';\nconst FETCH_COMPARE = 'FETCH_COMPARE';\nconst SET_SELECTED_SYSTEM_IDS = 'SET_SELECTED_SYSTEM_IDS';\nconst TOGGLE_FACT_SORT = 'TOGGLE_FACT_SORT';\nconst ADD_STATE_FILTER = 'ADD_STATE_FILTER';\nconst TOGGLE_STATE_SORT = 'TOGGLE_STATE_SORT';\nconst FILTER_BY_FACT = 'FILTER_BY_FACT';\nconst HANDLE_FACT_FILTER = 'HANDLE_FACT_FILTER';\nconst CLEAR_ALL_FACT_FILTERS = 'CLEAR_ALL_FACT_FILTERS';\nconst UPDATE_DRIFT_PAGINATION = 'UPDATE_DRIFT_PAGINATION';\nconst CLEAR_COMPARISON = 'CLEAR_COMPARISON';\nconst CLEAR_COMPARISON_FILTERS = 'CLEAR_COMPARISON_FILTERS';\nconst EXPORT_TO_CSV = 'EXPORT_TO_CSV';\nconst EXPAND_ROW = 'EXPAND_ROW';\nconst REVERT_COMPARE_DATA = 'REVERT_COMPARE_DATA';\nconst TOGGLE_ACTIVE_SORT = 'TOGGLE_ACTIVE_SORT';\nconst UPDATE_REFERENCE_ID = 'UPDATE_REFERENCE_ID';\nconst SELECT_SINGLE_HSP = 'SELECT_SINGLE_HSP';\nconst UPDATE_COLUMNS = 'UPDATE_COLUMNS';\nconst SET_GLOBAL_FILTER_TAGS = 'SET_GLOBAL_FILTER_TAGS';\nconst SET_GLOBAL_FILTER_WORKLOADS = 'SET_GLOBAL_FILTER_WORKLOADS';\nconst SET_GLOBAL_FILTER_SIDS = 'SET_GLOBAL_FILTER_SIDS';\nconst DRIFT_CLEAR_ALL_FILTERS = 'DRIFT_CLEAR_ALL_FILTERS';\nconst DISABLE_SYSTEM_TABLE = 'DISABLE_SYSTEM_TABLE';\n\nexport default {\n    SELECT_ENTITY,\n    FETCH_COMPARE,\n    SET_SELECTED_SYSTEM_IDS,\n    TOGGLE_FACT_SORT,\n    ADD_STATE_FILTER,\n    TOGGLE_STATE_SORT,\n    FILTER_BY_FACT,\n    HANDLE_FACT_FILTER,\n    CLEAR_ALL_FACT_FILTERS,\n    UPDATE_DRIFT_PAGINATION,\n    CLEAR_COMPARISON,\n    CLEAR_COMPARISON_FILTERS,\n    EXPORT_TO_CSV,\n    EXPAND_ROW,\n    REVERT_COMPARE_DATA,\n    TOGGLE_ACTIVE_SORT,\n    UPDATE_REFERENCE_ID,\n    SELECT_SINGLE_HSP,\n    UPDATE_COLUMNS,\n    SET_GLOBAL_FILTER_TAGS,\n    SET_GLOBAL_FILTER_WORKLOADS,\n    SET_GLOBAL_FILTER_SIDS,\n    DRIFT_CLEAR_ALL_FILTERS,\n    DISABLE_SYSTEM_TABLE\n};\n","function getBaseName(pathname) {\n    let release = '/';\n    const pathName = pathname.split('/');\n\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n\n    return `${release}${pathName[0]}/${pathName[1]}`;\n}\n\nexport default getBaseName;\n","/*eslint-disable camelcase*/\nimport axios from 'axios';\nimport { DRIFT_API_ROOT, BASELINE_API_ROOT, HISTORICAL_PROFILES_API_ROOT } from './constants';\n\nasync function post(path, body = {}) {\n    const request = await axios.post(DRIFT_API_ROOT.concat(path), body);\n    return request.data;\n}\n\nasync function getBaselines(path, getParams = {}) {\n    const request = await axios.get(BASELINE_API_ROOT.concat(path), { params: getParams });\n    return request.data;\n}\n\nasync function getBaseline(path) {\n    const request = await axios.get(BASELINE_API_ROOT.concat(path));\n    return request.data.data[0];\n}\n\nasync function getNotificationSystems(path) {\n    const request = await axios.get(BASELINE_API_ROOT.concat(path));\n    return request.data.system_ids;\n}\n\nasync function postSystemNotifications(path, body = {}) {\n    const request = await axios.post(BASELINE_API_ROOT.concat(path), body);\n    return request.data;\n}\n\nasync function patchBaseline(path, body = {}) {\n    let request = await axios.patch(BASELINE_API_ROOT.concat(path), body);\n\n    return request;\n}\n\nasync function postBaseline(path, body = {}) {\n    const request = await axios.post(BASELINE_API_ROOT.concat(path), body);\n    return request.data;\n}\n\nasync function deleteBaselines(path, body = {}) {\n    let response = await axios.post(BASELINE_API_ROOT.concat(path), body);\n\n    return response;\n}\n\nasync function getHistoricalData(path) {\n    let response;\n\n    const request = await axios.get(HISTORICAL_PROFILES_API_ROOT.concat(path))\n    .catch(function (error) {\n        return error.response;\n    });\n\n    if (request.status === 200) {\n        response = request.data.data[0];\n    } else {\n        response = request;\n    }\n\n    return response;\n}\n\nfunction getCompare(systemIds = [], baselineIds = [], historicalSystemProfileIds = [], referenceId = '') {\n    if (!Array.isArray(systemIds)) {\n        systemIds = [ systemIds ];\n    }\n\n    if (!Array.isArray(baselineIds)) {\n        baselineIds = [ baselineIds ];\n    }\n\n    if (!Array.isArray(historicalSystemProfileIds)) {\n        historicalSystemProfileIds = [ historicalSystemProfileIds ];\n    }\n\n    return post('/comparison_report', {\n        system_ids: systemIds,\n        baseline_ids: baselineIds,\n        historical_system_profile_ids: historicalSystemProfileIds,\n        reference_id: referenceId\n    });\n}\n\nfunction getBaselineList(params = {}) {\n    return getBaselines('/baselines', params);\n}\n\nfunction getBaselineData(baselineId = []) {\n    let path = '/baselines/';\n\n    return getBaseline(path.concat(baselineId), {});\n}\n\nfunction patchBaselineData(baselineId = [], apiBody) {\n    let path = '/baselines/';\n\n    return patchBaseline(path.concat(baselineId), apiBody);\n}\n\nfunction deleteBaselinesData(deleteBaselinesAPIBody = []) {\n    let path = '/baselines/deletion_request';\n\n    return deleteBaselines(path, deleteBaselinesAPIBody);\n}\n\nfunction postNewBaseline(apiBody, uuid) {\n    let path = '/baselines';\n    if (uuid !== undefined) {\n        let newPath = path.concat('/', uuid, '?', 'display_name=', apiBody.display_name);\n        return postBaseline(newPath, {});\n    }\n\n    return postBaseline(path, apiBody);\n}\n\nfunction fetchHistoricalData(systemId) {\n    let path = '/systems/';\n    return getHistoricalData(path.concat(systemId));\n}\n\nfunction getBaselineNotification(baselineId) {\n    let path = `/baselines/${baselineId}/systems`;\n    return getNotificationSystems(path);\n}\n\nfunction addSystemNotification(baselineId, systems) {\n    let path = `/baselines/${baselineId}/systems`;\n    let body = { system_ids: systems };\n\n    return postSystemNotifications(path, body);\n}\n\nfunction deleteSystemNotifications(baselineId, systems) {\n    let path = `/baselines/${baselineId}/systems/deletion_request`;\n    let body = { system_ids: systems };\n\n    return postSystemNotifications(path, body);\n}\n\nexport default {\n    getCompare,\n    getBaselineList,\n    getBaselineData,\n    patchBaselineData,\n    deleteBaselinesData,\n    postNewBaseline,\n    fetchHistoricalData,\n    getBaselineNotification,\n    addSystemNotification,\n    deleteSystemNotifications\n};\n/*eslint-enable camelcase*/\n","import version from './../package.json';\nexport const DRIFT_API_ROOT = '/api/drift/v1';\nexport const BASELINE_API_ROOT = '/api/system-baseline/v1';\nexport const HISTORICAL_PROFILES_API_ROOT = '/api/historical-system-profiles/v1';\nexport const ASC = 'asc';\nexport const DESC = 'desc';\nexport const FACT_ID = 0;\nexport const FACT_NAME = 1;\nexport const FACT_VALUE = 2;\nexport const COLUMN_DELIMITER = ',';\nexport const LINE_DELIMITER = '\\n';\n\nexport const API_HEADERS = {\n    'X-Insights-Drift': version,\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n};\n","import { ASC, DESC, COLUMN_DELIMITER, LINE_DELIMITER } from '../../constants';\nimport moment from 'moment';\n\nfunction paginateData(data, selectedPage, factsPerPage) {\n    let paginatedFacts = [];\n\n    if (data === null || !data.length) {\n        return [];\n    }\n\n    for (let i = 0; i < data.length; i++) {\n        if (Math.ceil((i + 1) / factsPerPage) === selectedPage) {\n            paginatedFacts.push(data[i]);\n        }\n    }\n\n    return paginatedFacts;\n}\n\nfunction getStateSelected(state, stateFilters) {\n    let isStateSelected;\n\n    isStateSelected = stateFilters.find(function(stateFilter) {\n        if (stateFilter.filter === state) {\n            return stateFilter.selected;\n        } else if (state === 'INCOMPLETE_DATA_OBFUSCATED') {\n            return getState('INCOMPLETE_DATA', stateFilters).selected;\n        }\n    });\n\n    return isStateSelected;\n}\n\nfunction getState(state, stateFilters) {\n    let isStateSelected;\n\n    stateFilters.find(function(stateFilter) {\n        if (stateFilter.filter === state) {\n            isStateSelected = stateFilter;\n        } else if (state === 'INCOMPLETE_DATA_OBFUSCATED') {\n            isStateSelected = getState('INCOMPLETE_DATA', stateFilters);\n        }\n    });\n\n    return isStateSelected;\n}\n\nfunction setTooltip (data, stateFilters, referenceId) {\n    let type = data.comparisons || data.multivalues ? 'category' : 'row';\n    let state = getState(data.state, stateFilters);\n\n    if (data.state === 'SAME') {\n        data.tooltip = state.display +\n        ' - ' +\n        'All system facts in this ' + type + ' are the same.';\n    } else if (data.state === 'INCOMPLETE_DATA') {\n        data.tooltip = state.display +\n        ' - ' +\n        'At least one system fact value in this ' + type + ' is missing.';\n    } else if (data.state === 'INCOMPLETE_DATA_OBFUSCATED') {\n        data.tooltip = state.display +\n        ' - ' +\n        'At least one system fact value in this ' + type + ' is redacted.';\n    } else {\n        if (referenceId) {\n            data.tooltip = state.display +\n            ' - ' +\n            'At least one system fact value in this ' + type + ' differs from the reference.';\n        } else {\n            data.tooltip = state.display +\n            ' - ' +\n            'At least one system fact value in this ' + type + ' differs.';\n        }\n    }\n}\n\nfunction filterCompareData(data, stateFilters, factFilter, referenceId, activeFactFilters) {\n    let filteredFacts = [];\n    let filteredComparisons = [];\n    let isStateSelected;\n\n    if (data === null || !data.length) {\n        return [];\n    }\n\n    for (let i = 0; i < data.length; i += 1) {\n        isStateSelected = getStateSelected(data[i].state, stateFilters);\n\n        if (data[i].comparisons) {\n            if (data[i].name === factFilter || activeFactFilters?.includes(data[i].name)) {\n                setTooltip(data[i], stateFilters, referenceId);\n                filteredComparisons = filterComparisons(data[i].comparisons, stateFilters, '', referenceId, []);\n                filteredFacts.push({\n                    name: data[i].name,\n                    state: data[i].state,\n                    comparisons: filteredComparisons,\n                    tooltip: data[i].tooltip\n                });\n\n                continue;\n            }\n\n            filteredComparisons = filterComparisons(data[i].comparisons, stateFilters, factFilter, referenceId, activeFactFilters);\n\n            if (filteredComparisons.length) {\n                setTooltip(data[i], stateFilters, referenceId);\n                filteredFacts.push({\n                    name: data[i].name,\n                    state: data[i].state,\n                    comparisons: filteredComparisons,\n                    tooltip: data[i].tooltip\n                });\n            }\n        } else {\n            if (isStateSelected && filterFact(data[i].name, factFilter, activeFactFilters)) {\n                setTooltip(data[i], stateFilters, referenceId);\n                filteredFacts.push(data[i]);\n            }\n        }\n    }\n\n    return filteredFacts;\n}\n\n/*eslint-disable camelcase*/\nfunction filterComparisons(comparisons, stateFilters, factFilter, referenceId, activeFactFilters) {\n    let filteredComparisons = [];\n    let filteredMultivalueItems = [];\n    let isStateSelected;\n\n    for (let i = 0; i < comparisons.length; i++) {\n        if (comparisons[i].multivalues) {\n            filteredMultivalueItems = filterMultiFacts(comparisons[i].multivalues, stateFilters, referenceId);\n            if (filteredMultivalueItems.length && filterFact(comparisons[i].name, factFilter, activeFactFilters)) {\n                setTooltip(comparisons[i], stateFilters, referenceId);\n                filteredComparisons.push({\n                    name: comparisons[i].name,\n                    state: comparisons[i].state,\n                    multivalues: filteredMultivalueItems,\n                    tooltip: comparisons[i].tooltip\n                });\n            }\n        } else {\n            isStateSelected = getStateSelected(comparisons[i].state, stateFilters);\n            if (isStateSelected && filterFact(comparisons[i].name, factFilter, activeFactFilters)) {\n                setTooltip(comparisons[i], stateFilters, referenceId);\n                filteredComparisons.push(comparisons[i]);\n            }\n        }\n    }\n\n    return filteredComparisons;\n}\n/*eslint-enable camelcase*/\n\nfunction filterMultiFacts(multivalueItems, stateFilters, referenceId) {\n    let filteredMultivalueItems = [];\n\n    for (let i = 0; i < multivalueItems.length; i++) {\n        if (getStateSelected(multivalueItems[i].state, stateFilters)) {\n            setTooltip(multivalueItems[i], stateFilters, referenceId);\n            filteredMultivalueItems.push(multivalueItems[i]);\n        }\n    }\n\n    return filteredMultivalueItems;\n}\n\nfunction filterFact(factName, factFilter, activeFactFilters) {\n    let isFiltered = false;\n\n    if (activeFactFilters?.length > 0) {\n        activeFactFilters.forEach(function(filter) {\n            if (factName.includes(filter)) {\n                isFiltered = true;\n            }\n        });\n\n        if (!isFiltered && factFilter.length && factName.includes(factFilter)) {\n            isFiltered = true;\n        }\n\n    } else if (factName.includes(factFilter)) {\n        isFiltered = true;\n    }\n\n    return isFiltered;\n}\n\n/*eslint-disable camelcase*/\nfunction sortData(filteredFacts, factSort, stateSort) {\n    let filteredSubfacts;\n    let newFilteredFacts;\n    let filteredValues;\n\n    newFilteredFacts = sortFacts(filteredFacts, factSort, stateSort);\n\n    newFilteredFacts.forEach(function(fact) {\n        if (fact.comparisons !== undefined && fact.comparisons.length > 0) {\n            filteredSubfacts = sortFacts(fact.comparisons, factSort, stateSort);\n\n            filteredSubfacts.forEach(function(subFact) {\n                if (subFact.multivalues?.length > 0) {\n                    filteredValues = sortFacts(subFact.multivalues, factSort, stateSort);\n                    subFact.multivalues = filteredValues;\n                }\n            });\n\n            fact.comparisons = filteredSubfacts;\n        }\n    });\n\n    return newFilteredFacts;\n}\n/*eslint-enable camelcase*/\n\nfunction sortFacts(filteredFacts, factSort, stateSort) {\n    if (stateSort === ASC) {\n        filteredFacts.sort(function(a, b) {\n            if (a.state.toLowerCase() > b.state.toLowerCase()) {\n                return -1;\n            }\n            else if (a.state.toLowerCase() < b.state.toLowerCase()) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n    }\n\n    if (stateSort === DESC) {\n        filteredFacts.sort(function(a, b) {\n            if (b.state.toLowerCase() > a.state.toLowerCase()) {\n                return -1;\n            }\n            else if (b.state.toLowerCase() < a.state.toLowerCase()) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n    }\n\n    if (factSort === ASC) {\n        filteredFacts.sort(function(a, b) {\n            if (stateSort === '') {\n                if (a.name?.toLowerCase() > b.name?.toLowerCase()) {\n                    return 1;\n                }\n                else if (a.name?.toLowerCase() < b.name?.toLowerCase()) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            }\n            else {\n                if ((a.name?.toLowerCase() > b.name?.toLowerCase()) && (a.state === b.state)) {\n                    return 1;\n                }\n                else if ((a.name?.toLowerCase() < b.name?.toLowerCase()) && (a.state === b.state)) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            }\n        });\n    }\n    else if (factSort === DESC) {\n        filteredFacts.sort(function(a, b) {\n            if (stateSort === '') {\n                if (b.name?.toLowerCase() > a.name?.toLowerCase()) {\n                    return 1;\n                }\n                else if (b.name?.toLowerCase() < a.name?.toLowerCase()) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            }\n            else {\n                if ((b.name?.toLowerCase() > a.name?.toLowerCase()) && (a.state === b.state)) {\n                    return 1;\n                }\n                else if ((b.name?.toLowerCase() < a.name?.toLowerCase()) && (a.state === b.state)) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            }\n        });\n    }\n\n    return filteredFacts;\n}\n\nfunction addRow(fact) {\n    let factName = fact.name ? fact.name : '';\n    let value = '';\n    let result = '';\n\n    result += factName + COLUMN_DELIMITER;\n    result += fact.state + COLUMN_DELIMITER;\n\n    if (fact.systems) {\n        fact.systems.forEach(function(system) {\n            value = system.value ? system.value.replace(/,/g, '') : '';\n            result += value;\n            result += COLUMN_DELIMITER;\n        });\n    } else if (fact.multivalues) {\n        fact.multivalues.forEach(function(value) {\n            result += LINE_DELIMITER;\n            result += addRow(value);\n        });\n    }\n\n    return result;\n}\n\nfunction convertFactsToCSV(data, systems) {\n    if (data === null || !data.length) {\n        return null;\n    }\n\n    let systemNames = systems.map(system => system.display_name);\n    let mappedDates = systems.map(system => system.last_updated ? system.last_updated : system.updated);\n    let systemUpdates = [];\n    mappedDates.forEach((date) => {\n        systemUpdates.push(moment.utc(date).format('DD MMM YYYY HH:mm UTC'));\n    });\n\n    let headers = 'Fact,State,';\n    systemNames = systemNames.join(COLUMN_DELIMITER);\n    let result = headers + systemNames + LINE_DELIMITER;\n\n    systemUpdates = systemUpdates.join(COLUMN_DELIMITER);\n    result += COLUMN_DELIMITER + COLUMN_DELIMITER + systemUpdates + LINE_DELIMITER;\n\n    data.forEach(function(fact) {\n        result += addRow(fact);\n        result += LINE_DELIMITER;\n\n        if (fact.comparisons) {\n            fact.comparisons.forEach(function(subFact) {\n                result += '     ';\n                result += addRow(subFact);\n                result += LINE_DELIMITER;\n            });\n        }\n    });\n\n    return result;\n}\n\nfunction downloadCSV(driftData, systems) {\n    let csv = convertFactsToCSV(driftData, systems);\n\n    if (csv === null) {\n        return;\n    }\n\n    let filename = 'system-comparison-export-';\n    let today = new Date();\n    filename += today.toISOString();\n    filename += '.csv';\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = 'data:text/csv;charset=utf-8,' + csv;\n    }\n\n    let data = encodeURI(csv);\n\n    let link = document.createElement('a');\n    link.setAttribute('href', data);\n    link.setAttribute('download', filename);\n    link.dispatchEvent(new MouseEvent(`click`, { bubbles: true, cancelable: true, view: window }));\n}\n\nfunction toggleExpandedRow(expandedRows, factName) {\n    if (expandedRows.includes(factName)) {\n        expandedRows = expandedRows.filter(fact => fact !== factName);\n    } else {\n        expandedRows.push(factName);\n    }\n\n    return expandedRows;\n}\n\nfunction updateStateFilters(stateFilters, updatedStateFilter) {\n    let newStateFilters = [];\n\n    stateFilters.forEach(function (stateFilter) {\n        if (stateFilter.filter === updatedStateFilter.filter) {\n            newStateFilters.push(updatedStateFilter);\n        } else {\n            newStateFilters.push(stateFilter);\n        }\n    });\n\n    return newStateFilters;\n}\n\nfunction findFilterIndex(filter, activeFactFilters) {\n    return activeFactFilters.indexOf(filter);\n}\n\nexport default {\n    paginateData,\n    getStateSelected,\n    getState,\n    setTooltip,\n    filterCompareData,\n    filterComparisons,\n    filterMultiFacts,\n    filterFact,\n    sortData,\n    downloadCSV,\n    toggleExpandedRow,\n    updateStateFilters,\n    findFilterIndex\n};\n","import types from './types';\nimport { ASC, DESC } from '../../constants';\nimport reducerHelpers from './helpers';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\n\nconst initialState = {\n    fullCompareData: [],\n    filteredCompareData: [],\n    sortedFilteredFacts: [],\n    referenceId: undefined,\n    systems: [],\n    baselines: [],\n    historicalProfiles: [],\n    previousStateSystems: [],\n    stateFilters: [\n        {\n            filter: 'SAME',\n            display: 'Same',\n            selected: true\n        },\n        {\n            filter: 'DIFFERENT',\n            display: 'Different',\n            selected: true\n        },\n        {\n            filter: 'INCOMPLETE_DATA',\n            display: 'Incomplete data',\n            selected: true\n        }\n    ],\n    factFilter: '',\n    activeFactFilters: [],\n    totalFacts: 0,\n    page: 1,\n    factSort: ASC,\n    stateSort: DESC,\n    perPage: 50,\n    loading: false,\n    expandedRows: [],\n    error: {},\n    emptyState: true\n};\n\nexport function compareReducer(state = initialState, action) {\n    let filteredFacts;\n    let sortedFacts;\n    let paginatedFacts;\n    let newExpandedRows;\n    let errorObject = {};\n    let response;\n    let updatedStateFilters = [];\n    let newStateFilters;\n    let newActiveFactFilters = [];\n    let index;\n    let newFactFilter;\n\n    switch (action.type) {\n        case types.CLEAR_COMPARISON:\n            return {\n                ...initialState,\n                stateFilters: state.stateFilters,\n                factFilter: state.factFilter,\n                activeFactFilters: state.activeFactFilters,\n                factSort: state.factSort,\n                stateSort: state.stateSort,\n                perPage: state.perPage,\n                expandedRows: [],\n                historicalProfiles: []\n            };\n        case types.CLEAR_COMPARISON_FILTERS:\n            newStateFilters = [ ...state.stateFilters ];\n            newStateFilters.forEach(function(stateFilter) { stateFilter.selected = false; });\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, newStateFilters, initialState.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            return {\n                ...state,\n                filteredCompareData: filteredFacts,\n                sortedFilteredFacts: sortedFacts,\n                stateFilters: newStateFilters,\n                factFilter: '',\n                activeFactFilters: [],\n                totalFacts: filteredFacts.length,\n                page: 1\n            };\n        case types.REVERT_COMPARE_DATA:\n            return {\n                ...state,\n                loading: false,\n                error: {},\n                systems: state.previousStateSystems\n            };\n        case `${types.FETCH_COMPARE}_PENDING`:\n            return {\n                ...state,\n                previousStateSystems: state.systems,\n                systems: [],\n                baselines: [],\n                historicalProfiles: [],\n                loading: true,\n                emptyState: false\n            };\n        case `${types.FETCH_COMPARE}_FULFILLED`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                action.payload.facts, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n\n            return {\n                ...state,\n                loading: false,\n                fullCompareData: action.payload.facts,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                systems: action.payload.systems || [],\n                baselines: action.payload.baselines || [],\n                historicalProfiles: action.payload.historical_system_profiles || [],\n                page: 1,\n                totalFacts: filteredFacts.length,\n                emptyState: (action.payload.systems.concat(action.payload.baselines).concat(action.payload.historical_system_profiles)).length === 0\n            };\n        case `${types.FETCH_COMPARE}_REJECTED`:\n            response = action.payload.response;\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                loading: false,\n                error: errorObject,\n                emptyState: true\n            };\n        case `${types.UPDATE_DRIFT_PAGINATION}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, action.payload.page, action.payload.perPage);\n            return {\n                ...state,\n                page: action.payload.page,\n                perPage: action.payload.perPage,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.ADD_STATE_FILTER}`:\n            updatedStateFilters = reducerHelpers.updateStateFilters(state.stateFilters, action.payload);\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, updatedStateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                stateFilters: updatedStateFilters,\n                page: 1,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.FILTER_BY_FACT}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, action.payload, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                factFilter: action.payload,\n                page: 1,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.HANDLE_FACT_FILTER}`:\n            newActiveFactFilters = [ ...state.activeFactFilters ];\n            index = reducerHelpers.findFilterIndex(action.payload, state.activeFactFilters);\n\n            if (index > -1) {\n                newActiveFactFilters.splice(index, 1);\n                newFactFilter = state.factFilter;\n            } else {\n                newActiveFactFilters.push(action.payload);\n                newFactFilter = '';\n            }\n\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, newFactFilter, state.referenceId, newActiveFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n\n            return {\n                ...state,\n                factFilter: newFactFilter,\n                activeFactFilters: newActiveFactFilters,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.CLEAR_ALL_FACT_FILTERS}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, '', state.referenceId, newActiveFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                factFilter: '',\n                activeFactFilters: [],\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.TOGGLE_FACT_SORT}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, action.payload, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                page: 1,\n                factSort: action.payload,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.TOGGLE_STATE_SORT}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, action.payload);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                page: 1,\n                stateSort: action.payload,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.EXPORT_TO_CSV}`:\n            reducerHelpers.downloadCSV(state.sortedFilteredFacts, [ ...state.baselines, ...state.systems, ...state.historicalProfiles ]);\n            return {\n                ...state\n            };\n        case `${types.EXPAND_ROW}`:\n            newExpandedRows = reducerHelpers.toggleExpandedRow(state.expandedRows, action.payload);\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, state.page, state.perPage);\n            return {\n                ...state,\n                expandedRows: newExpandedRows,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.UPDATE_REFERENCE_ID}`:\n            return {\n                ...state,\n                referenceId: action.payload\n            };\n\n        default:\n            return {\n                ...state\n            };\n    }\n}\n\nexport const globalFilterReducer = applyReducerHash({\n    [types.SET_GLOBAL_FILTER_TAGS]: (state = {}, action) => ({\n        ...state,\n        tagsFilter: action.payload\n    }),\n    [types.SET_GLOBAL_FILTER_WORKLOADS]: (state = {}, action) => ({\n        ...state,\n        workloadsFilter: action.payload\n    }),\n    [types.SET_GLOBAL_FILTER_SIDS]: (state = {}, action) => ({\n        ...state,\n        sidsFilter: action.payload\n    })\n});\n","import React from 'react';\nimport { ClockIcon } from '@patternfly/react-icons';\n\nfunction makeSelections(content, isSelected, selectedContent) {\n    let newSelectedContent = [];\n    let exists;\n\n    if (!isSelected) {\n        for (let i = 0; i < selectedContent.length; i++) {\n            exists = false;\n            content.forEach(function(item) {\n                if (item.id === selectedContent[i].id) {\n                    exists = true;\n                }\n            });\n\n            if (!exists) {\n                newSelectedContent.push(selectedContent[i]);\n            }\n        }\n    } else {\n        newSelectedContent = [ ...selectedContent ];\n\n        content.forEach(function(item) {\n            newSelectedContent.push(item);\n        });\n    }\n\n    return newSelectedContent;\n}\n\nfunction makeHSPSelections(content, selectedContent) {\n    let newSelectedContent = [];\n    let exists = false;\n\n    selectedContent?.forEach(function(hsp) {\n        if (hsp.id !== content.id) {\n            if (!content.icon) {\n                content.icon = <ClockIcon />;\n            }\n\n            newSelectedContent.push(hsp);\n        } else {\n            exists = true;\n        }\n    });\n\n    if (!exists) {\n        content.icon = <ClockIcon />;\n        newSelectedContent.push(content);\n    }\n\n    return newSelectedContent;\n}\n\nexport default {\n    makeSelections,\n    makeHSPSelections\n};\n","import types from './types';\nimport helpers from './helpers';\n\nconst initialState = {\n    addSystemModalOpened: false,\n    activeTab: 0,\n    selectedSystemIds: [],\n    selectedSystemContent: [],\n    selectedBaselineContent: [],\n    selectedHSPContent: []\n};\n\nexport function addSystemModalReducer(state = initialState, action) {\n    let newSelectedContent;\n\n    switch (action.type) {\n        case `${types.OPEN_ADD_SYSTEM_MODAL}`:\n            return {\n                ...state,\n                addSystemModalOpened: !state.addSystemModalOpened\n            };\n        case `${types.SELECT_ACTIVE_TAB}`:\n            return {\n                ...state,\n                activeTab: action.payload\n            };\n        case `${types.SET_SELECTED_SYSTEMS_COMPARISON}`:\n            return {\n                ...state,\n                selectedSystemIds: action.payload\n            };\n        case `${types.HANDLE_SYSTEM_SELECTION}`:\n            newSelectedContent = helpers.makeSelections(action.payload.content, action.payload.isSelected, state.selectedSystemContent);\n\n            return {\n                ...state,\n                selectedSystemContent: newSelectedContent\n            };\n        case `${types.HANDLE_BASELINE_SELECTION}`:\n            newSelectedContent = helpers.makeSelections(action.payload.content, action.payload.isSelected, state.selectedBaselineContent);\n\n            return {\n                ...state,\n                selectedBaselineContent: newSelectedContent\n            };\n        case `${types.HANDLE_HSP_SELECTION}`:\n            newSelectedContent = helpers.makeHSPSelections(action.payload, state.selectedHSPContent);\n\n            return {\n                ...state,\n                selectedHSPContent: newSelectedContent\n            };\n\n        default:\n            return state;\n    }\n}\n","import types from './types';\n\nconst initialState = {\n    filterDropdownOpened: false\n};\n\nexport function filterDropdownReducer(filterDropdownOpened = initialState.filterDropdownOpened, action) {\n    switch (action.type) {\n        case `${types.OPEN_FILTER_DROPDOWN}`:\n            return !filterDropdownOpened;\n\n        default:\n            return filterDropdownOpened;\n    }\n}\n","import types from './types';\n\nconst initialState = {\n    createBaselineModalOpened: false,\n    baselineDataLoading: false,\n    baselineData: undefined,\n    createBaselineError: {}\n};\n\nexport function createBaselineModalReducer(state = initialState, action) {\n    let response = '';\n    let errorObject = {};\n\n    switch (action.type) {\n        case `${types.TOGGLE_CREATE_BASELINE_MODAL}`:\n            return {\n                ...state,\n                createBaselineModalOpened: !state.createBaselineModalOpened,\n                createBaselineError: {}\n            };\n        case `${types.CREATE_BASELINE}_PENDING`:\n            return {\n                ...state,\n                baselineDataLoading: true,\n                baselineData: {},\n                createBaselineError: {}\n            };\n        case `${types.CREATE_BASELINE}_FULFILLED`:\n            return {\n                ...state,\n                baselineDataLoading: false,\n                baselineData: action.payload\n            };\n        case `${types.CREATE_BASELINE}_REJECTED`:\n            response = action.payload.response;\n\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                baselineDataLoading: false,\n                createBaselineError: errorObject\n            };\n\n        default:\n            return state;\n    }\n}\n","import types from './types';\nimport editBaselineHelpers from '../EditBaseline/helpers';\nimport helpers from '../../../helpers';\nimport { FACT_VALUE } from '../../../../constants';\n\nconst initialState = {\n    baselineData: undefined,\n    baselineDataLoading: false,\n    editBaselineTableData: [],\n    editBaselineError: {},\n    inlineError: {},\n    expandedRows: [],\n    factModalOpened: false,\n    factName: '',\n    factValue: '',\n    factData: [],\n    isCategory: false,\n    isSubFact: false,\n    editBaselineEmptyState: false\n};\n\nexport function editBaselineReducer(state = initialState, action) {\n    let errorObject = {};\n    let newEditBaselineTableData = [];\n    let newExpandedRows = [];\n    let response;\n\n    switch (action.type) {\n        case `${types.FETCH_BASELINE_DATA}_PENDING`:\n            return {\n                ...state,\n                baselineDataLoading: true\n            };\n        case `${types.FETCH_BASELINE_DATA}_FULFILLED`:\n            newEditBaselineTableData = editBaselineHelpers.buildBaselineTableData(action.payload.baseline_facts);\n            return {\n                ...state,\n                baselineDataLoading: false,\n                baselineData: action.payload,\n                editBaselineTableData: newEditBaselineTableData,\n                editBaselineEmptyState: action.payload.baseline_facts.length === 0\n            };\n        case `${types.FETCH_BASELINE_DATA}_REJECTED`:\n            response = action.payload.response;\n\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                baselineDataLoading: false,\n                editBaselineError: errorObject,\n                editBaselineEmptyState: true\n            };\n        case `${types.CLEAR_EDIT_BASELINE_DATA}`:\n            return {\n                ...state,\n                baselineData: undefined,\n                editBaselineTableData: [],\n                expandedRows: []\n            };\n        case `${types.PATCH_BASELINE}_PENDING`:\n            return {\n                ...state,\n                inlineError: {},\n                baselineDataLoading: true\n            };\n        case `${types.PATCH_BASELINE}_FULFILLED`:\n            return {\n                ...state,\n                baselineDataLoading: false,\n                baselineData: action.payload.data[0]\n            };\n        case `${types.PATCH_BASELINE}_REJECTED`:\n            response = action.payload.response;\n\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                baselineDataLoading: false,\n                inlineError: errorObject\n            };\n        case `${types.DELETE_BASELINE_DATA}_PENDING`:\n            return {\n                ...state,\n                baselineDataLoading: true\n            };\n        case `${types.DELETE_BASELINE_DATA}_FULFILLED`:\n            return {\n                ...state,\n                baselineDataLoading: false,\n                baselineData: action.payload.data[0],\n                editBaselineEmptyState: action.payload.data[0].baseline_facts.length < 1\n            };\n        case `${types.DELETE_BASELINE_DATA}_REJECTED`:\n            response = action.payload.response;\n\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                baselineDataLoading: false,\n                editBaselineError: errorObject\n            };\n        case `${types.EXPAND_PARENT_FACT}`:\n            newExpandedRows = editBaselineHelpers.toggleExpandedRow(state.expandedRows, action.payload);\n            return {\n                ...state,\n                expandedRows: newExpandedRows\n            };\n        case `${types.TOGGLE_FACT_MODAL}`:\n            return {\n                ...state,\n                editBaselineError: {},\n                factModalOpened: !state.factModalOpened,\n                inlineError: {}\n            };\n        case `${types.SET_FACT_DATA}`:\n            return {\n                ...state,\n                factName: action.payload.factName,\n                factValue: action.payload.factValue,\n                factData: action.payload.fact,\n                isCategory: action.payload.isCategory,\n                isSubFact: action.payload.isSubFact\n            };\n        case `${types.SELECT_FACT}`:\n            newEditBaselineTableData = [ ...state.editBaselineTableData ];\n\n            newEditBaselineTableData.map(row => {\n                let factId = row[0];\n                if (action.payload.ids.includes(factId)) {\n                    row.selected = action.payload.isSelected;\n                }\n\n                if (editBaselineHelpers.isCategory(row) && row[FACT_VALUE].length > 0) {\n                    editBaselineHelpers.baselineSubFacts(row).map(subFact => {\n                        let subFactId = subFact[0];\n                        if (action.payload.ids.includes(subFactId)) {\n                            subFact.selected = action.payload.isSelected;\n                        }\n                    });\n\n                    row.selected = editBaselineHelpers.isAllSelected(editBaselineHelpers.baselineSubFacts(row));\n                }\n            });\n\n            return {\n                ...state,\n                editBaselineTableData: newEditBaselineTableData.slice()\n            };\n        case `${types.CLEAR_ERROR_DATA}`:\n            return {\n                ...state,\n                editBaselineError: {},\n                inlineError: {},\n                baselineDataLoading: false\n            };\n        case `${types.EXPORT_BASELINE_DATA_TO_CSV}`:\n            helpers.downloadCSV(action.payload);\n            return {\n                ...state\n            };\n\n        default:\n            return state;\n    }\n}\n","import types from './types';\n\nconst initialState = {\n    selectedHSPIds: []\n};\n\nexport function historicProfilesReducer(state = initialState, action) {\n    let id;\n    let selected;\n\n    switch (action.type) {\n        case types.SELECT_HISTORIC_PROFILES:\n\n            return {\n                ...state,\n                selectedHSPIds: action.payload\n            };\n        case 'SELECT_ENTITY':\n            id = action.payload.id;\n            selected = action.payload.selected;\n\n            return {\n                ...state,\n                selectedHSPIds: id === 0 && !selected ? [] : state.selectedHSPIds\n            };\n        case 'CLEAR_COMPARISON':\n            return {\n                selectedHSPIds: []\n            };\n\n        default:\n            return {\n                ...state\n            };\n    }\n}\n","import types from './types';\n\nconst initialState = {\n    deleteNotificationsModalOpened: false,\n    systemsToDelete: [],\n    systemNotificationIds: undefined,\n    systemNotificationLoaded: false\n};\n\nexport function systemNotificationsReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.TOGGLE_DELETE_NOTIFICATION_MODAL:\n            return {\n                ...state,\n                deleteNotificationsModalOpened: !state.deleteNotificationsModalOpened\n            };\n        case types.SET_SYSTEMS_TO_DELETE:\n            return {\n                ...state,\n                systemsToDelete: action.payload\n            };\n        case `${types.DELETE_NOTIFICATIONS}_FULFILLED`:\n            return {\n                ...state,\n                systemsToDelete: []\n            };\n        case `${types.GET_NOTIFICATIONS}_PENDING`:\n            return {\n                ...state,\n                systemNotificationIds: undefined,\n                systemNotificationLoaded: false\n            };\n        case `${types.GET_NOTIFICATIONS}_FULFILLED`:\n            return {\n                ...state,\n                systemNotificationIds: action.payload,\n                systemNotificationLoaded: true\n            };\n        case `${types.ADD_NOTIFICATIONS}_FULFILLED`:\n            return {\n                ...state\n            };\n\n        default:\n            return {\n                ...state\n            };\n    }\n}\n","import promiseMiddleware from 'redux-promise-middleware';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/files/Registry';\n\nimport { compareReducer, globalFilterReducer } from '../SmartComponents/modules/reducers';\nimport { addSystemModalReducer } from '../SmartComponents/AddSystemModal/redux/addSystemModalReducer';\nimport { baselinesTableRootReducer } from '../SmartComponents/BaselinesTable/redux';\nimport { filterDropdownReducer } from '../SmartComponents/DriftPage/FilterDropDown/redux/filterDropdownReducer';\nimport { createBaselineModalReducer } from '../SmartComponents/BaselinesPage/CreateBaselineModal/redux/reducers';\nimport { editBaselineReducer } from '../SmartComponents/BaselinesPage/EditBaselinePage/redux/reducers';\nimport { historicProfilesReducer } from '../SmartComponents/HistoricalProfilesPopover/redux/reducers';\nimport { systemNotificationsReducer } from '../SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/redux/reducer';\n\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/files/MiddlewareListener';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nexport { default as reducers } from './reducers';\n\nlet registry;\nlet middlewareListener;\n\nexport const createMiddlewareListener = () => {\n    middlewareListener = new MiddlewareListener();\n    return middlewareListener;\n};\n\nexport function init (...middleware) {\n    createMiddlewareListener();\n\n    registry = getRegistry({}, [\n        promiseMiddleware(),\n        middlewareListener.getMiddleware(),\n        ...middleware.filter(item => typeof item !== 'undefined')\n    ]);\n\n    registry.register({\n        compareState: compareReducer,\n        addSystemModalState: addSystemModalReducer,\n        baselinesTableState: baselinesTableRootReducer,\n        filterDropdownOpened: filterDropdownReducer,\n        createBaselineModalState: createBaselineModalReducer,\n        editBaselineState: editBaselineReducer,\n        historicProfilesState: historicProfilesReducer,\n        systemNotificationsState: systemNotificationsReducer,\n        notifications,\n        globalFilterState: globalFilterReducer\n    });\n\n    return registry;\n}\n\nexport function getStore () {\n    return registry.getStore();\n}\n\nexport function register (...args) {\n    return registry.register(...args);\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Dropdown, KebabToggle, DropdownItem, DropdownPosition } from '@patternfly/react-core';\n\nexport class SystemKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            kebabOpened: false\n        };\n\n        this.toggleKebab = () => {\n            const { kebabOpened } = this.state;\n\n            this.setState({ kebabOpened: !kebabOpened });\n        };\n    }\n\n    buildDropdownItems = () => {\n        const { deleteNotifications, systemIds } = this.props;\n        let dropdownItems = [];\n\n        dropdownItems.push(\n            <DropdownItem\n                key=\"delete-baseline-notification\"\n                component=\"button\"\n                data-ouia-component-id='delete-baseline-notification'\n                onClick={ () => deleteNotifications(systemIds) }\n            >\n                Delete notification\n            </DropdownItem>\n        );\n\n        return dropdownItems;\n    }\n\n    render() {\n        const { kebabOpened } = this.state;\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    style={{ float: 'right' }}\n                    toggle={ <KebabToggle\n                        data-ouia-component-id='system-notification-dropdown'\n                        data-ouia-component-type='PF4/DropdownToggle'\n                        onToggle={ () => this.toggleKebab() } /> }\n                    isOpen={ kebabOpened }\n                    dropdownItems={ this.buildDropdownItems() }\n                    isPlain\n                    ouiaId='system-notification-dropdown'\n                    position={ DropdownPosition.right }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nSystemKebab.propTypes = {\n    systemIds: PropTypes.array,\n    deleteNotifications: PropTypes.func\n};\n\nexport default SystemKebab;\n","/*eslint-disable camelcase*/\nimport React from 'react';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport HistoricalProfilesPopover from '../SmartComponents/HistoricalProfilesPopover/HistoricalProfilesPopover';\nimport SystemKebab from '../SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/SystemKebab/SystemKebab';\nimport { ServerIcon } from '@patternfly/react-icons';\n\nimport types from '../SmartComponents/modules/types';\nimport helpers from '../SmartComponents/helpers';\n\nfunction selectedReducer(\n    INVENTORY_ACTIONS, baselineId, createBaselineModal, historicalProfiles, hasMultiSelect, hasHistoricalDropdown,\n    deselectHistoricalProfiles, isAddSystemNotifications, selectHistoricProfiles, systemNotificationIds, selectSystemsToAdd,\n    deleteNotifications\n) {\n    let newColumns;\n    let systemIds;\n\n    return applyReducerHash({\n        [INVENTORY_ACTIONS.LOAD_ENTITIES_FULFILLED]: (state, action) => {\n            newColumns = [ ...state.columns ];\n\n            for (let i = 0; i < action.payload.results.length; i += 1) {\n                if (state.selectedSystemIds.includes(action.payload.results[i].id)) {\n                    action.payload.results[i].selected = true;\n                }\n            }\n\n            let rows = mergeArraysByKey([ action.payload.results, state.rows ]);\n\n            if (historicalProfiles !== undefined) {\n                if (!newColumns.find(({ key }) => key === 'historical_profiles') && hasHistoricalDropdown) {\n                    newColumns.push({\n                        key: 'historical_profiles',\n                        title: 'Historical profiles',\n                        props: {\n                            isStatic: true,\n                            width: 10\n                        }\n                    });\n                }\n\n                if (newColumns.find(({ key }) => key === 'system_notification')) {\n                    newColumns.splice(newColumns.findIndex(({ key }) => key === 'system_notification'), 1);\n                }\n\n                rows.forEach(function(row) {\n                    let badgeCount = 0;\n                    let systemInfo = {\n                        id: row.id,\n                        last_updated: row.updated\n                    };\n\n                    historicalProfiles.forEach(function(profile) {\n                        if (profile.system_id === row.id) {\n                            badgeCount += 1;\n                        }\n                    });\n\n                    row.historical_profiles = <React.Fragment>\n                        <HistoricalProfilesPopover\n                            system={ systemInfo }\n                            hasBadge={ true }\n                            badgeCount={ badgeCount }\n                            hasMultiSelect={ hasMultiSelect }\n                            selectHistoricProfiles={ selectHistoricProfiles }\n                            systemName={ row.display_name }\n                        />\n                    </React.Fragment>;\n                });\n            }\n\n            if (isAddSystemNotifications) {\n                rows.forEach(function(row) {\n                    if (systemNotificationIds.includes(row.id)) {\n                        row.selected = true;\n                        row.disableSelection = true;\n                    }\n                });\n            }\n\n            if (baselineId && !isAddSystemNotifications) {\n                if (!newColumns.find(({ key }) => key === 'system_notification')) {\n                    newColumns.push({\n                        key: 'system_notification',\n                        title: '',\n                        props: {\n                            isStatic: true\n                        }\n                    });\n                }\n\n                if (newColumns.find(({ key }) => key === 'historical_profiles')) {\n                    newColumns.splice(newColumns.findIndex(({ key }) => key === 'historical_profiles'), 1);\n                }\n\n                newColumns.forEach(function(column) {\n                    if (column.props) {\n                        column.props.isStatic = true;\n                    } else {\n                        column.props = { isStatic: true };\n                    }\n                });\n\n                rows.forEach(function(row) {\n                    systemIds = [ row.id ];\n\n                    row.system_notification = <React.Fragment>\n                        <SystemKebab\n                            systemIds={ systemIds }\n                            deleteNotifications={ deleteNotifications }\n                        />\n                    </React.Fragment>;\n                });\n            }\n            /*eslint-enable camelcase*/\n\n            /* Hide link on systems table */\n            newColumns.forEach(function(column, index) {\n                if (!column.props) {\n                    column.props = {};\n                }\n\n                if (hasHistoricalDropdown) {\n                    if (column.key === 'display_name' || column.key === 'display_selected_hsp') {\n                        column.props.width = 20;\n                        if (newColumns.find(({ key }) => key === 'display_selected_hsp')) {\n                            let displaySelectedHSP = newColumns.splice(newColumns.findIndex(({ key }) => key === 'display_selected_hsp'), 1);\n                            newColumns.splice(index, 1, displaySelectedHSP[0]);\n                        }\n                    } else {\n                        column.props.width = 10;\n                    }\n                } else {\n                    column.props.width = null;\n                }\n\n                if (column.composed) {\n                    delete column.composed;\n                }\n            });\n\n            return {\n                ...state,\n                columns: newColumns,\n                rows: state.selectedHSP && !hasMultiSelect\n                    ? helpers.buildSystemsTableWithSelectedHSP(rows, state.selectedHSP, deselectHistoricalProfiles)\n                    : rows\n            };\n        },\n        [types.DRIFT_CLEAR_ALL_FILTERS]: (state) => ({\n            ...state,\n            activeFilters: undefined\n        }),\n        [types.UPDATE_COLUMNS]: (state, action) => {\n            let nameColumn = {\n                key: action.payload,\n                title: 'Name',\n                props: { width: 20 }\n            };\n            newColumns = [ ...state.columns ];\n            newColumns.shift();\n            newColumns.unshift(nameColumn);\n\n            return {\n                ...state,\n                columns: newColumns\n            };\n        },\n        [types.SELECT_ENTITY]: (state, action) => {\n            let id = action.payload.id;\n            let selected = action.payload.selected;\n            let { selectedSystemIds } = state;\n            let newRows = [];\n            let selectedSystems = [];\n\n            if (id === 0) {\n                if (createBaselineModal) {\n                    newRows = state.rows.map(function (oneRow) {\n                        oneRow.selected = false;\n                        return oneRow;\n                    });\n\n                    selectedSystemIds = [];\n                } else {\n                    if (selected) {\n                        let ids = state.rows.map(function (item) {\n                            return item.id;\n                        });\n                        selectedSystemIds = [ ...new Set(selectedSystemIds.concat(ids)) ];\n                    } else {\n                        if (action.payload.bulk) {\n                            selectedSystemIds = [];\n                        } else {\n                            for (let i = 0; i < state.rows.length; i += 1) {\n                                selectedSystemIds = selectedSystemIds.filter(item => item !== state.rows[i].id);\n                            }\n                        }\n                    }\n                }\n            } else if (selected && id !== null) {\n                if (createBaselineModal) {\n                    newRows = state.rows.map(function (oneRow) {\n                        if (oneRow.id === id) {\n                            oneRow.selected = true;\n                        } else {\n                            oneRow.selected = false;\n                        }\n\n                        return oneRow;\n                    });\n\n                    selectedSystemIds.pop();\n                }\n\n                selectedSystemIds.push(id);\n            } else {\n                selectedSystemIds = selectedSystemIds.filter(item => item !== id);\n            }\n\n            if (isAddSystemNotifications) {\n                selectSystemsToAdd(selectedSystemIds);\n            }\n\n            if (newRows.length === 0) {\n                state.rows.forEach(function(row) {\n                    if (row.selected) {\n                        selectedSystems.push({ id: row.id, name: row.display_name, icon: <ServerIcon /> });\n                    }\n                });\n            }\n\n            return {\n                ...state,\n                selectedSystemIds,\n                selectedSystems,\n                rows: newRows.length > 0 ? newRows : state.rows,\n                columns: newColumns\n            };\n        },\n        [types.SET_SELECTED_SYSTEM_IDS]: (state, action) => {\n            return {\n                ...state,\n                rows: [],\n                loaded: false,\n                selectedSystemIds: action.payload.selectedSystemIds\n            };\n        },\n        [types.SELECT_SINGLE_HSP]: (state, action) => {\n            if (!action.payload) {\n                newColumns = [ ...state.columns ];\n                newColumns.forEach(function(column) {\n                    if (column.key === 'display_selected_hsp') {\n                        column.key = 'display_name';\n                    }\n                });\n            }\n\n            return {\n                ...state,\n                rows: action.payload\n                    ? helpers.buildSystemsTableWithSelectedHSP([ ...state.rows ], action.payload, deselectHistoricalProfiles)\n                    : state.rows,\n                columns: action.payload\n                    ? state.columns\n                    : newColumns,\n                selectedSystemIds: action.payload\n                    ? []\n                    : state.selectedSystemIds,\n                selectedHSP: action.payload\n            };\n        },\n        [types.DISABLE_SYSTEM_TABLE]: (state, action) => {\n            state.rows.forEach(function(row) {\n                row.disableSelection = action.payload;\n            });\n\n            return {\n                ...state\n            };\n        }\n    });\n}\n\nexport default selectedReducer;\n/*eslint-enable camelcase*/\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../node_modules/css-loader/dist/cjs.js!../node_modules/@redhat-cloud-services/frontend-components/index.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../node_modules/css-loader/dist/cjs.js!../node_modules/@redhat-cloud-services/frontend-components-notifications/index.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".drift{}.drift :root{--ins-color--orange: #ec7a08}.drift button:focus{outline:none}.drift .ins-c-primary-toolbar__pagination{margin-left:auto}.drift [data-label=\\\"Name\\\"]{cursor:pointer}.drift .highlight{background-color:#F5F5F5}.drift .pointer{cursor:pointer}.drift .active-blue{color:#0066CC}.drift .not-active{color:#737679}.drift .not-active:hover{color:#151515}.drift .pf-c-card__body{padding-left:0;padding-right:0}.drift .pf-c-card>:last-child.pf-c-card__body{padding-top:0;padding-bottom:0}.drift .fact-state{border-right:1px solid #CCC;padding-right:2px}.drift .sticky-column-header .active-sort{border-bottom:3px solid #0066CC}.drift .comparison-header .drift-header-icon{position:absolute}.drift .comparison-header svg{margin-right:8px;font-size:1.25em}.drift .reference-header{overflow:visible;border-top:1px solid #CCC;background:#DEF3FF}.drift .baseline-header{overflow:visible;border-top:1px solid #CCC;background:#FFF}.drift .system-header{overflow:visible;border-top:1px solid #CCC;background-color:#ededed}.drift .dropdown-empty-state-width .pf-c-dropdown__menu{width:300px}.drift .historical-system-profile-header{overflow:visible;border-top:1px solid #CCC;background-color:#f9e0a2}.drift .add-system-header{background-color:#F5F5F5;padding:20px 20px;text-align:center}.drift .system-name{font-weight:bold;font-size:16px;word-wrap:break-word;white-space:pre-wrap;margin-bottom:20px;margin-left:25px}.drift .system-updated-and-reference{font-size:14px;font-weight:normal;position:absolute;bottom:12px}.drift .system-updated-and-reference.stale-system{color:#f0ab00}.drift .system-updated-and-reference svg{margin-right:5px;font-size:14px}.drift .reference-selector{color:#737679}.drift .reference-selector:hover{color:#151515}.drift .hsp-dropdown{margin-top:-7.5px;margin-bottom:-7.5px}.drift .cluster-icon-large{font-size:2em}.drift .drift-table{border-top:0;border-left:0;margin-top:10px}.drift .drift-table td,.drift .drift-table th{background-clip:padding-box}.drift .drift-table .sticky-column-header .drift-header{padding:16px;margin:0;border-right:1px solid #CCC;min-width:250px}.drift .drift-table .sticky-column-header .drift-header.remove-system-icon{position:relative}.drift .drift-table .sticky-column-header .drift-header .remove-system-icon{position:absolute;right:8px;top:6px;color:black}.drift .drift-table .sticky-column-header .drift-header .remove-system-icon:link,.drift .drift-table .sticky-column-header .drift-header .remove-system-icon:visited{text-decoration:none}.drift .drift-table td{word-wrap:break-word;white-space:pre-wrap}.drift .drift-table tr:hover td{background:#DEF3FF}.drift .drift-table .unexpected-row .highlight{background:rgba(201,25,11,0.08)}.drift .drift-table .unexpected-row .highlight:nth-child(3){border-left:6px solid #c9190b;border-left-width:medium}.drift .drift-table .unexpected-row:hover .highlight{background:rgba(201,25,11,0.28)}.drift .different-fact-cell{border-left:6px solid #c9190b;border-left-width:medium}.drift .obfuscated{background:#f5f5f5;color:#6a6a73}.drift .drift-table-wrapper{overflow:auto;height:100%;min-height:500px;margin-left:24px;margin-right:24px}.drift .sticky-column{position:sticky;background-color:white;background-clip:padding-box;z-index:1;border-right:0;vertical-align:top}.drift .fact-header{min-width:200px;width:100%;vertical-align:bottom}.drift .state-header{font-weight:bold;vertical-align:bottom}.drift .fixed-column-1{left:0;width:250px;min-width:250px;max-width:250px;word-wrap:break-word;border-right:none}.drift .fixed-column-2{left:250px;width:60px;min-width:100px;max-width:100px;border-right:1px solid #CCC}.drift .comparison-cell{border-right:1px solid #CCC}.drift .nested-fact{border-left:3px solid #0066CC}.drift .child-row{margin-left:3em}.drift .drift-table-scroller{overflow-x:scroll;overflow-y:visible;margin-left:410px}.drift .add-system-icon{font-size:3em;color:grey;margin-bottom:20px}.drift .pf-c-alert{margin-bottom:30px}.drift .margin-right{margin-right:30px}.drift .edit-icon-margin{margin-left:10px;margin-bottom:2px}.drift .fact-value{width:270px}.drift .edit-baseline-header div{font-weight:bold}.drift .hsp-dropdown-icon{color:#0066CC}.drift .hsp-dropdown-icon:hover{color:#004080}.drift .this-in-button{margin-top:20px}.drift .hsp-dropdown-loading{min-width:250px;margin-top:20px;margin-bottom:20px}.drift .display-block{display:block}.drift .pf-c-modal-box__body{max-width:1200px;max-height:600px}.drift .carat-margin{margin-right:16px}.drift .reload-button{margin-top:10px;margin-right:5px}.drift .hsp-icon-padding{padding:8px;padding-top:6px;padding-bottom:6px}.drift .md-padding-top{padding-top:16px}.drift .md-padding-bottom{padding-bottom:16px}.drift .sm-padding-top{padding-top:8px}.drift .sm-padding-bottom{padding-bottom:8px}.drift .bottom-padding-0{padding-bottom:0px}.drift .margin-right-5-px{margin-right:5px}.drift .margin-left-5-px{margin-left:5px}.drift .small-empty-state-icon{width:18px;height:18px;margin:0px}.drift .tooltip-button-margin{margin-top:32px}.drift .badge-margin{margin-bottom:30px}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/App.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\".drift{\\n@import url(~@redhat-cloud-services/frontend-components/index.css);@import url(~@redhat-cloud-services/frontend-components-notifications/index.css);:root{--ins-color--orange: #ec7a08}button:focus{outline:none}.ins-c-primary-toolbar__pagination{margin-left:auto}[data-label=\\\"Name\\\"]{cursor:pointer}.highlight{background-color:#F5F5F5}.pointer{cursor:pointer}.active-blue{color:#0066CC}.not-active{color:#737679}.not-active:hover{color:#151515}.pf-c-card__body{padding-left:0;padding-right:0}.pf-c-card>:last-child.pf-c-card__body{padding-top:0;padding-bottom:0}.fact-state{border-right:1px solid #CCC;padding-right:2px}.sticky-column-header .active-sort{border-bottom:3px solid #0066CC}.comparison-header .drift-header-icon{position:absolute}.comparison-header svg{margin-right:8px;font-size:1.25em}.reference-header{overflow:visible;border-top:1px solid #CCC;background:#DEF3FF}.baseline-header{overflow:visible;border-top:1px solid #CCC;background:#FFF}.system-header{overflow:visible;border-top:1px solid #CCC;background-color:#ededed}.dropdown-empty-state-width .pf-c-dropdown__menu{width:300px}.historical-system-profile-header{overflow:visible;border-top:1px solid #CCC;background-color:#f9e0a2}.add-system-header{background-color:#F5F5F5;padding:20px 20px;text-align:center}.system-name{font-weight:bold;font-size:16px;word-wrap:break-word;white-space:pre-wrap;margin-bottom:20px;margin-left:25px}.system-updated-and-reference{font-size:14px;font-weight:normal;position:absolute;bottom:12px}.system-updated-and-reference.stale-system{color:#f0ab00}.system-updated-and-reference svg{margin-right:5px;font-size:14px}.reference-selector{color:#737679}.reference-selector:hover{color:#151515}.hsp-dropdown{margin-top:-7.5px;margin-bottom:-7.5px}.cluster-icon-large{font-size:2em}.drift-table{border-top:0;border-left:0;margin-top:10px}.drift-table td,.drift-table th{background-clip:padding-box}.drift-table .sticky-column-header .drift-header{padding:16px;margin:0;border-right:1px solid #CCC;min-width:250px}.drift-table .sticky-column-header .drift-header.remove-system-icon{position:relative}.drift-table .sticky-column-header .drift-header .remove-system-icon{position:absolute;right:8px;top:6px;color:black}.drift-table .sticky-column-header .drift-header .remove-system-icon:link,.drift-table .sticky-column-header .drift-header .remove-system-icon:visited{text-decoration:none}.drift-table td{word-wrap:break-word;white-space:pre-wrap}.drift-table tr:hover td{background:#DEF3FF}.drift-table .unexpected-row .highlight{background:rgba(201,25,11,0.08)}.drift-table .unexpected-row .highlight:nth-child(3){border-left:6px solid #c9190b;border-left-width:medium}.drift-table .unexpected-row:hover .highlight{background:rgba(201,25,11,0.28)}.different-fact-cell{border-left:6px solid #c9190b;border-left-width:medium}.obfuscated{background:#f5f5f5;color:#6a6a73}.drift-table-wrapper{overflow:auto;height:100%;min-height:500px;margin-left:24px;margin-right:24px}.sticky-column{position:sticky;background-color:white;background-clip:padding-box;z-index:1;border-right:0;vertical-align:top}.fact-header{min-width:200px;width:100%;vertical-align:bottom}.state-header{font-weight:bold;vertical-align:bottom}.fixed-column-1{left:0;width:250px;min-width:250px;max-width:250px;word-wrap:break-word;border-right:none}.fixed-column-2{left:250px;width:60px;min-width:100px;max-width:100px;border-right:1px solid #CCC}.comparison-cell{border-right:1px solid #CCC}.nested-fact{border-left:3px solid #0066CC}.child-row{margin-left:3em}.drift-table-scroller{overflow-x:scroll;overflow-y:visible;margin-left:410px}.add-system-icon{font-size:3em;color:grey;margin-bottom:20px}.pf-c-alert{margin-bottom:30px}.margin-right{margin-right:30px}.edit-icon-margin{margin-left:10px;margin-bottom:2px}.fact-value{width:270px}.edit-baseline-header div{font-weight:bold}.hsp-dropdown-icon{color:#0066CC}.hsp-dropdown-icon:hover{color:#004080}.this-in-button{margin-top:20px}.hsp-dropdown-loading{min-width:250px;margin-top:20px;margin-bottom:20px}.display-block{display:block}.pf-c-modal-box__body{max-width:1200px;max-height:600px}.carat-margin{margin-right:16px}.reload-button{margin-top:10px;margin-right:5px}.hsp-icon-padding{padding:8px;padding-top:6px;padding-bottom:6px}.md-padding-top{padding-top:16px}.md-padding-bottom{padding-bottom:16px}.sm-padding-top{padding-top:8px}.sm-padding-bottom{padding-bottom:8px}.bottom-padding-0{padding-bottom:0px}.margin-right-5-px{margin-right:5px}.margin-left-5-px{margin-left:5px}.small-empty-state-icon{width:18px;height:18px;margin:0px}.tooltip-button-margin{margin-top:32px}.badge-margin{margin-bottom:30px}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}