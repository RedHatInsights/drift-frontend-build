{"version":3,"file":"js/928.1dfdaeca67ba8fe18957.js","mappings":"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","sources":["webpack:///./src/Utilities/asyncComponent.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/SmartComponents/AddSystemModal/redux/actions.js","webpack:///./src/SmartComponents/AddSystemModal/redux/types.js","webpack:///./src/SmartComponents/BaselinesPage/CreateBaselineModal/redux/types.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/DeleteFactModal/DeleteFactModal.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/FactKebab/FactKebab.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/EditBaseline/helpers.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/redux/types.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/redux/actions.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/redux/types.js","webpack:///./src/SmartComponents/BaselinesTable/redux/helpers.js","webpack:///./src/SmartComponents/BaselinesTable/redux/actions.js","webpack:///./src/SmartComponents/BaselinesTable/redux/baselinesTableReducer.js","webpack:///./src/SmartComponents/BaselinesTable/redux/index.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/types.js","webpack:///./src/SmartComponents/DriftTooltip/DriftTooltip.js","webpack:///./src/SmartComponents/EmptyStateDisplay/EmptyStateDisplay.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/HistoricalProfilesCheckbox/HistoricalProfilesCheckbox.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/HistoricalProfilesRadio/HistoricalProfilesRadio.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/HistoricalProfilesPopover.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/redux/types.js","webpack:///./src/SmartComponents/SystemsTable/actions.js","webpack:///./src/SmartComponents/helpers.js","webpack:///./src/SmartComponents/modules/actions.js","webpack:///./src/SmartComponents/modules/types.js","webpack:///./src/Utilities/getBaseName.js","webpack:///./src/api.js","webpack:///./src/constants.js","webpack:///./src/SmartComponents/modules/helpers.js","webpack:///./src/SmartComponents/modules/reducers.js","webpack:///./src/SmartComponents/AddSystemModal/redux/helpers.js","webpack:///./src/SmartComponents/AddSystemModal/redux/addSystemModalReducer.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/filterDropdownReducer.js","webpack:///./src/SmartComponents/BaselinesPage/CreateBaselineModal/redux/reducers.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/redux/reducers.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/redux/reducers.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/redux/reducer.js","webpack:///./src/store/index.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/SystemKebab/SystemKebab.js","webpack:///./src/store/reducers.js","webpack:////home/travis/build/RedHatInsights/drift-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/"],"sourcesContent":["import React, { Component } from 'react';\n\nexport default function asyncComponent(importComponent) {\n    class AsyncComponent extends Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                component: null\n            };\n        }\n\n        async componentDidMount() {\n            const { default: component } = await importComponent();\n\n            this.setState({\n                component\n            });\n        }\n\n        render() {\n            const C = this.state.component;\n\n            return C ? <C { ...this.props } /> : <div>Loading...</div>;\n        }\n    }\n\n    return AsyncComponent;\n}\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport asyncComponent from './Utilities/asyncComponent';\n\nconst DriftPage = asyncComponent(() => import ('./SmartComponents/DriftPage/DriftPage'));\nconst BaselinesPage = asyncComponent(() => import ('./SmartComponents/BaselinesPage/BaselinesPage'));\nconst EditBaselinePage = asyncComponent(() => import ('./SmartComponents/BaselinesPage/EditBaselinePage/EditBaselinePage'));\n\nconst InsightsRoute = ({ component: Component, title, ...rest }) => {\n    title ? document.title = title : null;\n\n    return (<Route { ...rest } component={ Component } />);\n};\n\nInsightsRoute.propTypes = {\n    component: PropTypes.func,\n    title: PropTypes.string\n};\n\nexport const Routes = () => {\n    return (\n        <Switch>\n            <InsightsRoute\n                exact path='/baselines'\n                component={ BaselinesPage }\n                title='Baselines - Drift | Red Hat Insights'\n            />\n            <InsightsRoute path='/baselines/:id' component={ EditBaselinePage } />\n            <InsightsRoute\n                exact path='/'\n                component={ DriftPage }\n                title='Comparison - Drift | Red Hat Insights'\n            />\n            <Redirect to='/'/>\n        </Switch>\n    );\n};\n","import React, { createContext, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport actions from './SmartComponents/modules/actions';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\n\nimport { Routes } from './Routes';\nimport './App.scss';\n\nexport const PermissionContext = createContext();\n\nconst App = (props) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [{\n        hasCompareReadPermissions,\n        hasBaselinesReadPermissions,\n        hasBaselinesWritePermissions,\n        hasHSPReadPermissions,\n        hasInventoryReadPermissions,\n        hasNotificationsWritePermissions,\n        hasNotificationsReadPermissions,\n        arePermissionsLoaded\n    }, setPermissions ] = useState({\n        hasCompareReadPermissions: undefined,\n        hasBaselinesReadPermissions: undefined,\n        hasBaselinesWritePermissions: undefined,\n        hasHSPReadPermissions: undefined,\n        hasInventoryReadPermissions: undefined,\n        hasNotificationsWritePermissions: undefined,\n        hasNotificationsReadPermissions: undefined,\n        arePermissionsLoaded: false\n    });\n\n    const handlePermissionsUpdate = (hasCompareRead, hasBaselinesRead, hasBaselinesWrite, hasHSPRead,\n        hasInventoryRead, hasNotificationsWrite, hasNotificationsRead) => {\n        setPermissions({\n            hasCompareReadPermissions: hasCompareRead,\n            hasBaselinesReadPermissions: hasBaselinesRead,\n            hasBaselinesWritePermissions: hasBaselinesWrite,\n            hasHSPReadPermissions: hasHSPRead,\n            hasInventoryReadPermissions: hasInventoryRead,\n            hasNotificationsWritePermissions: hasNotificationsWrite,\n            hasNotificationsReadPermissions: hasNotificationsRead,\n            arePermissionsLoaded: true\n        });\n    };\n\n    const hasPermission = (permission, permissionList) => {\n        let hasPermission = false;\n\n        permissionList.forEach((permissions) => {\n            if (permission === permissions) {\n                hasPermission = true;\n            }\n        });\n\n        return hasPermission;\n    };\n\n    useEffect(() => {\n        insights.chrome.init();\n        insights.chrome.identifyApp('drift');\n        insights.chrome.on('APP_NAVIGATION', event => {\n            if (event.domEvent !== undefined && event.domEvent.type === 'click') {\n                history.push(`/${event.navId}`);\n            }\n        });\n        (async () => {\n            const driftPermissions = await window.insights.chrome.getUserPermissions('drift');\n            const fullPermissions = driftPermissions.concat(await window.insights.chrome.getUserPermissions('inventory'));\n            const permissionsList = fullPermissions.map(permissions => permissions.permission);\n            handlePermissionsUpdate(\n                permissionsList.some((permission) => hasPermission(permission, [ 'drift:*:*', 'drift:comparisons:read', 'drift:*:read' ])),\n                permissionsList.some((permission) => hasPermission(permission, [ 'drift:*:*', 'drift:baselines:read', 'drift:*:read' ])),\n                permissionsList.some((permission) => hasPermission(permission, [ 'drift:*:*', 'drift:baselines:write', 'drift:*:write' ])),\n                permissionsList.some((permission) => hasPermission(\n                    permission, [ 'drift:*:*', 'drift:historical-system-profiles:read', 'drift:*:read' ])\n                ),\n                permissionsList.some((permission) => hasPermission(permission, [ 'inventory:*:*', 'inventory:*:read' ])),\n                permissionsList.some((permission) => hasPermission(permission, [ 'drift:*:*', 'drift:notifications:write', 'drift:*:write' ])),\n                permissionsList.some((permission) => hasPermission(permission, [ 'drift:*:*', 'drift:notifications:read', 'drift:*:read' ]))\n            );\n        })();\n\n        insights.chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n            const [ workloads, SID, tags ] = insights.chrome?.mapGlobalFilter?.(data, false, true) || [];\n            dispatch(actions.setGlobalFilterTags(tags));\n            dispatch(actions.setGlobalFilterWorkloads(workloads));\n            dispatch(actions.setGlobalFilterSIDs(SID));\n        });\n    }, []);\n\n    return (\n        arePermissionsLoaded\n            ? <PermissionContext.Provider\n                value={{\n                    permissions: {\n                        compareRead: hasCompareReadPermissions,\n                        baselinesRead: hasBaselinesReadPermissions,\n                        baselinesWrite: hasBaselinesWritePermissions,\n                        hspRead: hasHSPReadPermissions,\n                        inventoryRead: hasInventoryReadPermissions,\n                        notificationsWrite: hasNotificationsWritePermissions,\n                        notificationsRead: hasNotificationsReadPermissions\n                    }\n                }}>\n                <NotificationsPortal />\n                <Routes childProps={ props } />\n            </PermissionContext.Provider>\n            : null\n    );\n};\n\nexport default withRouter (App);\n","import types from './types';\n\nfunction toggleAddSystemModal() {\n    return {\n        type: types.OPEN_ADD_SYSTEM_MODAL\n    };\n}\n\nfunction selectActiveTab(newActiveTab) {\n    return {\n        type: types.SELECT_ACTIVE_TAB,\n        payload: newActiveTab\n    };\n}\n\nfunction setSelectedSystemIds(selectedSystemIds) {\n    return {\n        type: types.SET_SELECTED_SYSTEMS_COMPARISON,\n        payload: selectedSystemIds\n    };\n}\n\nfunction handleSystemSelection(content, isSelected) {\n    return {\n        type: types.HANDLE_SYSTEM_SELECTION,\n        payload: { content, isSelected }\n    };\n}\n\nfunction handleBaselineSelection(content, isSelected) {\n    return {\n        type: types.HANDLE_BASELINE_SELECTION,\n        payload: { content, isSelected }\n    };\n}\n\nfunction handleHSPSelection(content) {\n    return {\n        type: types.HANDLE_HSP_SELECTION,\n        payload: content\n    };\n}\n\nexport default {\n    toggleAddSystemModal,\n    selectActiveTab,\n    setSelectedSystemIds,\n    handleSystemSelection,\n    handleBaselineSelection,\n    handleHSPSelection\n};\n","const OPEN_ADD_SYSTEM_MODAL = 'OPEN_ADD_SYSTEM_MODAL';\nconst SELECT_ACTIVE_TAB = 'SELECT_ACTIVE_TAB';\nconst SET_SELECTED_SYSTEMS_COMPARISON = 'SET_SELECTED_SYSTEMS_COMPARISON';\nconst HANDLE_SYSTEM_SELECTION = 'HANDLE_SYSTEM_SELECTION';\nconst HANDLE_BASELINE_SELECTION = 'HANDLE_BASELINE_SELECTION';\nconst HANDLE_HSP_SELECTION = 'HANDLE_HSP_SELECTION';\n\nexport default {\n    OPEN_ADD_SYSTEM_MODAL,\n    SELECT_ACTIVE_TAB,\n    SET_SELECTED_SYSTEMS_COMPARISON,\n    HANDLE_SYSTEM_SELECTION,\n    HANDLE_BASELINE_SELECTION,\n    HANDLE_HSP_SELECTION\n};\n","const TOGGLE_CREATE_BASELINE_MODAL = 'TOGGLE_CREATE_BASELINE_MODAL';\nconst CREATE_BASELINE = 'CREATE_BASELINE';\n\nexport default {\n    TOGGLE_CREATE_BASELINE_MODAL,\n    CREATE_BASELINE\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Modal, ModalVariant, Button } from '@patternfly/react-core';\n\nimport { editBaselineActions } from '../redux';\nimport editBaselineHelpers from '../EditBaseline/helpers';\n\nclass DeleteFactModal extends Component {\n    constructor(props) {\n        super(props);\n        this.deleteFacts = this.deleteFacts.bind(this);\n    }\n\n    async deleteFacts() {\n        const { deleteBaselineData, fetchBaselineData, baselineData, editBaselineTableData } = this.props;\n        let apiBody = editBaselineHelpers.makeDeleteFactsPatch(editBaselineTableData, baselineData);\n        this.props.toggleModal();\n\n        try {\n            await deleteBaselineData(baselineData.id, apiBody);\n            fetchBaselineData(baselineData.id);\n        } catch (e) {\n            // do nothing and let redux handle\n        }\n    }\n\n    render() {\n        const { deleteFact, categoryMessage, factMessage, modalOpened } = this.props;\n\n        return (\n            <Modal\n                className=\"drift\"\n                ouiaId='delete-fact-modal'\n                variant={ ModalVariant.small }\n                title=\"Delete facts\"\n                isOpen={ modalOpened }\n                onClose={ this.props.toggleModal }\n                actions = { [\n                    <Button\n                        key=\"confirm\"\n                        ouiaId='delete-fact-button'\n                        variant=\"danger\"\n                        onClick={ deleteFact ? deleteFact : this.deleteFacts }\n                    >\n                    Delete facts\n                    </Button>,\n                    <Button\n                        key=\"cancel\"\n                        ouiaId='delete-fact-cancel-button'\n                        variant=\"link\"\n                        onClick={ this.props.toggleModal }\n                    >\n                    Cancel\n                    </Button>\n                ] }\n            >\n                You have selected { ' ' }\n                { categoryMessage ? <b>{ categoryMessage }</b> : null }\n                { categoryMessage && factMessage ? ' and ' : null }\n                { factMessage ? <b>{ factMessage }</b> : null }\n                { ' ' } to be deleted.\n                <br></br>\n                { categoryMessage ?\n                    'Deleting a category will delete all facts within the category.'\n                    : null\n                }\n                { <div className=\"md-padding-top\">This cannot be undone.</div> }\n            </Modal>\n        );\n    }\n}\n\nDeleteFactModal.propTypes = {\n    modalOpened: PropTypes.bool,\n    deleteBaselineData: PropTypes.func,\n    fetchBaselineData: PropTypes.func,\n    editBaselineTableData: PropTypes.array,\n    baselineData: PropTypes.object,\n    toggleModal: PropTypes.func,\n    deleteFact: PropTypes.func,\n    categoryMessage: PropTypes.string,\n    factMessage: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselineData: state.editBaselineState.baselineData,\n        editBaselineTableData: state.editBaselineState.editBaselineTableData\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        deleteBaselineData: (baselineId, newBaselineBody) => dispatch(editBaselineActions.deleteBaselineData(baselineId, newBaselineBody)),\n        fetchBaselineData: (baselineUUID) => dispatch(editBaselineActions.fetchBaselineData(baselineUUID))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteFactModal);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Dropdown, DropdownItem, DropdownPosition, KebabToggle } from '@patternfly/react-core';\n\nimport { editBaselineActions } from '../redux';\nimport editBaselineHelpers from '../EditBaseline/helpers';\nimport DeleteFactModal from '../DeleteFactModal/DeleteFactModal';\n\nexport class FactKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.editFact = this.editFact.bind(this);\n        this.deleteFact = this.deleteFact.bind(this);\n        this.addFact = this.addFact.bind(this);\n\n        this.state = {\n            isOpen: false,\n            modalOpened: false\n        };\n\n        this.toggleModalOpened = () => {\n            const { modalOpened } = this.state;\n\n            this.setState({\n                modalOpened: !modalOpened,\n                isOpen: false\n            });\n        };\n    }\n\n    onKebabToggle(isOpen) {\n        this.setState({\n            isOpen\n        });\n    }\n\n    editFact() {\n        const { toggleFactModal, setFactData, factName, factValue, fact, isCategory, isSubFact } = this.props;\n\n        toggleFactModal();\n        setFactData({\n            factName,\n            factValue,\n            fact,\n            isCategory,\n            isSubFact\n        });\n    }\n\n    async deleteFact() {\n        const { baselineData, deleteBaselineData, factName, factValue, fact, isSubFact, fetchBaselineData } = this.props;\n        let factToDelete = { name: factName, value: factValue };\n        let newAPIBody;\n\n        if (isSubFact === true) {\n            newAPIBody = editBaselineHelpers.makeDeleteSubFactPatch(factToDelete, fact, baselineData);\n        } else {\n            newAPIBody = editBaselineHelpers.makeDeleteFactPatch(factToDelete, baselineData, []);\n        }\n\n        this.toggleModalOpened();\n\n        try {\n            await deleteBaselineData(baselineData.id, newAPIBody);\n            fetchBaselineData(baselineData.id);\n        } catch (e) {\n            // do nothing and let redux handle\n        }\n\n        this.onKebabToggle(false);\n    }\n\n    addFact() {\n        const { toggleFactModal, setFactData, fact, isCategory } = this.props;\n\n        toggleFactModal();\n        setFactData({\n            factName: '',\n            factValue: '',\n            fact,\n            isSubFact: isCategory\n        });\n    }\n\n    render() {\n        const { isOpen, modalOpened } = this.state;\n        const { isCategory, factName } = this.props;\n        const dropdownItems = [];\n\n        if (isCategory === true) {\n            dropdownItems.push(\n                <DropdownItem\n                    key=\"add fact\"\n                    data-ouia-component-id={ 'add-subfact-dropdown-item-' + factName }\n                    component=\"button\"\n                    onClick={ this.addFact }>\n                    Add sub fact\n                </DropdownItem>\n            );\n        }\n\n        dropdownItems.push(\n            <DropdownItem\n                key=\"edit\"\n                component=\"button\"\n                data-ouia-component-id={ 'edit-fact-dropdown-item-' + factName }\n                onClick={ this.editFact }>\n                { isCategory ? 'Edit category' : 'Edit' }\n            </DropdownItem>,\n            <DropdownItem\n                key=\"delete\"\n                component=\"button\"\n                data-ouia-component-id={ 'delete-fact-dropdown-item-' + factName }\n                onClick={ this.toggleModalOpened }>\n                { isCategory ? 'Delete category' : 'Delete' }\n            </DropdownItem>\n        );\n\n        return (\n            <React.Fragment>\n                { modalOpened ? <DeleteFactModal\n                    toggleModal={ this.toggleModalOpened.bind(this) }\n                    deleteFact={ this.deleteFact.bind(this) }\n                    isCategory={ isCategory }\n                    modalOpened={ modalOpened }\n                    categoryMessage={ isCategory ? '1 category' : null }\n                    factMessage={ isCategory ? null : '1 fact' }\n                /> : null }\n                <Dropdown\n                    position={ DropdownPosition.right }\n                    style={{ float: 'right' }}\n                    className={ 'baseline-fact-kebab' }\n                    ouiaId={ 'fact-dropdown-' + factName }\n                    toggle={ <KebabToggle\n                        data-ouia-component-id={ 'fact-dropdown-toggle-' + factName }\n                        data-ouia-compoent-type='PF4/DropdownToggle'\n                        onToggle={ (isOpen) => this.onKebabToggle(isOpen) } /> }\n                    isOpen={ isOpen }\n                    dropdownItems={ dropdownItems }\n                    isPlain\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nFactKebab.propTypes = {\n    factName: PropTypes.string,\n    factValue: PropTypes.string,\n    fact: PropTypes.object,\n    isCategory: PropTypes.bool,\n    isSubFact: PropTypes.bool,\n    toggleFactModal: PropTypes.func,\n    setFactData: PropTypes.func,\n    baselineData: PropTypes.object,\n    deleteBaselineData: PropTypes.func,\n    fetchBaselineData: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselineData: state.editBaselineState.baselineData\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleFactModal: () => dispatch(editBaselineActions.toggleFactModal()),\n        setFactData: (factData) => dispatch(editBaselineActions.setFactData(factData)),\n        deleteBaselineData: (baselineId, newAPIBody) => dispatch(editBaselineActions.deleteBaselineData(baselineId, newAPIBody)),\n        fetchBaselineData: (baselineUUID) => dispatch(editBaselineActions.fetchBaselineData(baselineUUID))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FactKebab);\n","import React from 'react';\nimport jiff from 'jiff';\nimport FactKebab from '../FactKebab/FactKebab';\n\n/*eslint-disable react/prop-types*/\nfunction renderKebab({ factName, factValue, factData, isCategory, isSubFact, baselinesWrite } = {}) {\n    return (\n        baselinesWrite\n            ? <td>\n                <FactKebab\n                    factName={ factName }\n                    factValue={ factValue }\n                    fact={ factData }\n                    isCategory={ isCategory }\n                    isSubFact={ isSubFact }\n                />\n            </td>\n            : null\n    );\n}\n/*eslint-enable react/prop-types*/\n\nfunction buildNewFactData(isParent, factName, factValue, factData) {\n    let newFactData = {};\n    let subFacts = [];\n\n    if (factData && !Array.isArray(factData)) {\n        factData.values.forEach(function(subFact) {\n            subFacts.push(subFact);\n        });\n        subFacts.push({ name: factName, value: factValue });\n\n        newFactData.name = factData.name;\n        newFactData.values = subFacts;\n\n        return newFactData;\n    }\n\n    newFactData.name = factName;\n    if (isParent) {\n        newFactData.values = [];\n    } else {\n        newFactData.value = factValue;\n    }\n\n    return newFactData;\n}\n\nfunction buildEditedFactData(isParent, originalFactName, factName, originalValueName, factValue, factData) {\n    let newAPIBody = {};\n    let subFacts = [];\n    let originalSubFact = { name: originalFactName, value: originalValueName };\n\n    if (isParent) {\n        newAPIBody.name = factName;\n        factData.values.forEach(function(subFact) {\n            subFacts.push(subFact);\n        });\n        newAPIBody.values = subFacts;\n    } else {\n        if (factData.values && factValue !== '') {\n            newAPIBody.name = factData.name;\n            let newSubFact = { name: factName, value: factValue };\n\n            factData.values.forEach(function(subFact) {\n                if (isSameFact(originalSubFact, subFact)) {\n                    return;\n                }\n\n                subFacts.push(subFact);\n            });\n            subFacts.push(newSubFact);\n            newAPIBody.values = subFacts;\n        } else {\n            newAPIBody = { name: factName, value: factValue };\n        }\n    }\n\n    return newAPIBody;\n}\n\nfunction buildDeletedSubFact(factToDelete, fact) {\n    let newParentFact;\n    let newSubFacts = [];\n\n    fact.values.forEach(function(subFact) {\n        if (isSameFact(subFact, factToDelete)) {\n            return;\n        }\n\n        newSubFacts.push(subFact);\n    });\n\n    newParentFact = { name: fact.name, values: newSubFacts };\n\n    return newParentFact;\n}\n\nfunction makeDeleteFactPatch(factToDelete, originalAPIBody) {\n    let op = 'remove';\n    let path = '/';\n\n    /*eslint-disable camelcase*/\n    originalAPIBody.baseline_facts.forEach(function(fact, index) {\n        if (fact.name === factToDelete.name && fact.value === factToDelete.value) {\n            path += index;\n        }\n    });\n\n    let newAPIBody = {\n        display_name: originalAPIBody.display_name,\n        facts_patch: [{ op, path }]\n    };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\nfunction makeDeleteSubFactPatch(factToDelete, parentFact, originalAPIBody) {\n    let op = 'remove';\n    let path = '';\n\n    /*eslint-disable camelcase*/\n    originalAPIBody.baseline_facts.forEach(function(fact, index) {\n        if (isSameFact(fact, parentFact)) {\n            path = `/${index}/values`;\n        }\n    });\n\n    parentFact.values.forEach(function(fact, index) {\n        if (isSameFact(fact, factToDelete)) {\n            path += `/${index}`;\n        }\n    });\n\n    let newAPIBody = {\n        display_name: originalAPIBody.display_name,\n        facts_patch: [{ op, path }]\n    };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\nfunction makeDeleteFactsPatch(factsToDelete, originalAPIBody) {\n    let unselectedFacts = [];\n\n    factsToDelete.forEach(function(fact, index) {\n        if (!fact.selected) {\n            if (isCategory(fact)) {\n                let newAPIBody;\n                let unselectedSubFacts = [];\n\n                baselineSubFacts(fact).forEach(function(subFact, idx) {\n                    if (!subFact.selected) {\n                        unselectedSubFacts.push(originalAPIBody.baseline_facts[index].values[idx]);\n                    }\n                });\n\n                newAPIBody = {\n                    name: originalAPIBody.baseline_facts[index].name,\n                    values: unselectedSubFacts\n                };\n\n                unselectedFacts.push(newAPIBody);\n            } else {\n                unselectedFacts.push(originalAPIBody.baseline_facts[index]);\n            }\n        }\n    });\n\n    let patch = makePatchBody(unselectedFacts, originalAPIBody.baseline_facts);\n\n    /*eslint-disable camelcase*/\n    let newAPIBody = { display_name: originalAPIBody.display_name, facts_patch: patch };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\n/*eslint-disable camelcase*/\nfunction makeAddFactPatch(newFactData, originalAPIBody) {\n    let op = 'add';\n    let path = '/' + originalAPIBody.baseline_facts.length;\n    let value = newFactData;\n    let index;\n\n    if (Object.prototype.hasOwnProperty.call(newFactData, 'values') && newFactData.values.length > 0) {\n        value = newFactData.values[newFactData.values.length - 1];\n\n        for (let i = 0; i < originalAPIBody.baseline_facts.length; i += 1) {\n            if (isSameFact(originalAPIBody.baseline_facts[i], newFactData)) {\n                index = i;\n            }\n        }\n\n        path = `/${index}/values/${newFactData.values.length - 1}`;\n    }\n\n    let newAPIBody = {\n        display_name: originalAPIBody.display_name,\n        facts_patch: [{ op, path, value }]\n    };\n\n    return newAPIBody;\n}\n/*eslint-enable camelcase*/\n\nfunction makeAddFactToCategoryPatch(newFactData, originalAPIBody, oldFactData) {\n    if (newFactData === undefined || originalAPIBody === undefined) {\n        return {};\n    }\n\n    let newFactBody = makeAPIPatch(newFactData, originalAPIBody, oldFactData);\n\n    newFactBody.push(newFactData);\n\n    let patch = makePatchBody(newFactBody, originalAPIBody.baseline_facts);\n\n    /*eslint-disable camelcase*/\n    let newAPIBody = { display_name: originalAPIBody.display_name, facts_patch: patch };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\nfunction makeEditFactPatch(newFactData, originalAPIBody, oldFactData) {\n    if (newFactData === undefined || originalAPIBody === undefined) {\n        return {};\n    }\n\n    let editedFactBody = makeAPIPatch(newFactData, originalAPIBody, oldFactData);\n\n    editedFactBody.push(newFactData);\n\n    let patch = makePatchBody(editedFactBody, originalAPIBody.baseline_facts);\n\n    /*eslint-disable camelcase*/\n    let newAPIBody = { display_name: originalAPIBody.display_name, facts_patch: patch };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\nfunction makeAPIPatch(data, originalAPIBody, originalParentFact) {\n    let patchBody = [];\n\n    if (Array.isArray(originalParentFact) && originalParentFact.length === 0) {\n        originalAPIBody.baseline_facts.forEach(function(fact) {\n            if (fact.name !== data.name) {\n                patchBody.push(fact);\n            }\n        });\n    } else {\n        originalAPIBody.baseline_facts.forEach(function(fact) {\n            if (!isSameFact(fact, originalParentFact)) {\n                patchBody.push(fact);\n            }\n        });\n    }\n\n    return patchBody;\n}\n\nfunction makePatchBody(newAPIBody, originalAPIBody) {\n    return jiff.diff(originalAPIBody, newAPIBody);\n}\n\nfunction buildBaselineTableData(baselineData) {\n    let rows = [];\n    let row;\n    let id = 0;\n\n    if (baselineData) {\n        baselineData.forEach(function(fact) {\n            row = [];\n            row.push(id);\n            row.push(fact.name);\n            id += 1;\n\n            if (fact.values) {\n                let subfacts = [];\n                if (fact.values.length > 0) {\n                    fact.values.forEach(function(subFact) {\n                        let subfact = [];\n                        subfact.push(id);\n                        subfact.push(subFact.name);\n                        subfact.push(subFact.value);\n                        id += 1;\n                        subfacts.push(subfact);\n                    });\n\n                    row.push(subfacts);\n                } else {\n                    row.push([]);\n                }\n            } else {\n                row.push(fact.value);\n            }\n\n            rows.push(row);\n        });\n    }\n\n    return rows;\n}\n\nfunction toggleExpandedRow(expandedRows, factName) {\n    let newExpandedRows;\n\n    if (expandedRows.includes(factName)) {\n        newExpandedRows = expandedRows.filter(fact => fact !== factName);\n    } else {\n        newExpandedRows = expandedRows.slice();\n        newExpandedRows.splice(0, 0, factName);\n    }\n\n    return newExpandedRows;\n}\n\nfunction isAllSelected(data) {\n    let allSelected = true;\n\n    data.forEach(function(fact) {\n        if (!fact.selected) {\n            allSelected = false;\n        }\n    });\n\n    return allSelected;\n}\n\nfunction isCategory(fact) {\n    let subfacts = fact[2];\n    if (Array.isArray(subfacts)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction isSameFact(factA, factB) {\n    if (factA.name === factB.name) {\n        if (factA.values === factB.values || factA.value === factB.value) {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n}\n\nfunction baselineSubFacts(fact) {\n    return fact[2];\n}\n\nfunction findFactCount(editBaselineTableData) {\n    let totalFacts = 0;\n\n    editBaselineTableData.forEach(function(fact) {\n        if (Array.isArray(fact[2])) {\n            totalFacts += fact[2].length;\n        }\n\n        totalFacts += 1;\n    });\n\n    return totalFacts;\n}\n\nfunction findSelected(editBaselineTableData) {\n    let selected = 0;\n\n    editBaselineTableData.forEach(function(fact) {\n        if (Array.isArray(fact[2])) {\n            fact[2].forEach(function(subFact) {\n                if (subFact.selected === true) {\n                    selected += 1;\n                }\n            });\n            if (fact.selected) {\n                selected += 1;\n            }\n        } else {\n            if (fact.selected === true) {\n                selected += 1;\n            }\n        }\n    });\n\n    return selected;\n}\n\nfunction convertDataToCSV(data, baselineData) {\n    if (data === null || !data.length) {\n        return null;\n    }\n\n    let columnDelimiter = ',';\n    let lineDelimiter = '\\n';\n\n    /*eslint-disable camelcase*/\n    let headers = 'Fact,Value,';\n    let result = baselineData.display_name + lineDelimiter + headers + lineDelimiter;\n    /*eslint-enable camelcase*/\n\n    data.forEach(function(row) {\n        row.forEach(function(rowData) {\n            if (row[0] === rowData) {\n                return;\n            }\n\n            if (Array.isArray(rowData)) {\n                rowData.forEach(function(subFact) {\n                    result += lineDelimiter;\n                    result += '    ';\n                    subFact.forEach(function(subFactData) {\n                        if (subFact[0] === subFactData) {\n                            return;\n                        }\n\n                        result += subFactData;\n                        result += columnDelimiter;\n                    });\n                });\n            } else {\n                result += rowData;\n                result += columnDelimiter;\n            }\n        });\n\n        result += lineDelimiter;\n    });\n\n    return result;\n}\n\nexport default {\n    renderKebab,\n    buildNewFactData,\n    buildEditedFactData,\n    buildDeletedSubFact,\n    buildBaselineTableData,\n    makeDeleteFactsPatch,\n    makeAddFactPatch,\n    makeAddFactToCategoryPatch,\n    makeEditFactPatch,\n    makeDeleteFactPatch,\n    makeDeleteSubFactPatch,\n    toggleExpandedRow,\n    isAllSelected,\n    isCategory,\n    isSameFact,\n    baselineSubFacts,\n    findFactCount,\n    findSelected,\n    convertDataToCSV\n};\n","const TOGGLE_DELETE_NOTIFICATION_MODAL = 'TOGGLE_DELETE_NOTIFICATION_MODAL';\nconst SET_SYSTEMS_TO_DELETE = 'SET_SYSTEMS_TO_DELETE';\nconst DELETE_NOTIFICATIONS = 'DELETE_NOTIFICATIONS';\nconst GET_NOTIFICATIONS = 'GET_NOTIFICATIONS';\nconst ADD_NOTIFICATIONS = 'ADD_NOTIFICATIONS';\n\nexport default {\n    TOGGLE_DELETE_NOTIFICATION_MODAL,\n    SET_SYSTEMS_TO_DELETE,\n    DELETE_NOTIFICATIONS,\n    GET_NOTIFICATIONS,\n    ADD_NOTIFICATIONS\n};\n","import types from './types';\nimport api from '../../../../api';\n\nfunction expandRow(factName) {\n    return {\n        type: types.EXPAND_PARENT_FACT,\n        payload: factName\n    };\n}\n\nfunction fetchBaselineData(baselineUUID) {\n    return {\n        type: types.FETCH_BASELINE_DATA,\n        payload: api.getBaselineData(baselineUUID)\n    };\n}\n\nfunction clearEditBaselineData() {\n    return {\n        type: types.CLEAR_EDIT_BASELINE_DATA\n    };\n}\n\nfunction patchBaseline(baselineId, apiBody) {\n    return {\n        type: types.PATCH_BASELINE,\n        payload: api.patchBaselineData(baselineId, apiBody)\n    };\n}\n\nfunction deleteBaselineData(baselineId, apiBody) {\n    return {\n        type: types.DELETE_BASELINE_DATA,\n        payload: api.patchBaselineData(baselineId, apiBody)\n    };\n}\n\nfunction toggleFactModal() {\n    return {\n        type: types.TOGGLE_FACT_MODAL\n    };\n}\n\nfunction setFactData(factData) {\n    return {\n        type: types.SET_FACT_DATA,\n        payload: factData\n    };\n}\n\nfunction selectFact(ids, isSelected) {\n    return {\n        type: types.SELECT_FACT,\n        payload: { ids, isSelected }\n    };\n}\n\nfunction clearErrorData() {\n    return {\n        type: types.CLEAR_ERROR_DATA\n    };\n}\n\nfunction exportToCSV(baselineData, baselineRowData = []) {\n    let data = {\n        exportType: 'baselines data',\n        exportData: baselineData,\n        baselineRowData\n    };\n\n    return {\n        type: `EXPORT_BASELINE_DATA_TO_CSV`,\n        payload: data\n    };\n}\n\nexport default {\n    expandRow,\n    fetchBaselineData,\n    clearEditBaselineData,\n    patchBaseline,\n    deleteBaselineData,\n    setFactData,\n    toggleFactModal,\n    selectFact,\n    clearErrorData,\n    exportToCSV\n};\n","const EXPAND_PARENT_FACT = 'EXPAND_PARENT_FACT';\nconst FETCH_BASELINE_DATA = 'FETCH_BASELINE_DATA';\nconst CLEAR_EDIT_BASELINE_DATA = 'CLEAR_EDIT_BASELINE_DATA';\nconst PATCH_BASELINE = 'PATCH_BASELINE';\nconst DELETE_BASELINE_DATA = 'DELETE_BASELINE_DATA';\nconst SET_FACT_DATA = 'SET_FACT_DATA';\nconst TOGGLE_FACT_MODAL = 'TOGGLE_FACT_MODAL';\nconst SELECT_FACT = 'SELECT_FACT';\nconst CLEAR_ERROR_DATA = 'CLEAR_ERROR_DATA';\nconst EXPORT_BASELINE_DATA_TO_CSV = 'EXPORT_BASELINE_DATA_TO_CSV';\n\nexport default {\n    EXPAND_PARENT_FACT,\n    FETCH_BASELINE_DATA,\n    CLEAR_EDIT_BASELINE_DATA,\n    PATCH_BASELINE,\n    DELETE_BASELINE_DATA,\n    SET_FACT_DATA,\n    TOGGLE_FACT_MODAL,\n    SELECT_FACT,\n    CLEAR_ERROR_DATA,\n    EXPORT_BASELINE_DATA_TO_CSV\n};\n","import moment from 'moment';\n\nfunction fetchBaselines (tableId, fetchBaselines, fetchParams = {}) {\n    let params = {};\n\n    /*eslint-disable camelcase*/\n    params.order_by = fetchParams.orderBy;\n    params.order_how = fetchParams.orderHow;\n    params.limit = fetchParams.perPage;\n    params.offset = (fetchParams.page - 1) * fetchParams.perPage;\n\n    if (fetchParams.search) {\n        params.display_name = fetchParams.search;\n    }\n    /*eslint-enable camelcase*/\n\n    fetchBaselines(tableId, params);\n}\n\nfunction buildBaselinesTable(data, selectedBaselineIds) {\n    let rows = [];\n\n    data.forEach(function(baseline) {\n        let row = [];\n\n        let dateTimeStamp = getDateTimeStamp(baseline.updated);\n\n        row.push(baseline.id);\n        row.push(baseline.display_name);\n        row.push(dateTimeStamp);\n\n        rows.push(row);\n    });\n\n    if (selectedBaselineIds) {\n        rows = setSelected(rows, selectedBaselineIds);\n    }\n\n    return rows;\n}\n\nfunction setSelected(baselineRows, selectedBaselineIds) {\n    if (selectedBaselineIds === undefined) {\n        selectedBaselineIds = [];\n    }\n\n    baselineRows.forEach(function(baseline) {\n        let found = selectedBaselineIds.find(function(id) {\n            return baseline[0] === id;\n        });\n\n        if (found !== undefined) {\n            baseline.selected = true;\n        }\n    });\n\n    return baselineRows;\n}\n\nfunction setBaselineArray(baselines) {\n    let baselineArray = [];\n\n    baselines.forEach(function(baseline) {\n        if (baseline.selected) {\n            baselineArray.push(baseline[0]);\n        }\n    });\n\n    return baselineArray;\n}\n\nfunction getDateTimeStamp(dateTime) {\n    return moment(dateTime).fromNow();\n}\n\nfunction toggleExpandedRow(expandedRows, factName) {\n    if (expandedRows.includes(factName)) {\n        expandedRows = expandedRows.filter(fact => fact !== factName);\n    } else {\n        expandedRows.push(factName);\n    }\n\n    return expandedRows;\n}\n\nfunction convertListToCSV(data) {\n    if (data === null || !data.length) {\n        return null;\n    }\n\n    let columnDelimiter = data.columnDelimiter || ',';\n    let lineDelimiter = data.lineDelimiter || '\\n';\n\n    let headers = 'UUID,Name,Last updated,';\n    let result = headers + lineDelimiter;\n\n    data.forEach(function(baseline) {\n        baseline.forEach(function(detail) {\n            result += detail;\n            result += columnDelimiter;\n        });\n\n        result += lineDelimiter;\n    });\n\n    return result;\n}\n\nexport default {\n    fetchBaselines,\n    buildBaselinesTable,\n    setBaselineArray,\n    toggleExpandedRow,\n    setSelected,\n    convertListToCSV\n};\n","import api from '../../../api';\n\nfunction fetchBaselines(tableId, params = {}) {\n    return {\n        type: `FETCH_BASELINE_LIST_${ tableId }`,\n        payload: api.getBaselineList(params)\n    };\n}\n\nfunction revertBaselineFetch(tableId) {\n    return {\n        type: `REVERT_BASELINE_FETCH_${tableId}`\n    };\n}\n\nfunction selectBaseline(ids, isSelected, tableId) {\n    return {\n        type: `SELECT_BASELINE_${tableId}`,\n        payload: { ids, isSelected }\n    };\n}\n\nfunction setSelectedBaselines(selectedBaselineIds, tableId) {\n    return {\n        type: `SET_SELECTED_BASELINES_${tableId}`,\n        payload: selectedBaselineIds\n    };\n}\n\nfunction clearSelectedBaselines(tableId) {\n    return {\n        type: `CLEAR_SELECTED_BASELINES_${tableId}`\n    };\n}\n\nfunction clearBaselineData(tableId) {\n    return {\n        type: `CLEAR_BASELINE_DATA_${tableId}`\n    };\n}\n\nfunction deleteSelectedBaselines(deleteBaselinesAPIBody, tableId) {\n    return {\n        type: `DELETE_SELECTED_BASELINES_${tableId}`,\n        payload: api.deleteBaselinesData(deleteBaselinesAPIBody)\n    };\n}\n\nfunction exportToCSV(baselineData, baselineRowData = []) {\n    let data = {\n        exportType: 'baseline list',\n        exportData: baselineData,\n        baselineRowData\n    };\n\n    return {\n        type: `EXPORT_BASELINES_LIST_TO_CSV_CHECKBOX`,\n        payload: data\n    };\n}\n\nexport default {\n    fetchBaselines,\n    revertBaselineFetch,\n    selectBaseline,\n    setSelectedBaselines,\n    clearSelectedBaselines,\n    clearBaselineData,\n    deleteSelectedBaselines,\n    exportToCSV\n};\n","import baselinesReducerHelpers from './helpers';\nimport helpers from '../../helpers';\nimport union from 'lodash/union';\n\nconst initialState = {\n    loading: true,\n    baselineTableData: [],\n    selectedBaselineIds: [],\n    IdToDelete: '',\n    emptyState: false,\n    baselineError: {},\n    totalBaselines: 0\n};\n\nconst baselinesTableReducer = (tableId = '') => {\n    const tableReducer = (state = initialState, action) => {\n        let rows = [];\n        let selectedBaselines = [];\n        let newBaselineTableData = [];\n        let response;\n        let errorObject;\n\n        switch (action.type) {\n            case `FETCH_BASELINE_LIST_${tableId}_PENDING`:\n                return {\n                    ...state,\n                    loading: true\n                };\n            case `FETCH_BASELINE_LIST_${tableId}_FULFILLED`:\n                rows = baselinesReducerHelpers.buildBaselinesTable(action.payload.data, state.selectedBaselineIds, tableId);\n\n                return {\n                    ...state,\n                    loading: false,\n                    emptyState: action.payload.meta.total_available === 0,\n                    baselineTableData: rows,\n                    totalBaselines: action.payload.meta.count\n                };\n            case `FETCH_BASELINE_LIST_${tableId}_REJECTED`:\n                response = action.payload.response;\n                errorObject = { status: response.status };\n                if (response.data === '') {\n                    errorObject.detail = response.statusText;\n                } else if (response.data.message) {\n                    errorObject.detail = response.data.message;\n                } else {\n                    errorObject.detail = response.data.detail;\n                }\n\n                return {\n                    ...state,\n                    loading: false,\n                    emptyState: true,\n                    baselineError: errorObject\n                };\n            case `REVERT_BASELINE_FETCH_${tableId}`:\n                return {\n                    ...state,\n                    emptyState: false,\n                    baselineError: {},\n                    loading: false\n                };\n            case `SELECT_BASELINE_${tableId}`:\n                selectedBaselines = [ ...state.selectedBaselineIds ];\n\n                if (action.payload.ids.length === 0) {\n                    selectedBaselines = [];\n                } else if (action.payload.isSelected) {\n                    if (tableId === 'CHECKBOX' || tableId === 'COMPARISON') {\n                        selectedBaselines = union(selectedBaselines.concat(action.payload.ids));\n                    } else if (tableId === 'RADIO') {\n                        selectedBaselines.pop();\n                        selectedBaselines.push(action.payload.ids[0]);\n                    }\n                } else if (!action.payload.isSelected) {\n                    selectedBaselines = selectedBaselines.filter(function(item) {\n                        return !action.payload.ids.includes(item);\n                    });\n                }\n\n                state.baselineTableData.map(row => {\n                    if (selectedBaselines.includes(row[0])) {\n                        row.selected = true;\n                    } else {\n                        row.selected = false;\n                    }\n\n                    newBaselineTableData.push(row);\n                });\n\n                return {\n                    ...state,\n                    baselineTableData: newBaselineTableData,\n                    selectedBaselineIds: selectedBaselines\n                };\n            case `SET_SELECTED_BASELINES_${tableId}`:\n                newBaselineTableData = [ ...state.baselineTableData ];\n                //rows = baselinesReducerHelpers.setSelected(newBaselineTableData, state.selectedBaselineIds);\n                rows = baselinesReducerHelpers.setSelected(newBaselineTableData, action.payload);\n\n                return {\n                    ...state,\n                    baselineTableData: rows,\n                    //selectedBaselineIds: action.payload.length ? action.payload : state.selectedBaselineIds\n                    selectedBaselineIds: action.payload\n                };\n            case `CLEAR_SELECTED_BASELINES_${tableId}`:\n                return {\n                    ...state,\n                    selectedBaselineIds: []\n                };\n            case `CLEAR_BASELINE_DATA_${tableId}`:\n                return {\n                    ...state,\n                    baselineData: undefined\n                };\n            case `DELETE_SELECTED_BASELINES_${tableId}_PENDING`:\n                return {\n                    ...state,\n                    loading: true\n                };\n            case `DELETE_SELECTED_BASELINES_${tableId}_FULFILLED`:\n                return {\n                    ...state,\n                    loading: false\n                };\n            case `DELETE_SELECTED_BASELINES_${tableId}_REJECTED`:\n                response = action.payload.response;\n                errorObject = { status: response.status };\n                if (response.data === '') {\n                    errorObject.detail = response.statusText;\n                } else if (response.data.message) {\n                    errorObject.detail = response.data.message;\n                } else {\n                    errorObject.detail = response.data.detail;\n                }\n\n                return {\n                    ...state,\n                    loading: false,\n                    baselineError: errorObject\n                };\n            case `EXPORT_BASELINES_LIST_TO_CSV_${tableId}`:\n                helpers.downloadCSV(action.payload);\n                return {\n                    ...state\n                };\n            default:\n                return state;\n        }\n    };\n\n    return tableReducer;\n};\n\nexport default baselinesTableReducer;\n","import { combineReducers } from 'redux';\nexport { default as baselinesTableActions } from './actions';\nimport baselinesTableReducer from './baselinesTableReducer';\n\nexport const baselinesTableRootReducer = combineReducers({\n    checkboxTable: baselinesTableReducer('CHECKBOX'),\n    radioTable: baselinesTableReducer('RADIO'),\n    comparisonTable: baselinesTableReducer('COMPARISON')\n});\n","const OPEN_FILTER_DROPDOWN = 'OPEN_FILTER_DROPDOWN';\n\nexport default {\n    OPEN_FILTER_DROPDOWN\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from '@patternfly/react-core';\n\nexport const DriftTooltip = ({\n    content,\n    body\n}) => {\n    return (\n        <Tooltip\n            content={ content }\n        >\n            { body }\n        </Tooltip>\n    );\n};\n\nDriftTooltip.propTypes = {\n    content: PropTypes.string,\n    body: PropTypes.any\n};\n\nexport default DriftTooltip;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\n\nexport class EmptyStateDisplay extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    async componentDidMount() {\n        await window.insights?.chrome?.appAction?.('comparison-list');\n    }\n\n    render() {\n        const { button, color, error, icon, isSmall, text, title } = this.props;\n\n        /*eslint-disable react/jsx-key*/\n        return (\n            <EmptyState variant={ isSmall ? EmptyStateVariant.small : EmptyStateVariant.large }>\n                { icon\n                    ? <EmptyStateIcon\n                        icon={ icon }\n                        color={ color ? color : null }\n                        className={ isSmall ? 'small-empty-state-icon' : null }\n                    />\n                    : null\n                }\n                <br></br>\n                <Title\n                    headingLevel={ isSmall ? 'h5' : 'h1' }\n                    size={ isSmall ? 'md' : 'lg' }\n                >\n                    { title }\n                </Title>\n                <EmptyStateBody>\n                    { text ? text.map(line =>\n                        <React.Fragment>\n                            { line }\n                            <br />\n                        </React.Fragment>)\n                        : null\n                    }\n                    { error ? error : null }\n                </EmptyStateBody>\n                { button }\n            </EmptyState>\n        );\n        /*eslint-enable react/jsx-key*/\n    }\n}\n\nEmptyStateDisplay.propTypes = {\n    button: PropTypes.object,\n    color: PropTypes.string,\n    error: PropTypes.string,\n    icon: PropTypes.any,\n    isSmall: PropTypes.bool,\n    text: PropTypes.array,\n    title: PropTypes.string\n};\n\nexport default EmptyStateDisplay;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nexport class HistoricalProfilesCheckbox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: this.findChecked()\n        };\n    }\n\n    findChecked = () => {\n        const { profile, selectedHSPIds, entities, updateBadgeCount } = this.props;\n        let checked;\n\n        if (profile.captured_date === 'Latest') {\n            checked = entities.selectedSystemIds.some(id => id === profile.id);\n            updateBadgeCount(checked);\n        } else {\n            checked = selectedHSPIds?.some(id => id === profile.id);\n        }\n\n        return checked;\n    }\n\n    handleChange = () => {\n        const { checked } = this.state;\n        const { onSelect, profile } = this.props;\n\n        this.setState({\n            checked: !checked\n        });\n\n        onSelect(checked, profile);\n    }\n\n    render() {\n        const { profile } = this.props;\n        const { checked } = this.state;\n\n        /*eslint-disable camelcase*/\n        return (\n            <React.Fragment>\n                <Checkbox\n                    label={ profile.captured_date === 'Latest'\n                        ? profile.captured_date\n                        : moment.utc(profile.captured_date).format('DD MMM YYYY, HH:mm UTC') }\n                    isChecked={ checked }\n                    onChange={ this.handleChange }\n                    aria-label={ profile.id }\n                    id={ profile.id }\n                    name={ profile.id }\n                    data-ouia-component-id={ 'hsp-popover-option-checkbox-' + profile.id }\n                    data-ouia-component-type='PF4/Checkbox'\n                />\n            </React.Fragment>\n        );\n        /*eslint-enable camelcase*/\n    }\n}\n\nHistoricalProfilesCheckbox.propTypes = {\n    profile: PropTypes.object,\n    selectHistoricProfiles: PropTypes.func,\n    selectedHSPIds: PropTypes.array,\n    updateBadgeCount: PropTypes.func,\n    selectSystem: PropTypes.func,\n    entities: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        entities: state.entities\n    };\n}\n\nexport default (connect(mapStateToProps, null)(HistoricalProfilesCheckbox));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Radio } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nexport class HistoricalProfilesRadio extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: this.findChecked()\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { entities, profile } = this.props;\n\n        if (prevProps.entities?.selectedHSP !== entities?.selectedHSP) {\n            this.setState({\n                checked: entities.selectedHSP?.id === profile.id\n            });\n        }\n    }\n\n    findChecked = () => {\n        const { profile, entities } = this.props;\n        let checked;\n\n        if (profile.captured_date === 'Latest') {\n            checked = entities.selectedSystemIds.some(id => id === profile.id);\n        } else {\n            checked = entities?.selectedHSP?.id === profile.id;\n        }\n\n        return checked;\n    }\n\n    handleChange = () => {\n        const { checked } = this.state;\n        const { onSingleSelect, profile } = this.props;\n\n        if (!checked) {\n            this.setState({\n                checked: true\n            });\n        }\n\n        onSingleSelect(profile);\n    }\n\n    render() {\n        const { profile } = this.props;\n        const { checked } = this.state;\n\n        /*eslint-disable camelcase*/\n        return (\n            <React.Fragment>\n                <Radio\n                    isChecked={ checked }\n                    id={ profile.captured_date }\n                    name={ profile.captured_date }\n                    label={ moment.utc(profile.captured_date).format('DD MMM YYYY, HH:mm UTC') }\n                    value={ profile.captured_date }\n                    onChange={ this.handleChange }\n                />\n            </React.Fragment>\n        );\n        /*eslint-enable camelcase*/\n    }\n}\n\nHistoricalProfilesRadio.propTypes = {\n    profile: PropTypes.object,\n    entities: PropTypes.object,\n    onSingleSelect: PropTypes.func,\n    checked: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n    return {\n        entities: state.entities\n    };\n}\n\nexport default (connect(mapStateToProps, null)(HistoricalProfilesRadio));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Badge, Button, Popover } from '@patternfly/react-core';\nimport { ExclamationCircleIcon, HistoryIcon, UndoIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nimport systemsTableActions from '../SystemsTable/actions';\nimport HistoricalProfilesCheckbox from './HistoricalProfilesCheckbox/HistoricalProfilesCheckbox';\nimport api from '../../api';\nimport EmptyStateDisplay from '../EmptyStateDisplay/EmptyStateDisplay';\nimport HistoricalProfilesRadio from './HistoricalProfilesRadio/HistoricalProfilesRadio';\nimport { addSystemModalActions } from '../AddSystemModal/redux';\n\nexport class HistoricalProfilesPopover extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: false,\n            historicalData: undefined,\n            dropDownArray: this.renderLoadingRows(),\n            badgeCount: this.props.badgeCount ? this.props.badgeCount : 0,\n            error: undefined\n        };\n\n        this.onToggle = () => {\n            const { isVisible } = this.state;\n\n            if (isVisible === false) {\n                this.fetchData(this.props.system);\n            }\n\n            this.setState({\n                isVisible: !isVisible\n            });\n        };\n\n        this.onSelect = this.onSelect.bind(this);\n        this.onSingleSelect = this.onSingleSelect.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.selectedHSPIds !== prevProps.selectedHSPIds) {\n            this.updateBadgeCount();\n            this.setState({ dropDownArray: this.createDropdownArray() });\n        }\n    }\n\n    async onSelect(checked, profile) {\n        const { handleHSPSelection, selectHistoricProfiles, selectSystem, selectedHSPIds } = this.props;\n        let newSelectedHSPIds = [ ...selectedHSPIds ];\n\n        if (profile.captured_date === 'Latest') {\n            await selectSystem(profile.id, !checked);\n        } else {\n            if (newSelectedHSPIds.includes(profile.id)) {\n                newSelectedHSPIds = newSelectedHSPIds.filter(hsp => hsp !== profile.id);\n            } else {\n                newSelectedHSPIds.push(profile.id);\n            }\n\n            await selectHistoricProfiles(newSelectedHSPIds);\n        }\n\n        handleHSPSelection(profile);\n        this.updateBadgeCount(!checked);\n    }\n\n    async onSingleSelect(profile) {\n        const { selectSystem, selectSingleHSP } = this.props;\n\n        if (profile.captured_date === 'Latest') {\n            await selectSystem(profile.id, true);\n        }\n\n        selectSingleHSP(profile);\n    }\n\n    fetchCompare = () => {\n        const { systemIds, selectedBaselineIds, selectedHSPIds, referenceId, fetchCompare } = this.props;\n\n        fetchCompare(systemIds, selectedBaselineIds, selectedHSPIds, referenceId);\n    }\n\n    async retryFetch() {\n        const { system } = this.props;\n        this.setState({\n            dropDownArray: this.renderLoadingRows()\n        });\n\n        await this.fetchData(system);\n    }\n\n    /*eslint-disable camelcase*/\n    async fetchData(system) {\n        const { systemName } = this.props;\n\n        let fetchedData = await api.fetchHistoricalData(system.system_id ? system.system_id : system.id);\n\n        fetchedData.profiles?.forEach(function(profile) {\n            profile.system_name = systemName;\n        });\n\n        if (fetchedData.status) {\n            this.setState({\n                error: { status: fetchedData.status, message: fetchedData.data.message }\n            });\n        } else {\n            fetchedData.profiles.shift();\n\n            this.setState({\n                historicalData: fetchedData\n            });\n        }\n\n        this.setState({\n            dropDownArray: this.createDropdownArray()\n        });\n    }\n    /*eslint-enable camelcase*/\n\n    createDropdownArray = () => {\n        const { hasMultiSelect, selectedHSPIds } = this.props;\n        const { historicalData, error } = this.state;\n\n        let dropdownItems = [];\n        let badgeCountFunc = this.updateBadgeCount;\n        let onSelectFunc = this.onSelect;\n        let onSingleSelectFunc = this.onSingleSelect;\n\n        if (historicalData && historicalData.profiles.length > 0) {\n            historicalData.profiles.forEach(function(profile, index) {\n                dropdownItems.push(\n                    <div className={ index > 0 ? 'sm-padding-top' : null }>\n                        { hasMultiSelect\n                            ? <HistoricalProfilesCheckbox\n                                profile={ profile }\n                                updateBadgeCount={ badgeCountFunc }\n                                onSelect={ onSelectFunc }\n                                selectedHSPIds={ selectedHSPIds }\n                            />\n                            : <HistoricalProfilesRadio\n                                profile={ profile }\n                                onSingleSelect={ onSingleSelectFunc }\n                                selectedHSPIds={ selectedHSPIds }\n                            />\n                        }\n                    </div>\n                );\n            });\n        } else if (error) {\n            dropdownItems.push(\n                <EmptyStateDisplay\n                    icon={ ExclamationCircleIcon }\n                    isSmall={ true }\n                    color='#c9190b'\n                    title={ 'Cannot get historical check-ins' }\n                    error={ error.status + ': ' + error.message }\n                    button={ <a onClick={ () => this.retryFetch() }>\n                        <UndoIcon className='reload-button' />\n                            Retry\n                    </a> }\n                />\n            );\n        } else {\n            dropdownItems.push(\n                <div>\n                    There are no historical profiles to display.\n                </div>\n            );\n        }\n\n        return dropdownItems;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rows.push(\n                <Skeleton\n                    className='hsp-dropdown-loading'\n                    size={ SkeletonSize.sm }\n                    key={ 'skeleton-row-' + i }\n                />\n            );\n        }\n\n        return rows;\n    }\n\n    updateBadgeCount = () => {\n        this.setState({\n            badgeCount: this.state.historicalData?.profiles.filter((hsp) => {\n                return this.props.selectedHSPIds.includes(hsp.id);\n            }).length\n        });\n    }\n\n    renderBadge = () => {\n        const { badgeCount } = this.state;\n\n        if (badgeCount > 0) {\n            return <Badge key={ 1 }>{ badgeCount }</Badge>;\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        /*eslint-disable camelcase*/\n        const { dropDownArray, isVisible } = this.state;\n        const { hasBadge, hasCompareButton, system } = this.props;\n        let id = system?.system_id ? system?.system_id : system?.id;\n        /*eslint-enable camelcase*/\n\n        return (\n            <React.Fragment>\n                <span\n                    className='hsp-icon-padding'\n                    data-ouia-component-id={ 'hsp-popover-toggle-' + id  }\n                    data-ouia-component-type='PF4/Button' >\n                    <Popover\n                        id={ 'hsp-popover-' + id }\n                        isVisible={ isVisible }\n                        shouldClose={ () => this.onToggle() }\n                        headerContent={ <div>Historical profiles for this system</div> }\n                        bodyContent={ <div style={{ maxHeight: '350px', overflowY: 'scroll' }}>\n                            { dropDownArray }\n                        </div> }\n                        footerContent={ hasCompareButton\n                            ? <Button\n                                variant='primary'\n                                ouiaId=\"hsp-popover-compare\"\n                                onClick={ () => this.fetchCompare() }>\n                                Compare\n                            </Button>\n                            : null }\n                    >\n                        <HistoryIcon className='hsp-dropdown-icon' onClick={ () => this.onToggle() } />\n                    </Popover>\n                </span>\n                { hasBadge ? this.renderBadge() : null }\n            </React.Fragment>\n        );\n    }\n}\n\nHistoricalProfilesPopover.propTypes = {\n    fetchHistoricalData: PropTypes.func,\n    system: PropTypes.object,\n    fetchCompare: PropTypes.func,\n    systemIds: PropTypes.array,\n    selectedHSPIds: PropTypes.array,\n    selectedBaselineIds: PropTypes.array,\n    selectHistoricProfiles: PropTypes.func,\n    selectSystem: PropTypes.func,\n    hasBadge: PropTypes.bool,\n    hasCompareButton: PropTypes.bool,\n    badgeCount: PropTypes.number,\n    referenceId: PropTypes.string,\n    dropdownDirection: PropTypes.string,\n    hasMultiSelect: PropTypes.bool,\n    selectSingleHSP: PropTypes.func,\n    handleHSPSelection: PropTypes.func,\n    systemName: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        selectedHSPIds: state.historicProfilesState?.selectedHSPIds || [],\n        selectedBaselineIds: state.baselinesTableState?.checkboxTable.selectedBaselineIds || []\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        selectSystem: (id, selected) => dispatch({\n            type: 'SELECT_ENTITY',\n            payload: { id, selected }\n        }),\n        selectSingleHSP: (profile) => dispatch(systemsTableActions.selectSingleHSP(profile)),\n        handleHSPSelection: (content) => dispatch(addSystemModalActions.handleHSPSelection(content))\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HistoricalProfilesPopover));\n","const SELECT_HISTORIC_PROFILES = 'SELECT_HISTORIC_PROFILES';\n\nexport default {\n    SELECT_HISTORIC_PROFILES\n};\n","import types from '../modules/types';\n\nfunction selectSingleHSP(profile) {\n    return {\n        type: types.SELECT_SINGLE_HSP,\n        payload: profile\n    };\n}\n\nfunction updateColumns(key) {\n    return {\n        type: types.UPDATE_COLUMNS,\n        payload: key\n    };\n}\n\nfunction clearAllFilters() {\n    return {\n        type: types.DRIFT_CLEAR_ALL_FILTERS\n    };\n}\n\nfunction disableSystemTable(isDisabled) {\n    return {\n        type: types.DISABLE_SYSTEM_TABLE,\n        payload: isDisabled\n    };\n}\n\nexport default {\n    selectSingleHSP,\n    updateColumns,\n    clearAllFilters,\n    disableSystemTable\n};\n","import React from 'react';\nimport { CloseIcon, HistoryIcon, ServerIcon } from '@patternfly/react-icons';\nimport moment from 'moment';\nimport DriftTooltip from './DriftTooltip/DriftTooltip';\nimport baselinesTableHelpers from './BaselinesTable/redux/helpers';\nimport editBaselineHelpers from './BaselinesPage/EditBaselinePage/EditBaseline/helpers';\n\nfunction findSelectedOnPage(rows, selectedSystemIds) {\n    let selectedSystems = [];\n\n    rows.forEach(function(row) {\n        if (selectedSystemIds.includes(row.id)) {\n            row.selected = true;\n        }\n\n        if (row.selected) {\n            selectedSystems.push({\n                id: row.id,\n                name: row.display_name,\n                icon: <DriftTooltip\n                    content='System'\n                    body={ <ServerIcon /> }\n                />\n            });\n        }\n    });\n\n    return selectedSystems;\n}\n\nfunction findCheckedValue(total, selected) {\n    if (selected === total && total > 0) {\n        return true;\n    } else if (selected > 0 && selected < total) {\n        return null;\n    } else {\n        return false;\n    }\n}\n\nfunction paginateData(data, selectedPage, itemsPerPage) {\n    let paginatedData = [];\n\n    if (data === null || !data.length) {\n        return [];\n    }\n\n    for (let i = 0; i < data.length; i++) {\n        if (Math.ceil((i + 1) / itemsPerPage) === selectedPage) {\n            paginatedData.push(data[i]);\n        }\n    }\n\n    return paginatedData;\n}\n\nfunction buildSystemsTableWithSelectedHSP (rows, selectedHSP, deselectHistoricalProfiles) {\n    /*eslint-disable camelcase*/\n    rows.forEach((row) => {\n        row.selected = false;\n        row.display_selected_hsp = row.display_name;\n        if (selectedHSP.system_id === row.id) {\n            row.display_selected_hsp = <React.Fragment>\n                <div>\n                    { row.display_name }\n                </div>\n                <div>\n                    <HistoryIcon className='active-blue margin-right-5-px' />\n                    {\n                        moment.utc(selectedHSP.captured_date).format('DD MMM YYYY, HH:mm UTC')\n                    }\n                    <CloseIcon\n                        className='pointer not-active margin-left-5-px'\n                        onClick={ () => deselectHistoricalProfiles() }\n                    />\n                </div>\n            </React.Fragment>;\n        }\n    });\n    /*eslint-enable camelcase*/\n\n    return rows;\n}\n\nfunction downloadCSV(baselineData) {\n    let filename;\n    let csv;\n\n    if (baselineData.exportType === 'baseline list') {\n        filename = 'baseline-list-export-';\n        csv = baselinesTableHelpers.convertListToCSV(baselineData.exportData);\n    } else if (baselineData.exportType === 'baselines data') {\n        filename = 'baseline-data-export-';\n        csv = editBaselineHelpers.convertDataToCSV(baselineData.exportData, baselineData.baselineRowData);\n    }\n\n    if (csv === null) {\n        return;\n    }\n\n    let today = new Date();\n    filename += today.toISOString();\n    filename += '.csv';\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = 'data:text/csv;charset=utf-8,' + csv;\n    }\n\n    let data = encodeURI(csv);\n\n    let link = document.createElement('a');\n    link.setAttribute('href', data);\n    link.setAttribute('download', filename);\n    link.dispatchEvent(new MouseEvent(`click`, { bubbles: true, cancelable: true, view: window }));\n}\n\nexport default {\n    findSelectedOnPage,\n    findCheckedValue,\n    paginateData,\n    buildSystemsTableWithSelectedHSP,\n    downloadCSV\n};\n","import types from './types';\nimport api from '../../api';\nimport { ASC, DESC } from '../../constants';\n\nfunction fetchCompare(systemIds, baselineIds, systemHSPIds, referenceId) {\n    return {\n        type: types.FETCH_COMPARE,\n        payload: api.getCompare(systemIds, baselineIds, systemHSPIds, referenceId)\n    };\n}\n\nfunction revertCompareData() {\n    return {\n        type: types.REVERT_COMPARE_DATA\n    };\n}\n\nfunction clearComparison() {\n    return {\n        type: types.CLEAR_COMPARISON\n    };\n}\n\nfunction clearComparisonFilters() {\n    return {\n        type: types.CLEAR_COMPARISON_FILTERS\n    };\n}\n\nfunction setSelectedSystemIds(selectedSystemIds) {\n    return {\n        type: types.SET_SELECTED_SYSTEM_IDS,\n        payload: { selectedSystemIds }\n    };\n}\n\nfunction toggleFactSort(currentSort) {\n    return {\n        type: types.TOGGLE_FACT_SORT,\n        payload: currentSort === ASC ? DESC : ASC\n    };\n}\n\nfunction toggleStateSort(currentSort) {\n    let newSort;\n\n    if (currentSort === ASC) {\n        newSort = DESC;\n    }\n    else if (currentSort === DESC) {\n        newSort = '';\n    } else {\n        newSort = ASC;\n    }\n\n    return {\n        type: types.TOGGLE_STATE_SORT,\n        payload: newSort\n    };\n}\n\nfunction addStateFilter(filterData) {\n    filterData.selected = !filterData.selected;\n    return {\n        type: types.ADD_STATE_FILTER,\n        payload: filterData\n    };\n}\n\nfunction filterByFact(filter) {\n    return {\n        type: types.FILTER_BY_FACT,\n        payload: filter\n    };\n}\n\nfunction handleFactFilter(filter) {\n    return {\n        type: types.HANDLE_FACT_FILTER,\n        payload: filter\n    };\n}\n\nfunction clearAllFactFilters() {\n    return {\n        type: types.CLEAR_ALL_FACT_FILTERS\n    };\n}\n\nfunction updatePagination(pagination) {\n    return {\n        type: types.UPDATE_DRIFT_PAGINATION,\n        payload: pagination\n    };\n}\n\nfunction exportToCSV() {\n    return {\n        type: types.EXPORT_TO_CSV\n    };\n}\n\nfunction expandRow(factName) {\n    return {\n        type: types.EXPAND_ROW,\n        payload: factName\n    };\n}\n\nfunction updateReferenceId(id) {\n    return {\n        type: types.UPDATE_REFERENCE_ID,\n        payload: id\n    };\n}\n\nfunction setGlobalFilterTags(tags = []) {\n    return {\n        type: types.SET_GLOBAL_FILTER_TAGS,\n        payload: tags\n    };\n}\n\nfunction setGlobalFilterWorkloads(workloads = []) {\n    return {\n        type: types.SET_GLOBAL_FILTER_WORKLOADS,\n        payload: workloads\n    };\n}\n\nfunction setGlobalFilterSIDs(SIDs = []) {\n    return {\n        type: types.SET_GLOBAL_FILTER_SIDS,\n        payload: SIDs\n    };\n}\n\nfunction resetComparisonFilters() {\n    return {\n        type: types.RESET_COMPARISON_FILTERS\n    };\n}\n\nexport default {\n    fetchCompare,\n    revertCompareData,\n    clearComparison,\n    clearComparisonFilters,\n    setSelectedSystemIds,\n    toggleFactSort,\n    addStateFilter,\n    toggleStateSort,\n    filterByFact,\n    handleFactFilter,\n    clearAllFactFilters,\n    updatePagination,\n    exportToCSV,\n    expandRow,\n    updateReferenceId,\n    setGlobalFilterTags,\n    setGlobalFilterWorkloads,\n    setGlobalFilterSIDs,\n    resetComparisonFilters\n};\n","const SELECT_ENTITY = 'SELECT_ENTITY';\nconst FETCH_COMPARE = 'FETCH_COMPARE';\nconst SET_SELECTED_SYSTEM_IDS = 'SET_SELECTED_SYSTEM_IDS';\nconst TOGGLE_FACT_SORT = 'TOGGLE_FACT_SORT';\nconst ADD_STATE_FILTER = 'ADD_STATE_FILTER';\nconst TOGGLE_STATE_SORT = 'TOGGLE_STATE_SORT';\nconst FILTER_BY_FACT = 'FILTER_BY_FACT';\nconst HANDLE_FACT_FILTER = 'HANDLE_FACT_FILTER';\nconst CLEAR_ALL_FACT_FILTERS = 'CLEAR_ALL_FACT_FILTERS';\nconst UPDATE_DRIFT_PAGINATION = 'UPDATE_DRIFT_PAGINATION';\nconst CLEAR_COMPARISON = 'CLEAR_COMPARISON';\nconst CLEAR_COMPARISON_FILTERS = 'CLEAR_COMPARISON_FILTERS';\nconst EXPORT_TO_CSV = 'EXPORT_TO_CSV';\nconst EXPAND_ROW = 'EXPAND_ROW';\nconst REVERT_COMPARE_DATA = 'REVERT_COMPARE_DATA';\nconst TOGGLE_ACTIVE_SORT = 'TOGGLE_ACTIVE_SORT';\nconst UPDATE_REFERENCE_ID = 'UPDATE_REFERENCE_ID';\nconst SELECT_SINGLE_HSP = 'SELECT_SINGLE_HSP';\nconst UPDATE_COLUMNS = 'UPDATE_COLUMNS';\nconst SET_GLOBAL_FILTER_TAGS = 'SET_GLOBAL_FILTER_TAGS';\nconst SET_GLOBAL_FILTER_WORKLOADS = 'SET_GLOBAL_FILTER_WORKLOADS';\nconst SET_GLOBAL_FILTER_SIDS = 'SET_GLOBAL_FILTER_SIDS';\nconst DRIFT_CLEAR_ALL_FILTERS = 'DRIFT_CLEAR_ALL_FILTERS';\nconst DISABLE_SYSTEM_TABLE = 'DISABLE_SYSTEM_TABLE';\nconst RESET_COMPARISON_FILTERS = 'RESET_COMPARISON_FILTERS';\n\nexport default {\n    SELECT_ENTITY,\n    FETCH_COMPARE,\n    SET_SELECTED_SYSTEM_IDS,\n    TOGGLE_FACT_SORT,\n    ADD_STATE_FILTER,\n    TOGGLE_STATE_SORT,\n    FILTER_BY_FACT,\n    HANDLE_FACT_FILTER,\n    CLEAR_ALL_FACT_FILTERS,\n    UPDATE_DRIFT_PAGINATION,\n    CLEAR_COMPARISON,\n    CLEAR_COMPARISON_FILTERS,\n    EXPORT_TO_CSV,\n    EXPAND_ROW,\n    REVERT_COMPARE_DATA,\n    TOGGLE_ACTIVE_SORT,\n    UPDATE_REFERENCE_ID,\n    SELECT_SINGLE_HSP,\n    UPDATE_COLUMNS,\n    SET_GLOBAL_FILTER_TAGS,\n    SET_GLOBAL_FILTER_WORKLOADS,\n    SET_GLOBAL_FILTER_SIDS,\n    DRIFT_CLEAR_ALL_FILTERS,\n    DISABLE_SYSTEM_TABLE,\n    RESET_COMPARISON_FILTERS\n};\n","function getBaseName(pathname) {\n    let release = '/';\n    const pathName = pathname.split('/');\n\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n\n    return `${release}${pathName[0]}/${pathName[1]}`;\n}\n\nexport default getBaseName;\n","/*eslint-disable camelcase*/\nimport axios from 'axios';\nimport { DRIFT_API_ROOT, BASELINE_API_ROOT, HISTORICAL_PROFILES_API_ROOT } from './constants';\n\nasync function post(path, body = {}) {\n    const request = await axios.post(DRIFT_API_ROOT.concat(path), body);\n    return request.data;\n}\n\nasync function getBaselines(path, getParams = {}) {\n    const request = await axios.get(BASELINE_API_ROOT.concat(path), { params: getParams });\n    return request.data;\n}\n\nasync function getBaseline(path) {\n    const request = await axios.get(BASELINE_API_ROOT.concat(path));\n    return request.data.data[0];\n}\n\nasync function getNotificationSystems(path) {\n    const request = await axios.get(BASELINE_API_ROOT.concat(path));\n    return request.data.system_ids;\n}\n\nasync function postSystemNotifications(path, body = {}) {\n    const request = await axios.post(BASELINE_API_ROOT.concat(path), body);\n    return request.data;\n}\n\nasync function patchBaseline(path, body = {}) {\n    let request = await axios.patch(BASELINE_API_ROOT.concat(path), body);\n\n    return request;\n}\n\nasync function postBaseline(path, body = {}) {\n    const request = await axios.post(BASELINE_API_ROOT.concat(path), body);\n    return request.data;\n}\n\nasync function deleteBaselines(path, body = {}) {\n    let response = await axios.post(BASELINE_API_ROOT.concat(path), body);\n\n    return response;\n}\n\nasync function getHistoricalData(path) {\n    let response;\n\n    const request = await axios.get(HISTORICAL_PROFILES_API_ROOT.concat(path))\n    .catch(function (error) {\n        return error.response;\n    });\n\n    if (request.status === 200) {\n        response = request.data.data[0];\n    } else {\n        response = request;\n    }\n\n    return response;\n}\n\nfunction getCompare(systemIds = [], baselineIds = [], historicalSystemProfileIds = [], referenceId = '') {\n    if (!Array.isArray(systemIds)) {\n        systemIds = [ systemIds ];\n    }\n\n    if (!Array.isArray(baselineIds)) {\n        baselineIds = [ baselineIds ];\n    }\n\n    if (!Array.isArray(historicalSystemProfileIds)) {\n        historicalSystemProfileIds = [ historicalSystemProfileIds ];\n    }\n\n    return post('/comparison_report', {\n        system_ids: systemIds,\n        baseline_ids: baselineIds,\n        historical_system_profile_ids: historicalSystemProfileIds,\n        reference_id: referenceId\n    });\n}\n\nfunction getBaselineList(params = {}) {\n    return getBaselines('/baselines', params);\n}\n\nfunction getBaselineData(baselineId = []) {\n    let path = '/baselines/';\n\n    return getBaseline(path.concat(baselineId), {});\n}\n\nfunction patchBaselineData(baselineId = [], apiBody) {\n    let path = '/baselines/';\n\n    return patchBaseline(path.concat(baselineId), apiBody);\n}\n\nfunction deleteBaselinesData(deleteBaselinesAPIBody = []) {\n    let path = '/baselines/deletion_request';\n\n    return deleteBaselines(path, deleteBaselinesAPIBody);\n}\n\nfunction postNewBaseline(apiBody, uuid) {\n    let path = '/baselines';\n    if (uuid !== undefined) {\n        let newPath = path.concat('/', uuid, '?', 'display_name=', apiBody.display_name);\n        return postBaseline(newPath, {});\n    }\n\n    return postBaseline(path, apiBody);\n}\n\nfunction fetchHistoricalData(systemId) {\n    let path = '/systems/';\n    return getHistoricalData(path.concat(systemId));\n}\n\nfunction getBaselineNotification(baselineId) {\n    let path = `/baselines/${baselineId}/systems`;\n    return getNotificationSystems(path);\n}\n\nfunction addSystemNotification(baselineId, systems) {\n    let path = `/baselines/${baselineId}/systems`;\n    let body = { system_ids: systems };\n\n    return postSystemNotifications(path, body);\n}\n\nfunction deleteSystemNotifications(baselineId, systems) {\n    let path = `/baselines/${baselineId}/systems/deletion_request`;\n    let body = { system_ids: systems };\n\n    return postSystemNotifications(path, body);\n}\n\nexport default {\n    getCompare,\n    getBaselineList,\n    getBaselineData,\n    patchBaselineData,\n    deleteBaselinesData,\n    postNewBaseline,\n    fetchHistoricalData,\n    getBaselineNotification,\n    addSystemNotification,\n    deleteSystemNotifications\n};\n/*eslint-enable camelcase*/\n","import version from './../package.json';\nexport const DRIFT_API_ROOT = '/api/drift/v1';\nexport const BASELINE_API_ROOT = '/api/system-baseline/v1';\nexport const HISTORICAL_PROFILES_API_ROOT = '/api/historical-system-profiles/v1';\nexport const ASC = 'asc';\nexport const DESC = 'desc';\nexport const FACT_ID = 0;\nexport const FACT_NAME = 1;\nexport const FACT_VALUE = 2;\nexport const COLUMN_DELIMITER = ',';\nexport const LINE_DELIMITER = '\\n';\n\nexport const API_HEADERS = {\n    'X-Insights-Drift': version,\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n};\n","import { ASC, DESC, COLUMN_DELIMITER, LINE_DELIMITER } from '../../constants';\nimport moment from 'moment';\n\nfunction paginateData(data, selectedPage, factsPerPage) {\n    let paginatedFacts = [];\n\n    if (data === null || !data.length) {\n        return [];\n    }\n\n    for (let i = 0; i < data.length; i++) {\n        if (Math.ceil((i + 1) / factsPerPage) === selectedPage) {\n            paginatedFacts.push(data[i]);\n        }\n    }\n\n    return paginatedFacts;\n}\n\nfunction getStateSelected(state, stateFilters) {\n    let isStateSelected;\n\n    isStateSelected = stateFilters.find(function(stateFilter) {\n        if (stateFilter.filter === state) {\n            return stateFilter.selected;\n        } else if (state === 'INCOMPLETE_DATA_OBFUSCATED') {\n            return getState('INCOMPLETE_DATA', stateFilters).selected;\n        }\n    });\n\n    return isStateSelected;\n}\n\nfunction getState(state, stateFilters) {\n    let isStateSelected;\n\n    stateFilters.find(function(stateFilter) {\n        if (stateFilter.filter === state) {\n            isStateSelected = stateFilter;\n        } else if (state === 'INCOMPLETE_DATA_OBFUSCATED') {\n            isStateSelected = getState('INCOMPLETE_DATA', stateFilters);\n        }\n    });\n\n    return isStateSelected;\n}\n\nfunction setTooltip (data, stateFilters, referenceId) {\n    let type = data.comparisons || data.multivalues ? 'category' : 'row';\n    let state = getState(data.state, stateFilters);\n\n    if (data.state === 'SAME') {\n        data.tooltip = state.display +\n        ' - ' +\n        'All system facts in this ' + type + ' are the same.';\n    } else if (data.state === 'INCOMPLETE_DATA') {\n        data.tooltip = state.display +\n        ' - ' +\n        'At least one system fact value in this ' + type + ' is missing.';\n    } else if (data.state === 'INCOMPLETE_DATA_OBFUSCATED') {\n        data.tooltip = state.display +\n        ' - ' +\n        'At least one system fact value in this ' + type + ' is redacted.';\n    } else {\n        if (referenceId) {\n            data.tooltip = state.display +\n            ' - ' +\n            'At least one system fact value in this ' + type + ' differs from the reference.';\n        } else {\n            data.tooltip = state.display +\n            ' - ' +\n            'At least one system fact value in this ' + type + ' differs.';\n        }\n    }\n}\n\nfunction filterCompareData(data, stateFilters, factFilter, referenceId, activeFactFilters) {\n    let filteredFacts = [];\n    let filteredComparisons = [];\n    let isStateSelected;\n    let lowerCaseFactFilter = factFilter.toLowerCase();\n    let lowerCaseActiveFilters = activeFactFilters?.map(filter => filter.toLowerCase());\n\n    if (data === null || !data.length) {\n        return [];\n    }\n\n    for (let i = 0; i < data.length; i += 1) {\n        let lowerCaseFactName = data[i].name.toLowerCase();\n        isStateSelected = getStateSelected(data[i].state, stateFilters);\n\n        if (data[i].comparisons) {\n            if (lowerCaseFactName === lowerCaseFactFilter || lowerCaseActiveFilters?.includes(lowerCaseFactName)) {\n                setTooltip(data[i], stateFilters, referenceId);\n                filteredComparisons = filterComparisons(data[i].comparisons, stateFilters, '', referenceId, []);\n                filteredFacts.push({\n                    name: data[i].name,\n                    state: data[i].state,\n                    comparisons: filteredComparisons,\n                    tooltip: data[i].tooltip\n                });\n\n                continue;\n            }\n\n            filteredComparisons = filterComparisons(data[i].comparisons, stateFilters, lowerCaseFactFilter, referenceId, lowerCaseActiveFilters);\n\n            if (filteredComparisons.length) {\n                setTooltip(data[i], stateFilters, referenceId);\n                filteredFacts.push({\n                    name: data[i].name,\n                    state: data[i].state,\n                    comparisons: filteredComparisons,\n                    tooltip: data[i].tooltip\n                });\n            }\n        } else {\n            if (isStateSelected && filterFact(lowerCaseFactName, lowerCaseFactFilter, lowerCaseActiveFilters)) {\n                setTooltip(data[i], stateFilters, referenceId);\n                filteredFacts.push(data[i]);\n            }\n        }\n    }\n\n    return filteredFacts;\n}\n\n/*eslint-disable camelcase*/\nfunction filterComparisons(comparisons, stateFilters, factFilter, referenceId, activeFactFilters) {\n    let filteredComparisons = [];\n    let filteredMultivalueItems = [];\n    let isStateSelected;\n\n    for (let i = 0; i < comparisons.length; i++) {\n        let lowerCaseFactName = comparisons[i].name.toLowerCase();\n        if (comparisons[i].multivalues) {\n            filteredMultivalueItems = filterMultiFacts(comparisons[i].multivalues, stateFilters, referenceId);\n            if (filteredMultivalueItems.length && filterFact(lowerCaseFactName, factFilter, activeFactFilters)) {\n                setTooltip(comparisons[i], stateFilters, referenceId);\n                filteredComparisons.push({\n                    name: comparisons[i].name,\n                    state: comparisons[i].state,\n                    multivalues: filteredMultivalueItems,\n                    tooltip: comparisons[i].tooltip\n                });\n            }\n        } else {\n            isStateSelected = getStateSelected(comparisons[i].state, stateFilters);\n            if (isStateSelected && filterFact(lowerCaseFactName, factFilter, activeFactFilters)) {\n                setTooltip(comparisons[i], stateFilters, referenceId);\n                filteredComparisons.push(comparisons[i]);\n            }\n        }\n    }\n\n    return filteredComparisons;\n}\n/*eslint-enable camelcase*/\n\nfunction filterMultiFacts(multivalueItems, stateFilters, referenceId) {\n    let filteredMultivalueItems = [];\n\n    for (let i = 0; i < multivalueItems.length; i++) {\n        if (getStateSelected(multivalueItems[i].state, stateFilters)) {\n            setTooltip(multivalueItems[i], stateFilters, referenceId);\n            filteredMultivalueItems.push(multivalueItems[i]);\n        }\n    }\n\n    return filteredMultivalueItems;\n}\n\nfunction filterFact(factName, factFilter, activeFactFilters) {\n    let isFiltered = false;\n\n    if (activeFactFilters?.length > 0) {\n        activeFactFilters.forEach(function(filter) {\n            if (factName.includes(filter)) {\n                isFiltered = true;\n            }\n        });\n\n        if (!isFiltered && factFilter.length && factName.includes(factFilter)) {\n            isFiltered = true;\n        }\n\n    } else if (factName.includes(factFilter)) {\n        isFiltered = true;\n    }\n\n    return isFiltered;\n}\n\n/*eslint-disable camelcase*/\nfunction sortData(filteredFacts, factSort, stateSort) {\n    let filteredSubfacts;\n    let newFilteredFacts;\n    let filteredValues;\n\n    newFilteredFacts = sortFacts(filteredFacts, factSort, stateSort);\n\n    newFilteredFacts.forEach(function(fact) {\n        if (fact.comparisons !== undefined && fact.comparisons.length > 0) {\n            filteredSubfacts = sortFacts(fact.comparisons, factSort, stateSort);\n\n            filteredSubfacts.forEach(function(subFact) {\n                if (subFact.multivalues?.length > 0) {\n                    filteredValues = sortFacts(subFact.multivalues, factSort, stateSort);\n                    subFact.multivalues = filteredValues;\n                }\n            });\n\n            fact.comparisons = filteredSubfacts;\n        }\n    });\n\n    return newFilteredFacts;\n}\n/*eslint-enable camelcase*/\n\nfunction sortFacts(filteredFacts, factSort, stateSort) {\n    if (stateSort === ASC) {\n        filteredFacts.sort(function(a, b) {\n            if (a.state.toLowerCase() > b.state.toLowerCase()) {\n                return -1;\n            }\n            else if (a.state.toLowerCase() < b.state.toLowerCase()) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n    }\n\n    if (stateSort === DESC) {\n        filteredFacts.sort(function(a, b) {\n            if (b.state.toLowerCase() > a.state.toLowerCase()) {\n                return -1;\n            }\n            else if (b.state.toLowerCase() < a.state.toLowerCase()) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n    }\n\n    if (factSort === ASC) {\n        filteredFacts.sort(function(a, b) {\n            if (stateSort === '') {\n                if (a.name?.toLowerCase() > b.name?.toLowerCase()) {\n                    return 1;\n                }\n                else if (a.name?.toLowerCase() < b.name?.toLowerCase()) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            }\n            else {\n                if ((a.name?.toLowerCase() > b.name?.toLowerCase()) && (a.state === b.state)) {\n                    return 1;\n                }\n                else if ((a.name?.toLowerCase() < b.name?.toLowerCase()) && (a.state === b.state)) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            }\n        });\n    }\n    else if (factSort === DESC) {\n        filteredFacts.sort(function(a, b) {\n            if (stateSort === '') {\n                if (b.name?.toLowerCase() > a.name?.toLowerCase()) {\n                    return 1;\n                }\n                else if (b.name?.toLowerCase() < a.name?.toLowerCase()) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            }\n            else {\n                if ((b.name?.toLowerCase() > a.name?.toLowerCase()) && (a.state === b.state)) {\n                    return 1;\n                }\n                else if ((b.name?.toLowerCase() < a.name?.toLowerCase()) && (a.state === b.state)) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            }\n        });\n    }\n\n    return filteredFacts;\n}\n\nfunction addRow(fact) {\n    let factName = fact.name ? fact.name : '';\n    let value = '';\n    let result = '';\n\n    result += factName + COLUMN_DELIMITER;\n    result += fact.state + COLUMN_DELIMITER;\n\n    if (fact.systems) {\n        fact.systems.forEach(function(system) {\n            value = system.value ? system.value.replace(/,/g, '') : '';\n            result += value;\n            result += COLUMN_DELIMITER;\n        });\n    } else if (fact.multivalues) {\n        fact.multivalues.forEach(function(value) {\n            result += LINE_DELIMITER;\n            result += addRow(value);\n        });\n    }\n\n    return result;\n}\n\nfunction convertFactsToCSV(data, systems) {\n    if (data === null || !data.length) {\n        return null;\n    }\n\n    let systemNames = systems.map(system => system.display_name);\n    let mappedDates = systems.map(system => system.last_updated ? system.last_updated : system.updated);\n    let systemUpdates = [];\n    mappedDates.forEach((date) => {\n        systemUpdates.push(moment.utc(date).format('DD MMM YYYY HH:mm UTC'));\n    });\n\n    let headers = 'Fact,State,';\n    systemNames = systemNames.join(COLUMN_DELIMITER);\n    let result = headers + systemNames + LINE_DELIMITER;\n\n    systemUpdates = systemUpdates.join(COLUMN_DELIMITER);\n    result += COLUMN_DELIMITER + COLUMN_DELIMITER + systemUpdates + LINE_DELIMITER;\n\n    data.forEach(function(fact) {\n        result += addRow(fact);\n        result += LINE_DELIMITER;\n\n        if (fact.comparisons) {\n            fact.comparisons.forEach(function(subFact) {\n                result += '     ';\n                result += addRow(subFact);\n                result += LINE_DELIMITER;\n            });\n        }\n    });\n\n    return result;\n}\n\nfunction downloadCSV(driftData, systems) {\n    let csv = convertFactsToCSV(driftData, systems);\n\n    if (csv === null) {\n        return;\n    }\n\n    let filename = 'system-comparison-export-';\n    let today = new Date();\n    filename += today.toISOString();\n    filename += '.csv';\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = 'data:text/csv;charset=utf-8,' + csv;\n    }\n\n    let data = encodeURI(csv);\n\n    let link = document.createElement('a');\n    link.setAttribute('href', data);\n    link.setAttribute('download', filename);\n    link.dispatchEvent(new MouseEvent(`click`, { bubbles: true, cancelable: true, view: window }));\n}\n\nfunction toggleExpandedRow(expandedRows, factName) {\n    if (expandedRows.includes(factName)) {\n        expandedRows = expandedRows.filter(fact => fact !== factName);\n    } else {\n        expandedRows.push(factName);\n    }\n\n    return expandedRows;\n}\n\nfunction updateStateFilters(stateFilters, updatedStateFilter) {\n    let newStateFilters = [];\n\n    stateFilters.forEach(function (stateFilter) {\n        if (stateFilter.filter === updatedStateFilter.filter) {\n            newStateFilters.push(updatedStateFilter);\n        } else {\n            newStateFilters.push(stateFilter);\n        }\n    });\n\n    return newStateFilters;\n}\n\nfunction findFilterIndex(filter, activeFactFilters) {\n    return activeFactFilters.indexOf(filter);\n}\n\nexport default {\n    paginateData,\n    getStateSelected,\n    getState,\n    setTooltip,\n    filterCompareData,\n    filterComparisons,\n    filterMultiFacts,\n    filterFact,\n    sortData,\n    downloadCSV,\n    toggleExpandedRow,\n    updateStateFilters,\n    findFilterIndex\n};\n","import types from './types';\nimport { ASC, DESC } from '../../constants';\nimport reducerHelpers from './helpers';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\n\nconst initialState = {\n    fullCompareData: [],\n    filteredCompareData: [],\n    sortedFilteredFacts: [],\n    referenceId: undefined,\n    systems: [],\n    baselines: [],\n    historicalProfiles: [],\n    previousStateSystems: [],\n    stateFilters: [\n        {\n            filter: 'SAME',\n            display: 'Same',\n            selected: true\n        },\n        {\n            filter: 'DIFFERENT',\n            display: 'Different',\n            selected: true\n        },\n        {\n            filter: 'INCOMPLETE_DATA',\n            display: 'Incomplete data',\n            selected: true\n        }\n    ],\n    factFilter: '',\n    activeFactFilters: [],\n    totalFacts: 0,\n    page: 1,\n    factSort: ASC,\n    stateSort: DESC,\n    perPage: 50,\n    loading: false,\n    expandedRows: [],\n    error: {},\n    emptyState: true\n};\n\nexport function compareReducer(state = initialState, action) {\n    let filteredFacts;\n    let sortedFacts;\n    let paginatedFacts;\n    let newExpandedRows;\n    let errorObject = {};\n    let response;\n    let updatedStateFilters = [];\n    let newStateFilters;\n    let newActiveFactFilters = [];\n    let index;\n    let newFactFilter;\n\n    switch (action.type) {\n        case types.CLEAR_COMPARISON:\n            return {\n                ...initialState,\n                stateFilters: state.stateFilters,\n                factFilter: state.factFilter,\n                activeFactFilters: state.activeFactFilters,\n                factSort: state.factSort,\n                stateSort: state.stateSort,\n                perPage: state.perPage,\n                expandedRows: [],\n                historicalProfiles: []\n            };\n        case types.CLEAR_COMPARISON_FILTERS:\n            newStateFilters = [ ...state.stateFilters ];\n            newStateFilters.forEach(function(stateFilter) { stateFilter.selected = false; });\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, newStateFilters, initialState.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            return {\n                ...state,\n                filteredCompareData: filteredFacts,\n                sortedFilteredFacts: sortedFacts,\n                stateFilters: newStateFilters,\n                factFilter: '',\n                activeFactFilters: [],\n                totalFacts: filteredFacts.length,\n                page: 1\n            };\n        case types.REVERT_COMPARE_DATA:\n            return {\n                ...state,\n                loading: false,\n                error: {},\n                systems: state.previousStateSystems\n            };\n        case `${types.FETCH_COMPARE}_PENDING`:\n            return {\n                ...state,\n                previousStateSystems: state.systems,\n                systems: [],\n                baselines: [],\n                historicalProfiles: [],\n                loading: true,\n                emptyState: false\n            };\n        case `${types.FETCH_COMPARE}_FULFILLED`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                action.payload.facts, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n\n            return {\n                ...state,\n                loading: false,\n                fullCompareData: action.payload.facts,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                systems: action.payload.systems || [],\n                baselines: action.payload.baselines || [],\n                historicalProfiles: action.payload.historical_system_profiles || [],\n                page: 1,\n                totalFacts: filteredFacts.length,\n                emptyState: (action.payload.systems.concat(action.payload.baselines).concat(action.payload.historical_system_profiles)).length === 0\n            };\n        case `${types.FETCH_COMPARE}_REJECTED`:\n            response = action.payload.response;\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                loading: false,\n                error: errorObject,\n                emptyState: true\n            };\n        case `${types.UPDATE_DRIFT_PAGINATION}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, action.payload.page, action.payload.perPage);\n            return {\n                ...state,\n                page: action.payload.page,\n                perPage: action.payload.perPage,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.ADD_STATE_FILTER}`:\n            updatedStateFilters = reducerHelpers.updateStateFilters(state.stateFilters, action.payload);\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, updatedStateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                stateFilters: updatedStateFilters,\n                page: 1,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.FILTER_BY_FACT}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, action.payload, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                factFilter: action.payload,\n                page: 1,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.HANDLE_FACT_FILTER}`:\n            newActiveFactFilters = [ ...state.activeFactFilters ];\n            index = reducerHelpers.findFilterIndex(action.payload, state.activeFactFilters);\n\n            if (index > -1) {\n                newActiveFactFilters.splice(index, 1);\n                newFactFilter = state.factFilter;\n            } else {\n                newActiveFactFilters.push(action.payload);\n                newFactFilter = '';\n            }\n\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, newFactFilter, state.referenceId, newActiveFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n\n            return {\n                ...state,\n                factFilter: newFactFilter,\n                activeFactFilters: newActiveFactFilters,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.CLEAR_ALL_FACT_FILTERS}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, '', state.referenceId, newActiveFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                factFilter: '',\n                activeFactFilters: [],\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.TOGGLE_FACT_SORT}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, action.payload, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                page: 1,\n                factSort: action.payload,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.TOGGLE_STATE_SORT}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, action.payload);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                page: 1,\n                stateSort: action.payload,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.EXPORT_TO_CSV}`:\n            reducerHelpers.downloadCSV(state.sortedFilteredFacts, [ ...state.baselines, ...state.systems, ...state.historicalProfiles ]);\n            return {\n                ...state\n            };\n        case `${types.EXPAND_ROW}`:\n            newExpandedRows = reducerHelpers.toggleExpandedRow(state.expandedRows, action.payload);\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, state.page, state.perPage);\n            return {\n                ...state,\n                expandedRows: newExpandedRows,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.UPDATE_REFERENCE_ID}`:\n            return {\n                ...state,\n                referenceId: action.payload\n            };\n        case `${types.RESET_COMPARISON_FILTERS}`:\n            newStateFilters = [\n                {\n                    filter: 'SAME',\n                    display: 'Same',\n                    selected: true\n                },\n                {\n                    filter: 'DIFFERENT',\n                    display: 'Different',\n                    selected: true\n                },\n                {\n                    filter: 'INCOMPLETE_DATA',\n                    display: 'Incomplete data',\n                    selected: true\n                }\n            ];\n\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, newStateFilters, '', state.referenceId, []\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n\n            return {\n                ...state,\n                stateFilters: newStateFilters,\n                factFilter: '',\n                activeFactFilters: [],\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n\n        default:\n            return {\n                ...state\n            };\n    }\n}\n\nexport const globalFilterReducer = applyReducerHash({\n    [types.SET_GLOBAL_FILTER_TAGS]: (state = {}, action) => ({\n        ...state,\n        tagsFilter: action.payload\n    }),\n    [types.SET_GLOBAL_FILTER_WORKLOADS]: (state = {}, action) => ({\n        ...state,\n        workloadsFilter: action.payload\n    }),\n    [types.SET_GLOBAL_FILTER_SIDS]: (state = {}, action) => ({\n        ...state,\n        sidsFilter: action.payload\n    })\n});\n","import React from 'react';\nimport DriftTooltip from '../../DriftTooltip/DriftTooltip';\nimport { ClockIcon } from '@patternfly/react-icons';\n\nfunction makeSelections(content, isSelected, selectedContent) {\n    let newSelectedContent = [];\n    let exists;\n\n    if (!isSelected) {\n        for (let i = 0; i < selectedContent.length; i++) {\n            exists = false;\n            content.forEach(function(item) {\n                if (item.id === selectedContent[i].id) {\n                    exists = true;\n                }\n            });\n\n            if (!exists) {\n                newSelectedContent.push(selectedContent[i]);\n            }\n        }\n    } else {\n        newSelectedContent = [ ...selectedContent ];\n        let selectedContentIds = selectedContent.map(selectedItem => selectedItem.id);\n\n        content.forEach(function(item) {\n            if (!selectedContentIds.includes(item.id)) {\n                newSelectedContent.push(item);\n            }\n        });\n    }\n\n    return newSelectedContent;\n}\n\nfunction makeHSPSelections(content, selectedContent) {\n    let newSelectedContent = [];\n    let exists = false;\n\n    selectedContent?.forEach(function(hsp) {\n        if (hsp.id !== content.id) {\n            if (!content.icon) {\n                content.icon = <DriftTooltip content='Historical profile' body={ <ClockIcon /> } />;\n            }\n\n            newSelectedContent.push(hsp);\n        } else {\n            exists = true;\n        }\n    });\n\n    if (!exists) {\n        content.icon = <DriftTooltip content='Historical profile' body={ <ClockIcon /> } />;\n        newSelectedContent.push(content);\n    }\n\n    return newSelectedContent;\n}\n\nexport default {\n    makeSelections,\n    makeHSPSelections\n};\n","import types from './types';\nimport helpers from './helpers';\n\nconst initialState = {\n    addSystemModalOpened: false,\n    activeTab: 0,\n    selectedSystemIds: [],\n    selectedSystemContent: [],\n    selectedBaselineContent: [],\n    selectedHSPContent: []\n};\n\nexport function addSystemModalReducer(state = initialState, action) {\n    let newSelectedContent;\n\n    switch (action.type) {\n        case `${types.OPEN_ADD_SYSTEM_MODAL}`:\n            return {\n                ...state,\n                addSystemModalOpened: !state.addSystemModalOpened\n            };\n        case `${types.SELECT_ACTIVE_TAB}`:\n            return {\n                ...state,\n                activeTab: action.payload\n            };\n        case `${types.SET_SELECTED_SYSTEMS_COMPARISON}`:\n            return {\n                ...state,\n                selectedSystemIds: action.payload\n            };\n        case `${types.HANDLE_SYSTEM_SELECTION}`:\n            newSelectedContent = helpers.makeSelections(action.payload.content, action.payload.isSelected, state.selectedSystemContent);\n\n            return {\n                ...state,\n                selectedSystemContent: newSelectedContent\n            };\n        case `${types.HANDLE_BASELINE_SELECTION}`:\n            newSelectedContent = helpers.makeSelections(action.payload.content, action.payload.isSelected, state.selectedBaselineContent);\n\n            return {\n                ...state,\n                selectedBaselineContent: newSelectedContent\n            };\n        case `${types.HANDLE_HSP_SELECTION}`:\n            newSelectedContent = helpers.makeHSPSelections(action.payload, state.selectedHSPContent);\n\n            return {\n                ...state,\n                selectedHSPContent: newSelectedContent\n            };\n\n        default:\n            return state;\n    }\n}\n","import types from './types';\n\nconst initialState = {\n    filterDropdownOpened: false\n};\n\nexport function filterDropdownReducer(filterDropdownOpened = initialState.filterDropdownOpened, action) {\n    switch (action.type) {\n        case `${types.OPEN_FILTER_DROPDOWN}`:\n            return !filterDropdownOpened;\n\n        default:\n            return filterDropdownOpened;\n    }\n}\n","import types from './types';\n\nconst initialState = {\n    createBaselineModalOpened: false,\n    baselineDataLoading: false,\n    baselineData: undefined,\n    createBaselineError: {}\n};\n\nexport function createBaselineModalReducer(state = initialState, action) {\n    let response = '';\n    let errorObject = {};\n\n    switch (action.type) {\n        case `${types.TOGGLE_CREATE_BASELINE_MODAL}`:\n            return {\n                ...state,\n                createBaselineModalOpened: !state.createBaselineModalOpened,\n                createBaselineError: {}\n            };\n        case `${types.CREATE_BASELINE}_PENDING`:\n            return {\n                ...state,\n                baselineDataLoading: true,\n                baselineData: {},\n                createBaselineError: {}\n            };\n        case `${types.CREATE_BASELINE}_FULFILLED`:\n            return {\n                ...state,\n                baselineDataLoading: false,\n                baselineData: action.payload\n            };\n        case `${types.CREATE_BASELINE}_REJECTED`:\n            response = action.payload.response;\n\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                baselineDataLoading: false,\n                createBaselineError: errorObject\n            };\n\n        default:\n            return state;\n    }\n}\n","import types from './types';\nimport editBaselineHelpers from '../EditBaseline/helpers';\nimport helpers from '../../../helpers';\nimport { FACT_VALUE } from '../../../../constants';\n\nconst initialState = {\n    baselineData: undefined,\n    baselineDataLoading: false,\n    editBaselineTableData: [],\n    editBaselineError: {},\n    inlineError: {},\n    expandedRows: [],\n    factModalOpened: false,\n    factName: '',\n    factValue: '',\n    factData: [],\n    isCategory: false,\n    isSubFact: false,\n    editBaselineEmptyState: false\n};\n\nexport function editBaselineReducer(state = initialState, action) {\n    let errorObject = {};\n    let newEditBaselineTableData = [];\n    let newExpandedRows = [];\n    let response;\n\n    switch (action.type) {\n        case `${types.FETCH_BASELINE_DATA}_PENDING`:\n            return {\n                ...state,\n                baselineDataLoading: true\n            };\n        case `${types.FETCH_BASELINE_DATA}_FULFILLED`:\n            newEditBaselineTableData = editBaselineHelpers.buildBaselineTableData(action.payload.baseline_facts);\n            return {\n                ...state,\n                baselineDataLoading: false,\n                baselineData: action.payload,\n                editBaselineTableData: newEditBaselineTableData,\n                editBaselineEmptyState: action.payload.baseline_facts.length === 0\n            };\n        case `${types.FETCH_BASELINE_DATA}_REJECTED`:\n            response = action.payload.response;\n\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                baselineDataLoading: false,\n                editBaselineError: errorObject,\n                editBaselineEmptyState: true\n            };\n        case `${types.CLEAR_EDIT_BASELINE_DATA}`:\n            return {\n                ...state,\n                baselineData: undefined,\n                editBaselineTableData: [],\n                expandedRows: []\n            };\n        case `${types.PATCH_BASELINE}_PENDING`:\n            return {\n                ...state,\n                inlineError: {},\n                baselineDataLoading: true\n            };\n        case `${types.PATCH_BASELINE}_FULFILLED`:\n            return {\n                ...state,\n                baselineDataLoading: false,\n                baselineData: action.payload.data[0]\n            };\n        case `${types.PATCH_BASELINE}_REJECTED`:\n            response = action.payload.response;\n\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                baselineDataLoading: false,\n                inlineError: errorObject\n            };\n        case `${types.DELETE_BASELINE_DATA}_PENDING`:\n            return {\n                ...state,\n                baselineDataLoading: true\n            };\n        case `${types.DELETE_BASELINE_DATA}_FULFILLED`:\n            return {\n                ...state,\n                baselineDataLoading: false,\n                baselineData: action.payload.data[0],\n                editBaselineEmptyState: action.payload.data[0].baseline_facts.length < 1\n            };\n        case `${types.DELETE_BASELINE_DATA}_REJECTED`:\n            response = action.payload.response;\n\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                baselineDataLoading: false,\n                editBaselineError: errorObject\n            };\n        case `${types.EXPAND_PARENT_FACT}`:\n            newExpandedRows = editBaselineHelpers.toggleExpandedRow(state.expandedRows, action.payload);\n            return {\n                ...state,\n                expandedRows: newExpandedRows\n            };\n        case `${types.TOGGLE_FACT_MODAL}`:\n            return {\n                ...state,\n                editBaselineError: {},\n                factModalOpened: !state.factModalOpened,\n                inlineError: {}\n            };\n        case `${types.SET_FACT_DATA}`:\n            return {\n                ...state,\n                factName: action.payload.factName,\n                factValue: action.payload.factValue,\n                factData: action.payload.fact,\n                isCategory: action.payload.isCategory,\n                isSubFact: action.payload.isSubFact\n            };\n        case `${types.SELECT_FACT}`:\n            newEditBaselineTableData = [ ...state.editBaselineTableData ];\n\n            newEditBaselineTableData.map(row => {\n                let factId = row[0];\n                if (action.payload.ids.includes(factId)) {\n                    row.selected = action.payload.isSelected;\n                }\n\n                if (editBaselineHelpers.isCategory(row) && row[FACT_VALUE].length > 0) {\n                    editBaselineHelpers.baselineSubFacts(row).map(subFact => {\n                        let subFactId = subFact[0];\n                        if (action.payload.ids.includes(subFactId)) {\n                            subFact.selected = action.payload.isSelected;\n                        }\n                    });\n\n                    row.selected = editBaselineHelpers.isAllSelected(editBaselineHelpers.baselineSubFacts(row));\n                }\n            });\n\n            return {\n                ...state,\n                editBaselineTableData: newEditBaselineTableData.slice()\n            };\n        case `${types.CLEAR_ERROR_DATA}`:\n            return {\n                ...state,\n                editBaselineError: {},\n                inlineError: {},\n                baselineDataLoading: false\n            };\n        case `${types.EXPORT_BASELINE_DATA_TO_CSV}`:\n            helpers.downloadCSV(action.payload);\n            return {\n                ...state\n            };\n\n        default:\n            return state;\n    }\n}\n","import types from './types';\n\nconst initialState = {\n    selectedHSPIds: []\n};\n\nexport function historicProfilesReducer(state = initialState, action) {\n    let id;\n    let selected;\n\n    switch (action.type) {\n        case types.SELECT_HISTORIC_PROFILES:\n\n            return {\n                ...state,\n                selectedHSPIds: action.payload\n            };\n        case 'SELECT_ENTITY':\n            id = action.payload.id;\n            selected = action.payload.selected;\n\n            return {\n                ...state,\n                selectedHSPIds: id === 0 && !selected ? [] : state.selectedHSPIds\n            };\n        case 'CLEAR_COMPARISON':\n            return {\n                selectedHSPIds: []\n            };\n\n        default:\n            return {\n                ...state\n            };\n    }\n}\n","import types from './types';\n\nconst initialState = {\n    deleteNotificationsModalOpened: false,\n    systemsToDelete: [],\n    systemNotificationIds: undefined,\n    systemNotificationLoaded: false\n};\n\nexport function systemNotificationsReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.TOGGLE_DELETE_NOTIFICATION_MODAL:\n            return {\n                ...state,\n                deleteNotificationsModalOpened: !state.deleteNotificationsModalOpened\n            };\n        case types.SET_SYSTEMS_TO_DELETE:\n            return {\n                ...state,\n                systemsToDelete: action.payload\n            };\n        case `${types.DELETE_NOTIFICATIONS}_FULFILLED`:\n            return {\n                ...state,\n                systemsToDelete: []\n            };\n        case `${types.GET_NOTIFICATIONS}_PENDING`:\n            return {\n                ...state,\n                systemNotificationIds: undefined,\n                systemNotificationLoaded: false\n            };\n        case `${types.GET_NOTIFICATIONS}_FULFILLED`:\n            return {\n                ...state,\n                systemNotificationIds: action.payload,\n                systemNotificationLoaded: true\n            };\n        case `${types.ADD_NOTIFICATIONS}_FULFILLED`:\n            return {\n                ...state\n            };\n\n        default:\n            return {\n                ...state\n            };\n    }\n}\n","import promiseMiddleware from 'redux-promise-middleware';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\n\nimport { compareReducer, globalFilterReducer } from '../SmartComponents/modules/reducers';\nimport { addSystemModalReducer } from '../SmartComponents/AddSystemModal/redux/addSystemModalReducer';\nimport { baselinesTableRootReducer } from '../SmartComponents/BaselinesTable/redux';\nimport { filterDropdownReducer } from '../SmartComponents/DriftPage/FilterDropDown/redux/filterDropdownReducer';\nimport { createBaselineModalReducer } from '../SmartComponents/BaselinesPage/CreateBaselineModal/redux/reducers';\nimport { editBaselineReducer } from '../SmartComponents/BaselinesPage/EditBaselinePage/redux/reducers';\nimport { historicProfilesReducer } from '../SmartComponents/HistoricalProfilesPopover/redux/reducers';\nimport { systemNotificationsReducer } from '../SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/redux/reducer';\n\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nexport { default as reducers } from './reducers';\n\nlet registry;\nlet middlewareListener;\n\nexport const createMiddlewareListener = () => {\n    middlewareListener = new MiddlewareListener();\n    return middlewareListener;\n};\n\nexport function init (...middleware) {\n    createMiddlewareListener();\n\n    registry = getRegistry({}, [\n        promiseMiddleware(),\n        middlewareListener.getMiddleware(),\n        ...middleware.filter(item => typeof item !== 'undefined')\n    ]);\n\n    registry.register({\n        compareState: compareReducer,\n        addSystemModalState: addSystemModalReducer,\n        baselinesTableState: baselinesTableRootReducer,\n        filterDropdownOpened: filterDropdownReducer,\n        createBaselineModalState: createBaselineModalReducer,\n        editBaselineState: editBaselineReducer,\n        historicProfilesState: historicProfilesReducer,\n        systemNotificationsState: systemNotificationsReducer,\n        notifications,\n        globalFilterState: globalFilterReducer\n    });\n\n    return registry;\n}\n\nexport function getStore () {\n    return registry.getStore();\n}\n\nexport function register (...args) {\n    return registry.register(...args);\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Dropdown, KebabToggle, DropdownItem, DropdownPosition } from '@patternfly/react-core';\n\nexport class SystemKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            kebabOpened: false\n        };\n\n        this.toggleKebab = () => {\n            const { kebabOpened } = this.state;\n\n            this.setState({ kebabOpened: !kebabOpened });\n        };\n    }\n\n    buildDropdownItems = () => {\n        const { deleteNotifications, systemIds } = this.props;\n        let dropdownItems = [];\n\n        dropdownItems.push(\n            <DropdownItem\n                key=\"delete-baseline-notification\"\n                component=\"button\"\n                data-ouia-component-id='delete-baseline-notification'\n                onClick={ () => deleteNotifications(systemIds) }\n            >\n                Delete associated system\n            </DropdownItem>\n        );\n\n        return dropdownItems;\n    }\n\n    render() {\n        const { kebabOpened } = this.state;\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    style={{ float: 'right' }}\n                    toggle={ <KebabToggle\n                        data-ouia-component-id='system-notification-dropdown'\n                        data-ouia-component-type='PF4/DropdownToggle'\n                        onToggle={ () => this.toggleKebab() } /> }\n                    isOpen={ kebabOpened }\n                    dropdownItems={ this.buildDropdownItems() }\n                    isPlain\n                    ouiaId='system-notification-dropdown'\n                    position={ DropdownPosition.right }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nSystemKebab.propTypes = {\n    systemIds: PropTypes.array,\n    deleteNotifications: PropTypes.func\n};\n\nexport default SystemKebab;\n","/*eslint-disable camelcase*/\nimport React from 'react';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport HistoricalProfilesPopover from '../SmartComponents/HistoricalProfilesPopover/HistoricalProfilesPopover';\nimport SystemKebab from '../SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/SystemKebab/SystemKebab';\n\nimport types from '../SmartComponents/modules/types';\nimport helpers from '../SmartComponents/helpers';\n\nfunction selectedReducer(\n    INVENTORY_ACTIONS, baselineId, createBaselineModal, historicalProfiles, hasMultiSelect,\n    deselectHistoricalProfiles, isAddSystemNotifications, selectHistoricProfiles, systemNotificationIds, selectSystemsToAdd,\n    deleteNotifications, permissions\n) {\n    let newColumns;\n    let systemIds;\n\n    return applyReducerHash({\n        [INVENTORY_ACTIONS.LOAD_ENTITIES_FULFILLED]: (state, action) => {\n\n            for (let i = 0; i < action.payload.results.length; i += 1) {\n                if (state.selectedSystemIds.includes(action.payload.results[i].id)) {\n                    action.payload.results[i].selected = true;\n                }\n            }\n\n            let rows = mergeArraysByKey([ action.payload.results, state.rows ]);\n\n            if (historicalProfiles !== undefined) {\n                rows.forEach(function(row) {\n                    let badgeCount = 0;\n                    let systemInfo = {\n                        id: row.id,\n                        last_updated: row.updated\n                    };\n\n                    historicalProfiles.forEach(function(profile) {\n                        if (profile.system_id === row.id) {\n                            badgeCount += 1;\n                        }\n                    });\n\n                    row.historical_profiles = <div>\n                        <div className='hsp-icon-align'>\n                            <HistoricalProfilesPopover\n                                system={ systemInfo }\n                                hasBadge={ true }\n                                badgeCount={ badgeCount }\n                                hasMultiSelect={ hasMultiSelect }\n                                selectHistoricProfiles={ selectHistoricProfiles }\n                                systemName={ row.display_name }\n                            />\n                        </div>\n                    </div>;\n                });\n            }\n\n            if (isAddSystemNotifications) {\n                rows.forEach(function(row) {\n                    if (systemNotificationIds.includes(row.id)) {\n                        row.selected = true;\n                        row.disableSelection = true;\n                    }\n                });\n            }\n\n            if (baselineId && !isAddSystemNotifications && permissions.notificationsWrite) {\n                rows.forEach(function(row) {\n                    systemIds = [ row.id ];\n\n                    row.system_notification = <React.Fragment>\n                        <SystemKebab\n                            systemIds={ systemIds }\n                            deleteNotifications={ deleteNotifications }\n                        />\n                    </React.Fragment>;\n                });\n            }\n            /*eslint-enable camelcase*/\n\n            return {\n                ...state,\n                rows: state.selectedHSP && !hasMultiSelect\n                    ? helpers.buildSystemsTableWithSelectedHSP(rows, state.selectedHSP, deselectHistoricalProfiles)\n                    : rows,\n                selectedSystems: helpers.findSelectedOnPage(rows, state.selectedSystemIds)\n            };\n        },\n        [types.DRIFT_CLEAR_ALL_FILTERS]: (state) => ({\n            ...state,\n            activeFilters: undefined\n        }),\n        [types.UPDATE_COLUMNS]: (state, action) => {\n            let nameColumn = {\n                key: action.payload,\n                title: 'Name',\n                props: { width: 20 }\n            };\n            newColumns = [ ...state.columns || [] ];\n            newColumns.shift();\n            newColumns.unshift(nameColumn);\n\n            return {\n                ...state,\n                columns: newColumns\n            };\n        },\n        [types.SELECT_ENTITY]: (state, action) => {\n            let id = action.payload.id;\n            let selected = action.payload.selected;\n            let { selectedSystemIds } = state;\n            let newRows = [];\n            let selectedSystems = [];\n\n            if (id === 0) {\n                if (createBaselineModal) {\n                    newRows = state.rows.map(function (oneRow) {\n                        oneRow.selected = false;\n                        return oneRow;\n                    });\n\n                    selectedSystemIds = [];\n                } else {\n                    if (selected) {\n                        let ids = state.rows.map(function (item) {\n                            return item.id;\n                        });\n                        selectedSystemIds = [ ...new Set(selectedSystemIds.concat(ids)) ];\n                    } else {\n                        if (action.payload.bulk) {\n                            selectedSystemIds = [];\n                        } else {\n                            for (let i = 0; i < state.rows.length; i += 1) {\n                                selectedSystemIds = selectedSystemIds.filter(item => item !== state.rows[i].id);\n                            }\n                        }\n                    }\n                }\n            } else if (selected && id !== null) {\n                if (createBaselineModal) {\n                    newRows = state.rows.map(function (oneRow) {\n                        if (oneRow.id === id) {\n                            oneRow.selected = true;\n                        } else {\n                            oneRow.selected = false;\n                        }\n\n                        return oneRow;\n                    });\n\n                    selectedSystemIds.pop();\n                }\n\n                selectedSystemIds.push(id);\n            } else {\n                selectedSystemIds = selectedSystemIds.filter(item => item !== id);\n            }\n\n            if (isAddSystemNotifications) {\n                selectSystemsToAdd(selectedSystemIds);\n            }\n\n            if (newRows.length === 0) {\n                selectedSystems = helpers.findSelectedOnPage(state.rows, selectedSystemIds);\n            }\n\n            return {\n                ...state,\n                selectedSystemIds,\n                selectedSystems,\n                rows: newRows.length > 0 ? newRows : state.rows\n            };\n        },\n        [types.SET_SELECTED_SYSTEM_IDS]: (state, action) => {\n            return {\n                ...state,\n                rows: [],\n                loaded: false,\n                selectedSystemIds: action.payload.selectedSystemIds\n            };\n        },\n        [types.SELECT_SINGLE_HSP]: (state, action) => {\n            return {\n                ...state,\n                rows: action.payload\n                    ? helpers.buildSystemsTableWithSelectedHSP([ ...state.rows ], action.payload, deselectHistoricalProfiles)\n                    : state.rows.map((row) => ({\n                        ...row,\n                        // eslint-disable-next-line camelcase\n                        display_selected_hsp: undefined\n                    })),\n                selectedSystemIds: action.payload\n                    ? []\n                    : state.selectedSystemIds,\n                selectedHSP: action.payload\n            };\n        },\n        [types.DISABLE_SYSTEM_TABLE]: (state, action) => {\n            state.rows.forEach(function(row) {\n                row.disableSelection = action.payload;\n            });\n\n            return {\n                ...state\n            };\n        }\n    });\n}\n\nexport default selectedReducer;\n/*eslint-enable camelcase*/\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["asyncComponent","importComponent","AsyncComponent","props","state","component","this","setState","C","Component","DriftPage","BaselinesPage","EditBaselinePage","InsightsRoute","title","rest","document","Route","propTypes","PropTypes","Routes","Switch","exact","path","Redirect","to","PermissionContext","createContext","withRouter","history","useHistory","dispatch","useDispatch","useState","hasCompareReadPermissions","undefined","hasBaselinesReadPermissions","hasBaselinesWritePermissions","hasHSPReadPermissions","hasInventoryReadPermissions","hasNotificationsWritePermissions","hasNotificationsReadPermissions","arePermissionsLoaded","setPermissions","hasPermission","permission","permissionList","forEach","permissions","useEffect","insights","chrome","init","identifyApp","on","event","domEvent","type","push","navId","window","getUserPermissions","driftPermissions","fullPermissions","concat","hasCompareRead","permissionsList","map","some","hasBaselinesRead","hasBaselinesWrite","hasHSPRead","hasInventoryRead","hasNotificationsWrite","hasNotificationsRead","data","mapGlobalFilter","workloads","SID","tags","actions","Provider","value","compareRead","baselinesRead","baselinesWrite","hspRead","inventoryRead","notificationsWrite","notificationsRead","NotificationsPortal","childProps","toggleAddSystemModal","types","selectActiveTab","newActiveTab","payload","setSelectedSystemIds","selectedSystemIds","handleSystemSelection","content","isSelected","handleBaselineSelection","handleHSPSelection","OPEN_ADD_SYSTEM_MODAL","SELECT_ACTIVE_TAB","SET_SELECTED_SYSTEMS_COMPARISON","HANDLE_SYSTEM_SELECTION","HANDLE_BASELINE_SELECTION","HANDLE_HSP_SELECTION","TOGGLE_CREATE_BASELINE_MODAL","CREATE_BASELINE","DeleteFactModal","deleteFacts","bind","deleteBaselineData","fetchBaselineData","baselineData","editBaselineTableData","apiBody","editBaselineHelpers","toggleModal","id","deleteFact","categoryMessage","factMessage","modalOpened","Modal","className","ouiaId","variant","ModalVariant","isOpen","onClose","Button","key","onClick","connect","editBaselineState","baselineId","newBaselineBody","editBaselineActions","baselineUUID","FactKebab","editFact","addFact","toggleModalOpened","toggleFactModal","setFactData","factName","factValue","fact","isCategory","isSubFact","factToDelete","name","newAPIBody","onKebabToggle","dropdownItems","DropdownItem","Dropdown","position","DropdownPosition","style","float","toggle","KebabToggle","onToggle","isPlain","factData","makeAPIPatch","originalAPIBody","originalParentFact","patchBody","Array","isArray","length","baseline_facts","isSameFact","makePatchBody","jiff","diff","subfacts","factA","factB","values","baselineSubFacts","renderKebab","buildNewFactData","isParent","newFactData","subFacts","subFact","buildEditedFactData","originalFactName","originalValueName","originalSubFact","newSubFact","buildDeletedSubFact","newSubFacts","buildBaselineTableData","row","rows","subfact","makeDeleteFactsPatch","factsToDelete","unselectedFacts","index","selected","unselectedSubFacts","idx","patch","display_name","facts_patch","makeAddFactPatch","Object","prototype","hasOwnProperty","call","i","op","makeAddFactToCategoryPatch","oldFactData","newFactBody","makeEditFactPatch","editedFactBody","makeDeleteFactPatch","makeDeleteSubFactPatch","parentFact","toggleExpandedRow","expandedRows","newExpandedRows","includes","filter","slice","splice","isAllSelected","allSelected","findFactCount","totalFacts","findSelected","convertDataToCSV","lineDelimiter","result","rowData","subFactData","TOGGLE_DELETE_NOTIFICATION_MODAL","SET_SYSTEMS_TO_DELETE","DELETE_NOTIFICATIONS","GET_NOTIFICATIONS","ADD_NOTIFICATIONS","expandRow","api","clearEditBaselineData","patchBaseline","selectFact","ids","clearErrorData","exportToCSV","baselineRowData","exportType","exportData","EXPAND_PARENT_FACT","FETCH_BASELINE_DATA","CLEAR_EDIT_BASELINE_DATA","PATCH_BASELINE","DELETE_BASELINE_DATA","SET_FACT_DATA","TOGGLE_FACT_MODAL","SELECT_FACT","CLEAR_ERROR_DATA","EXPORT_BASELINE_DATA_TO_CSV","setSelected","baselineRows","selectedBaselineIds","baseline","find","fetchBaselines","tableId","fetchParams","params","order_by","orderBy","order_how","orderHow","limit","perPage","offset","page","search","buildBaselinesTable","dateTime","dateTimeStamp","updated","moment","fromNow","setBaselineArray","baselines","baselineArray","convertListToCSV","columnDelimiter","detail","revertBaselineFetch","selectBaseline","setSelectedBaselines","clearSelectedBaselines","clearBaselineData","deleteSelectedBaselines","deleteBaselinesAPIBody","initialState","loading","baselineTableData","IdToDelete","emptyState","baselineError","totalBaselines","tableReducer","response","errorObject","action","selectedBaselines","newBaselineTableData","baselinesReducerHelpers","meta","total_available","count","status","statusText","message","union","pop","item","helpers","baselinesTableRootReducer","combineReducers","checkboxTable","baselinesTableReducer","radioTable","comparisonTable","OPEN_FILTER_DROPDOWN","DriftTooltip","body","Tooltip","EmptyStateDisplay","appAction","button","color","error","icon","isSmall","text","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","size","EmptyStateBody","line","HistoricalProfilesCheckbox","findChecked","checked","profile","selectedHSPIds","entities","updateBadgeCount","captured_date","handleChange","onSelect","Checkbox","label","format","isChecked","onChange","selectHistoricProfiles","selectSystem","HistoricalProfilesRadio","selectedHSP","onSingleSelect","prevProps","Radio","HistoricalProfilesPopover","fetchCompare","systemIds","referenceId","createDropdownArray","hasMultiSelect","historicalData","badgeCountFunc","onSelectFunc","onSingleSelectFunc","profiles","ExclamationCircleIcon","retryFetch","UndoIcon","badgeCount","hsp","renderBadge","Badge","isVisible","dropDownArray","renderLoadingRows","fetchData","system","newSelectedHSPIds","selectSingleHSP","systemName","system_id","fetchedData","system_name","shift","Skeleton","SkeletonSize","hasBadge","hasCompareButton","Popover","shouldClose","headerContent","bodyContent","maxHeight","overflowY","footerContent","HistoryIcon","fetchHistoricalData","dropdownDirection","historicProfilesState","baselinesTableState","systemsTableActions","addSystemModalActions","SELECT_HISTORIC_PROFILES","updateColumns","clearAllFilters","disableSystemTable","isDisabled","findSelectedOnPage","selectedSystems","ServerIcon","findCheckedValue","total","paginateData","selectedPage","itemsPerPage","paginatedData","Math","ceil","buildSystemsTableWithSelectedHSP","deselectHistoricalProfiles","display_selected_hsp","CloseIcon","downloadCSV","filename","csv","baselinesTableHelpers","Date","toISOString","match","encodeURI","link","createElement","setAttribute","dispatchEvent","MouseEvent","bubbles","cancelable","view","baselineIds","systemHSPIds","revertCompareData","clearComparison","clearComparisonFilters","toggleFactSort","currentSort","ASC","DESC","addStateFilter","filterData","toggleStateSort","newSort","filterByFact","handleFactFilter","clearAllFactFilters","updatePagination","pagination","updateReferenceId","setGlobalFilterTags","setGlobalFilterWorkloads","setGlobalFilterSIDs","SIDs","resetComparisonFilters","SELECT_ENTITY","FETCH_COMPARE","SET_SELECTED_SYSTEM_IDS","TOGGLE_FACT_SORT","ADD_STATE_FILTER","TOGGLE_STATE_SORT","FILTER_BY_FACT","HANDLE_FACT_FILTER","CLEAR_ALL_FACT_FILTERS","UPDATE_DRIFT_PAGINATION","CLEAR_COMPARISON","CLEAR_COMPARISON_FILTERS","EXPORT_TO_CSV","EXPAND_ROW","REVERT_COMPARE_DATA","TOGGLE_ACTIVE_SORT","UPDATE_REFERENCE_ID","SELECT_SINGLE_HSP","UPDATE_COLUMNS","SET_GLOBAL_FILTER_TAGS","SET_GLOBAL_FILTER_WORKLOADS","SET_GLOBAL_FILTER_SIDS","DRIFT_CLEAR_ALL_FILTERS","DISABLE_SYSTEM_TABLE","RESET_COMPARISON_FILTERS","pathname","release","pathName","split","post","axios","DRIFT_API_ROOT","request","getBaselines","getParams","BASELINE_API_ROOT","getBaseline","system_ids","postSystemNotifications","postBaseline","deleteBaselines","HISTORICAL_PROFILES_API_ROOT","getCompare","historicalSystemProfileIds","baseline_ids","historical_system_profile_ids","reference_id","getBaselineList","getBaselineData","patchBaselineData","deleteBaselinesData","postNewBaseline","uuid","systemId","getHistoricalData","getBaselineNotification","getNotificationSystems","addSystemNotification","systems","deleteSystemNotifications","FACT_ID","FACT_NAME","FACT_VALUE","COLUMN_DELIMITER","LINE_DELIMITER","getStateSelected","stateFilters","stateFilter","getState","isStateSelected","setTooltip","comparisons","multivalues","tooltip","display","filterComparisons","factFilter","activeFactFilters","filteredComparisons","filteredMultivalueItems","lowerCaseFactName","toLowerCase","filterMultiFacts","filterFact","multivalueItems","isFiltered","sortFacts","filteredFacts","factSort","stateSort","sort","a","b","addRow","replace","factsPerPage","paginatedFacts","lowerCaseFactFilter","lowerCaseActiveFilters","filteredSubfacts","newFilteredFacts","filteredValues","driftData","systemNames","mappedDates","last_updated","systemUpdates","date","join","convertFactsToCSV","updatedStateFilter","newStateFilters","indexOf","fullCompareData","filteredCompareData","sortedFilteredFacts","historicalProfiles","previousStateSystems","compareReducer","sortedFacts","newFactFilter","updatedStateFilters","newActiveFactFilters","reducerHelpers","facts","historical_system_profiles","globalFilterReducer","applyReducerHash","tagsFilter","workloadsFilter","sidsFilter","selectedContent","exists","newSelectedContent","selectedContentIds","selectedItem","ClockIcon","addSystemModalOpened","activeTab","selectedSystemContent","selectedBaselineContent","selectedHSPContent","addSystemModalReducer","filterDropdownReducer","filterDropdownOpened","createBaselineModalOpened","baselineDataLoading","createBaselineError","createBaselineModalReducer","editBaselineError","inlineError","factModalOpened","editBaselineEmptyState","editBaselineReducer","newEditBaselineTableData","factId","subFactId","historicProfilesReducer","deleteNotificationsModalOpened","systemsToDelete","systemNotificationIds","systemNotificationLoaded","systemNotificationsReducer","registry","middlewareListener","createMiddlewareListener","MiddlewareListener","middleware","getRegistry","promiseMiddleware","getMiddleware","register","compareState","addSystemModalState","createBaselineModalState","systemNotificationsState","notifications","globalFilterState","addNewListener","actionType","callback","addNew","SystemKebab","buildDropdownItems","deleteNotifications","kebabOpened","toggleKebab","INVENTORY_ACTIONS","createBaselineModal","isAddSystemNotifications","selectSystemsToAdd","newColumns","LOAD_ENTITIES_FULFILLED","results","mergeArraysByKey","systemInfo","historical_profiles","disableSelection","system_notification","activeFilters","nameColumn","width","columns","unshift","newRows","oneRow","Set","bulk","loaded","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","exports"],"sourceRoot":""}