{"version":3,"file":"js/928.c0765963e1139c291aae.js","mappings":"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","sources":["webpack:///./src/Utilities/asyncComponent.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/SmartComponents/AddSystemModal/redux/actions.js","webpack:///./src/SmartComponents/AddSystemModal/redux/types.js","webpack:///./src/SmartComponents/BaselinesPage/CreateBaselineModal/redux/types.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/DeleteFactModal/DeleteFactModal.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/FactKebab/FactKebab.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/EditBaseline/helpers.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/redux/types.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/redux/actions.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/redux/types.js","webpack:///./src/SmartComponents/BaselinesTable/redux/helpers.js","webpack:///./src/SmartComponents/BaselinesTable/redux/actions.js","webpack:///./src/SmartComponents/BaselinesTable/redux/baselinesTableReducer.js","webpack:///./src/SmartComponents/BaselinesTable/redux/index.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/types.js","webpack:///./src/SmartComponents/DriftTooltip/DriftTooltip.js","webpack:///./src/SmartComponents/EmptyStateDisplay/EmptyStateDisplay.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/HistoricalProfilesCheckbox/HistoricalProfilesCheckbox.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/HistoricalProfilesRadio/HistoricalProfilesRadio.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/HistoricalProfilesPopover.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/redux/types.js","webpack:///./src/SmartComponents/SystemsTable/actions.js","webpack:///./src/SmartComponents/helpers.js","webpack:///./src/SmartComponents/modules/actions.js","webpack:///./src/SmartComponents/modules/types.js","webpack:///./src/Utilities/getBaseName.js","webpack:///./src/api.js","webpack:///./src/constants.js","webpack:///./src/SmartComponents/modules/helpers.js","webpack:///./src/SmartComponents/modules/reducers.js","webpack:///./src/SmartComponents/AddSystemModal/redux/helpers.js","webpack:///./src/SmartComponents/AddSystemModal/redux/addSystemModalReducer.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/filterDropdownReducer.js","webpack:///./src/SmartComponents/BaselinesPage/CreateBaselineModal/redux/reducers.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/redux/reducers.js","webpack:///./src/SmartComponents/HistoricalProfilesPopover/redux/reducers.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/redux/reducer.js","webpack:///./src/store/index.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/SystemKebab/SystemKebab.js","webpack:///./src/store/reducers.js","webpack:////home/travis/build/RedHatInsights/drift-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/"],"sourcesContent":["import React, { Component } from 'react';\n\nexport default function asyncComponent(importComponent) {\n    class AsyncComponent extends Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                component: null\n            };\n        }\n\n        async componentDidMount() {\n            const { default: component } = await importComponent();\n\n            this.setState({\n                component\n            });\n        }\n\n        render() {\n            const C = this.state.component;\n\n            return C ? <C { ...this.props } /> : <div>Loading...</div>;\n        }\n    }\n\n    return AsyncComponent;\n}\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport asyncComponent from './Utilities/asyncComponent';\n\nconst DriftPage = asyncComponent(() => import ('./SmartComponents/DriftPage/DriftPage'));\nconst BaselinesPage = asyncComponent(() => import ('./SmartComponents/BaselinesPage/BaselinesPage'));\nconst EditBaselinePage = asyncComponent(() => import ('./SmartComponents/BaselinesPage/EditBaselinePage/EditBaselinePage'));\n\nconst InsightsRoute = ({ component: Component, title, ...rest }) => {\n    title ? document.title = title : null;\n\n    return (<Route { ...rest } component={ Component } />);\n};\n\nInsightsRoute.propTypes = {\n    component: PropTypes.func,\n    title: PropTypes.string\n};\n\nexport const Routes = () => {\n    return (\n        <Switch>\n            <InsightsRoute\n                exact path='/baselines'\n                component={ BaselinesPage }\n                title='Baselines - Drift | Red Hat Insights'\n            />\n            <InsightsRoute path='/baselines/:id' component={ EditBaselinePage } />\n            <InsightsRoute\n                exact path='/'\n                component={ DriftPage }\n                title='Comparison - Drift | Red Hat Insights'\n            />\n            <Redirect to='/'/>\n        </Switch>\n    );\n};\n","import React, { createContext, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport actions from './SmartComponents/modules/actions';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\n\nimport { Routes } from './Routes';\nimport './App.scss';\n\nexport const PermissionContext = createContext();\n\nconst App = (props) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [{\n        hasCompareReadPermissions,\n        hasBaselinesReadPermissions,\n        hasBaselinesWritePermissions,\n        hasHSPReadPermissions,\n        hasInventoryReadPermissions,\n        hasNotificationsWritePermissions,\n        hasNotificationsReadPermissions,\n        arePermissionsLoaded\n    }, setPermissions ] = useState({\n        hasCompareReadPermissions: undefined,\n        hasBaselinesReadPermissions: undefined,\n        hasBaselinesWritePermissions: undefined,\n        hasHSPReadPermissions: undefined,\n        hasInventoryReadPermissions: undefined,\n        hasNotificationsWritePermissions: undefined,\n        hasNotificationsReadPermissions: undefined,\n        arePermissionsLoaded: false\n    });\n\n    const handlePermissionsUpdate = (hasCompareRead, hasBaselinesRead, hasBaselinesWrite, hasHSPRead,\n        hasInventoryRead, hasNotificationsWrite, hasNotificationsRead) => {\n        setPermissions({\n            hasCompareReadPermissions: hasCompareRead,\n            hasBaselinesReadPermissions: hasBaselinesRead,\n            hasBaselinesWritePermissions: hasBaselinesWrite,\n            hasHSPReadPermissions: hasHSPRead,\n            hasInventoryReadPermissions: hasInventoryRead,\n            hasNotificationsWritePermissions: hasNotificationsWrite,\n            hasNotificationsReadPermissions: hasNotificationsRead,\n            arePermissionsLoaded: true\n        });\n    };\n\n    const hasPermission = (permission, permissionList) => {\n        let hasPermission = false;\n\n        permissionList.forEach((permissions) => {\n            if (permission === permissions) {\n                hasPermission = true;\n            }\n        });\n\n        return hasPermission;\n    };\n\n    useEffect(() => {\n        insights.chrome.init();\n        insights.chrome.identifyApp('drift');\n        insights.chrome.on('APP_NAVIGATION', event => {\n            if (event.domEvent !== undefined && event.domEvent.type === 'click') {\n                history.push(`/${event.navId}`);\n            }\n        });\n        (async () => {\n            const driftPermissions = await window.insights.chrome.getUserPermissions('drift');\n            const fullPermissions = driftPermissions.concat(await window.insights.chrome.getUserPermissions('inventory'));\n            const permissionsList = fullPermissions.map(permissions => permissions.permission);\n            handlePermissionsUpdate(\n                permissionsList.some((permission) => hasPermission(permission, [ 'drift:*:*', 'drift:comparisons:read', 'drift:*:read' ])),\n                permissionsList.some((permission) => hasPermission(permission, [ 'drift:*:*', 'drift:baselines:read', 'drift:*:read' ])),\n                permissionsList.some((permission) => hasPermission(permission, [ 'drift:*:*', 'drift:baselines:write', 'drift:*:write' ])),\n                permissionsList.some((permission) => hasPermission(\n                    permission, [ 'drift:*:*', 'drift:historical-system-profiles:read', 'drift:*:read' ])\n                ),\n                permissionsList.some((permission) => hasPermission(permission, [ 'inventory:*:*', 'inventory:*:read' ])),\n                permissionsList.some((permission) => hasPermission(permission, [ 'drift:*:*', 'drift:notifications:write', 'drift:*:write' ])),\n                permissionsList.some((permission) => hasPermission(permission, [ 'drift:*:*', 'drift:notifications:read', 'drift:*:read' ]))\n            );\n        })();\n\n        insights.chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n            const [ workloads, SID, tags ] = insights.chrome?.mapGlobalFilter?.(data, false, true) || [];\n            dispatch(actions.setGlobalFilterTags(tags));\n            dispatch(actions.setGlobalFilterWorkloads(workloads));\n            dispatch(actions.setGlobalFilterSIDs(SID));\n        });\n    }, []);\n\n    return (\n        arePermissionsLoaded\n            ? <PermissionContext.Provider\n                value={{\n                    permissions: {\n                        compareRead: hasCompareReadPermissions,\n                        baselinesRead: hasBaselinesReadPermissions,\n                        baselinesWrite: hasBaselinesWritePermissions,\n                        hspRead: hasHSPReadPermissions,\n                        inventoryRead: hasInventoryReadPermissions,\n                        notificationsWrite: hasNotificationsWritePermissions,\n                        notificationsRead: hasNotificationsReadPermissions\n                    }\n                }}>\n                <NotificationsPortal />\n                <Routes childProps={ props } />\n            </PermissionContext.Provider>\n            : null\n    );\n};\n\nexport default withRouter (App);\n","import types from './types';\n\nfunction toggleAddSystemModal() {\n    return {\n        type: types.OPEN_ADD_SYSTEM_MODAL\n    };\n}\n\nfunction selectActiveTab(newActiveTab) {\n    return {\n        type: types.SELECT_ACTIVE_TAB,\n        payload: newActiveTab\n    };\n}\n\nfunction setSelectedSystemIds(selectedSystemIds) {\n    return {\n        type: types.SET_SELECTED_SYSTEMS_COMPARISON,\n        payload: selectedSystemIds\n    };\n}\n\nfunction handleSystemSelection(content, isSelected) {\n    return {\n        type: types.HANDLE_SYSTEM_SELECTION,\n        payload: { content, isSelected }\n    };\n}\n\nfunction handleBaselineSelection(content, isSelected) {\n    return {\n        type: types.HANDLE_BASELINE_SELECTION,\n        payload: { content, isSelected }\n    };\n}\n\nfunction handleHSPSelection(content) {\n    return {\n        type: types.HANDLE_HSP_SELECTION,\n        payload: content\n    };\n}\n\nexport default {\n    toggleAddSystemModal,\n    selectActiveTab,\n    setSelectedSystemIds,\n    handleSystemSelection,\n    handleBaselineSelection,\n    handleHSPSelection\n};\n","const OPEN_ADD_SYSTEM_MODAL = 'OPEN_ADD_SYSTEM_MODAL';\nconst SELECT_ACTIVE_TAB = 'SELECT_ACTIVE_TAB';\nconst SET_SELECTED_SYSTEMS_COMPARISON = 'SET_SELECTED_SYSTEMS_COMPARISON';\nconst HANDLE_SYSTEM_SELECTION = 'HANDLE_SYSTEM_SELECTION';\nconst HANDLE_BASELINE_SELECTION = 'HANDLE_BASELINE_SELECTION';\nconst HANDLE_HSP_SELECTION = 'HANDLE_HSP_SELECTION';\n\nexport default {\n    OPEN_ADD_SYSTEM_MODAL,\n    SELECT_ACTIVE_TAB,\n    SET_SELECTED_SYSTEMS_COMPARISON,\n    HANDLE_SYSTEM_SELECTION,\n    HANDLE_BASELINE_SELECTION,\n    HANDLE_HSP_SELECTION\n};\n","const TOGGLE_CREATE_BASELINE_MODAL = 'TOGGLE_CREATE_BASELINE_MODAL';\nconst CREATE_BASELINE = 'CREATE_BASELINE';\n\nexport default {\n    TOGGLE_CREATE_BASELINE_MODAL,\n    CREATE_BASELINE\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Modal, ModalVariant, Button } from '@patternfly/react-core';\n\nimport { editBaselineActions } from '../redux';\nimport editBaselineHelpers from '../EditBaseline/helpers';\n\nclass DeleteFactModal extends Component {\n    constructor(props) {\n        super(props);\n        this.deleteFacts = this.deleteFacts.bind(this);\n    }\n\n    async deleteFacts() {\n        const { deleteBaselineData, fetchBaselineData, baselineData, editBaselineTableData } = this.props;\n        let apiBody = editBaselineHelpers.makeDeleteFactsPatch(editBaselineTableData, baselineData);\n        this.props.toggleModal();\n\n        try {\n            await deleteBaselineData(baselineData.id, apiBody);\n            fetchBaselineData(baselineData.id);\n        } catch (e) {\n            // do nothing and let redux handle\n        }\n    }\n\n    render() {\n        const { deleteFact, categoryMessage, factMessage, modalOpened } = this.props;\n\n        return (\n            <Modal\n                className=\"drift\"\n                ouiaId='delete-fact-modal'\n                variant={ ModalVariant.small }\n                title=\"Delete facts\"\n                isOpen={ modalOpened }\n                onClose={ this.props.toggleModal }\n                actions = { [\n                    <Button\n                        key=\"confirm\"\n                        ouiaId='delete-fact-button'\n                        variant=\"danger\"\n                        onClick={ deleteFact ? deleteFact : this.deleteFacts }\n                    >\n                    Delete facts\n                    </Button>,\n                    <Button\n                        key=\"cancel\"\n                        ouiaId='delete-fact-cancel-button'\n                        variant=\"link\"\n                        onClick={ this.props.toggleModal }\n                    >\n                    Cancel\n                    </Button>\n                ] }\n            >\n                You have selected { ' ' }\n                { categoryMessage ? <b>{ categoryMessage }</b> : null }\n                { categoryMessage && factMessage ? ' and ' : null }\n                { factMessage ? <b>{ factMessage }</b> : null }\n                { ' ' } to be deleted.\n                <br></br>\n                { categoryMessage ?\n                    'Deleting a category will delete all facts within the category.'\n                    : null\n                }\n                { <div className=\"md-padding-top\">This cannot be undone.</div> }\n            </Modal>\n        );\n    }\n}\n\nDeleteFactModal.propTypes = {\n    modalOpened: PropTypes.bool,\n    deleteBaselineData: PropTypes.func,\n    fetchBaselineData: PropTypes.func,\n    editBaselineTableData: PropTypes.array,\n    baselineData: PropTypes.object,\n    toggleModal: PropTypes.func,\n    deleteFact: PropTypes.func,\n    categoryMessage: PropTypes.string,\n    factMessage: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselineData: state.editBaselineState.baselineData,\n        editBaselineTableData: state.editBaselineState.editBaselineTableData\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        deleteBaselineData: (baselineId, newBaselineBody) => dispatch(editBaselineActions.deleteBaselineData(baselineId, newBaselineBody)),\n        fetchBaselineData: (baselineUUID) => dispatch(editBaselineActions.fetchBaselineData(baselineUUID))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteFactModal);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Dropdown, DropdownItem, DropdownPosition, KebabToggle } from '@patternfly/react-core';\n\nimport { editBaselineActions } from '../redux';\nimport editBaselineHelpers from '../EditBaseline/helpers';\nimport DeleteFactModal from '../DeleteFactModal/DeleteFactModal';\n\nexport class FactKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.editFact = this.editFact.bind(this);\n        this.deleteFact = this.deleteFact.bind(this);\n        this.addFact = this.addFact.bind(this);\n\n        this.state = {\n            isOpen: false,\n            modalOpened: false\n        };\n\n        this.toggleModalOpened = () => {\n            const { modalOpened } = this.state;\n\n            this.setState({\n                modalOpened: !modalOpened,\n                isOpen: false\n            });\n        };\n    }\n\n    onKebabToggle(isOpen) {\n        this.setState({\n            isOpen\n        });\n    }\n\n    editFact() {\n        const { toggleFactModal, setFactData, factName, factValue, fact, isCategory, isSubFact } = this.props;\n\n        toggleFactModal();\n        setFactData({\n            factName,\n            factValue,\n            fact,\n            isCategory,\n            isSubFact\n        });\n    }\n\n    async deleteFact() {\n        const { baselineData, deleteBaselineData, factName, factValue, fact, isSubFact, fetchBaselineData } = this.props;\n        let factToDelete = { name: factName, value: factValue };\n        let newAPIBody;\n\n        if (isSubFact === true) {\n            newAPIBody = editBaselineHelpers.makeDeleteSubFactPatch(factToDelete, fact, baselineData);\n        } else {\n            newAPIBody = editBaselineHelpers.makeDeleteFactPatch(factToDelete, baselineData, []);\n        }\n\n        this.toggleModalOpened();\n\n        try {\n            await deleteBaselineData(baselineData.id, newAPIBody);\n            fetchBaselineData(baselineData.id);\n        } catch (e) {\n            // do nothing and let redux handle\n        }\n\n        this.onKebabToggle(false);\n    }\n\n    addFact() {\n        const { toggleFactModal, setFactData, fact, isCategory } = this.props;\n\n        toggleFactModal();\n        setFactData({\n            factName: '',\n            factValue: '',\n            fact,\n            isSubFact: isCategory\n        });\n    }\n\n    render() {\n        const { isOpen, modalOpened } = this.state;\n        const { isCategory, factName } = this.props;\n        const dropdownItems = [];\n\n        if (isCategory === true) {\n            dropdownItems.push(\n                <DropdownItem\n                    key=\"add fact\"\n                    data-ouia-component-id={ 'add-subfact-dropdown-item-' + factName }\n                    component=\"button\"\n                    onClick={ this.addFact }>\n                    Add sub fact\n                </DropdownItem>\n            );\n        }\n\n        dropdownItems.push(\n            <DropdownItem\n                key=\"edit\"\n                component=\"button\"\n                data-ouia-component-id={ 'edit-fact-dropdown-item-' + factName }\n                onClick={ this.editFact }>\n                { isCategory ? 'Edit category' : 'Edit' }\n            </DropdownItem>,\n            <DropdownItem\n                key=\"delete\"\n                component=\"button\"\n                data-ouia-component-id={ 'delete-fact-dropdown-item-' + factName }\n                onClick={ this.toggleModalOpened }>\n                { isCategory ? 'Delete category' : 'Delete' }\n            </DropdownItem>\n        );\n\n        return (\n            <React.Fragment>\n                { modalOpened ? <DeleteFactModal\n                    toggleModal={ this.toggleModalOpened.bind(this) }\n                    deleteFact={ this.deleteFact.bind(this) }\n                    isCategory={ isCategory }\n                    modalOpened={ modalOpened }\n                    categoryMessage={ isCategory ? '1 category' : null }\n                    factMessage={ isCategory ? null : '1 fact' }\n                /> : null }\n                <Dropdown\n                    position={ DropdownPosition.right }\n                    style={{ float: 'right' }}\n                    className={ 'baseline-fact-kebab' }\n                    ouiaId={ 'fact-dropdown-' + factName }\n                    toggle={ <KebabToggle\n                        data-ouia-component-id={ 'fact-dropdown-toggle-' + factName }\n                        data-ouia-compoent-type='PF4/DropdownToggle'\n                        onToggle={ (isOpen) => this.onKebabToggle(isOpen) } /> }\n                    isOpen={ isOpen }\n                    dropdownItems={ dropdownItems }\n                    isPlain\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nFactKebab.propTypes = {\n    factName: PropTypes.string,\n    factValue: PropTypes.string,\n    fact: PropTypes.object,\n    isCategory: PropTypes.bool,\n    isSubFact: PropTypes.bool,\n    toggleFactModal: PropTypes.func,\n    setFactData: PropTypes.func,\n    baselineData: PropTypes.object,\n    deleteBaselineData: PropTypes.func,\n    fetchBaselineData: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselineData: state.editBaselineState.baselineData\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleFactModal: () => dispatch(editBaselineActions.toggleFactModal()),\n        setFactData: (factData) => dispatch(editBaselineActions.setFactData(factData)),\n        deleteBaselineData: (baselineId, newAPIBody) => dispatch(editBaselineActions.deleteBaselineData(baselineId, newAPIBody)),\n        fetchBaselineData: (baselineUUID) => dispatch(editBaselineActions.fetchBaselineData(baselineUUID))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FactKebab);\n","import React from 'react';\nimport jiff from 'jiff';\nimport FactKebab from '../FactKebab/FactKebab';\n\n/*eslint-disable react/prop-types*/\nfunction renderKebab({ factName, factValue, factData, isCategory, isSubFact, baselinesWrite } = {}) {\n    return (\n        baselinesWrite\n            ? <td>\n                <FactKebab\n                    factName={ factName }\n                    factValue={ factValue }\n                    fact={ factData }\n                    isCategory={ isCategory }\n                    isSubFact={ isSubFact }\n                />\n            </td>\n            : null\n    );\n}\n/*eslint-enable react/prop-types*/\n\nfunction buildNewFactData(isParent, factName, factValue, factData) {\n    let newFactData = {};\n    let subFacts = [];\n\n    if (factData && !Array.isArray(factData)) {\n        factData.values.forEach(function(subFact) {\n            subFacts.push(subFact);\n        });\n        subFacts.push({ name: factName, value: factValue });\n\n        newFactData.name = factData.name;\n        newFactData.values = subFacts;\n\n        return newFactData;\n    }\n\n    newFactData.name = factName;\n    if (isParent) {\n        newFactData.values = [];\n    } else {\n        newFactData.value = factValue;\n    }\n\n    return newFactData;\n}\n\nfunction buildEditedFactData(isParent, originalFactName, factName, originalValueName, factValue, factData) {\n    let newAPIBody = {};\n    let subFacts = [];\n    let originalSubFact = { name: originalFactName, value: originalValueName };\n\n    if (isParent) {\n        newAPIBody.name = factName;\n        factData.values.forEach(function(subFact) {\n            subFacts.push(subFact);\n        });\n        newAPIBody.values = subFacts;\n    } else {\n        if (factData.values && factValue !== '') {\n            newAPIBody.name = factData.name;\n            let newSubFact = { name: factName, value: factValue };\n\n            factData.values.forEach(function(subFact) {\n                if (isSameFact(originalSubFact, subFact)) {\n                    return;\n                }\n\n                subFacts.push(subFact);\n            });\n            subFacts.push(newSubFact);\n            newAPIBody.values = subFacts;\n        } else {\n            newAPIBody = { name: factName, value: factValue };\n        }\n    }\n\n    return newAPIBody;\n}\n\nfunction buildDeletedSubFact(factToDelete, fact) {\n    let newParentFact;\n    let newSubFacts = [];\n\n    fact.values.forEach(function(subFact) {\n        if (isSameFact(subFact, factToDelete)) {\n            return;\n        }\n\n        newSubFacts.push(subFact);\n    });\n\n    newParentFact = { name: fact.name, values: newSubFacts };\n\n    return newParentFact;\n}\n\nfunction makeDeleteFactPatch(factToDelete, originalAPIBody) {\n    let op = 'remove';\n    let path = '/';\n\n    /*eslint-disable camelcase*/\n    originalAPIBody.baseline_facts.forEach(function(fact, index) {\n        if (fact.name === factToDelete.name && fact.value === factToDelete.value) {\n            path += index;\n        }\n    });\n\n    let newAPIBody = {\n        display_name: originalAPIBody.display_name,\n        facts_patch: [{ op, path }]\n    };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\nfunction makeDeleteSubFactPatch(factToDelete, parentFact, originalAPIBody) {\n    let op = 'remove';\n    let path = '';\n\n    /*eslint-disable camelcase*/\n    originalAPIBody.baseline_facts.forEach(function(fact, index) {\n        if (isSameFact(fact, parentFact)) {\n            path = `/${index}/values`;\n        }\n    });\n\n    parentFact.values.forEach(function(fact, index) {\n        if (isSameFact(fact, factToDelete)) {\n            path += `/${index}`;\n        }\n    });\n\n    let newAPIBody = {\n        display_name: originalAPIBody.display_name,\n        facts_patch: [{ op, path }]\n    };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\nfunction makeDeleteFactsPatch(factsToDelete, originalAPIBody) {\n    let unselectedFacts = [];\n\n    factsToDelete.forEach(function(fact, index) {\n        if (!fact.selected) {\n            if (isCategory(fact)) {\n                let newAPIBody;\n                let unselectedSubFacts = [];\n\n                baselineSubFacts(fact).forEach(function(subFact, idx) {\n                    if (!subFact.selected) {\n                        unselectedSubFacts.push(originalAPIBody.baseline_facts[index].values[idx]);\n                    }\n                });\n\n                newAPIBody = {\n                    name: originalAPIBody.baseline_facts[index].name,\n                    values: unselectedSubFacts\n                };\n\n                unselectedFacts.push(newAPIBody);\n            } else {\n                unselectedFacts.push(originalAPIBody.baseline_facts[index]);\n            }\n        }\n    });\n\n    let patch = makePatchBody(unselectedFacts, originalAPIBody.baseline_facts);\n\n    /*eslint-disable camelcase*/\n    let newAPIBody = { display_name: originalAPIBody.display_name, facts_patch: patch };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\n/*eslint-disable camelcase*/\nfunction makeAddFactPatch(newFactData, originalAPIBody) {\n    let op = 'add';\n    let path = '/' + originalAPIBody.baseline_facts.length;\n    let value = newFactData;\n    let index;\n\n    if (Object.prototype.hasOwnProperty.call(newFactData, 'values') && newFactData.values.length > 0) {\n        value = newFactData.values[newFactData.values.length - 1];\n\n        for (let i = 0; i < originalAPIBody.baseline_facts.length; i += 1) {\n            if (isSameFact(originalAPIBody.baseline_facts[i], newFactData)) {\n                index = i;\n            }\n        }\n\n        path = `/${index}/values/${newFactData.values.length - 1}`;\n    }\n\n    let newAPIBody = {\n        display_name: originalAPIBody.display_name,\n        facts_patch: [{ op, path, value }]\n    };\n\n    return newAPIBody;\n}\n/*eslint-enable camelcase*/\n\nfunction makeAddFactToCategoryPatch(newFactData, originalAPIBody, oldFactData) {\n    if (newFactData === undefined || originalAPIBody === undefined) {\n        return {};\n    }\n\n    let newFactBody = makeAPIPatch(newFactData, originalAPIBody, oldFactData);\n\n    newFactBody.push(newFactData);\n\n    let patch = makePatchBody(newFactBody, originalAPIBody.baseline_facts);\n\n    /*eslint-disable camelcase*/\n    let newAPIBody = { display_name: originalAPIBody.display_name, facts_patch: patch };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\nfunction makeEditFactPatch(newFactData, originalAPIBody, oldFactData) {\n    if (newFactData === undefined || originalAPIBody === undefined) {\n        return {};\n    }\n\n    let editedFactBody = makeAPIPatch(newFactData, originalAPIBody, oldFactData);\n\n    editedFactBody.push(newFactData);\n\n    let patch = makePatchBody(editedFactBody, originalAPIBody.baseline_facts);\n\n    /*eslint-disable camelcase*/\n    let newAPIBody = { display_name: originalAPIBody.display_name, facts_patch: patch };\n    /*eslint-enable camelcase*/\n\n    return newAPIBody;\n}\n\nfunction makeAPIPatch(data, originalAPIBody, originalParentFact) {\n    let patchBody = [];\n\n    if (Array.isArray(originalParentFact) && originalParentFact.length === 0) {\n        originalAPIBody.baseline_facts.forEach(function(fact) {\n            if (fact.name !== data.name) {\n                patchBody.push(fact);\n            }\n        });\n    } else {\n        originalAPIBody.baseline_facts.forEach(function(fact) {\n            if (!isSameFact(fact, originalParentFact)) {\n                patchBody.push(fact);\n            }\n        });\n    }\n\n    return patchBody;\n}\n\nfunction makePatchBody(newAPIBody, originalAPIBody) {\n    return jiff.diff(originalAPIBody, newAPIBody);\n}\n\nfunction buildBaselineTableData(baselineData) {\n    let rows = [];\n    let row;\n    let id = 0;\n\n    if (baselineData) {\n        baselineData.forEach(function(fact) {\n            row = [];\n            row.push(id);\n            row.push(fact.name);\n            id += 1;\n\n            if (fact.values) {\n                let subfacts = [];\n                if (fact.values.length > 0) {\n                    fact.values.forEach(function(subFact) {\n                        let subfact = [];\n                        subfact.push(id);\n                        subfact.push(subFact.name);\n                        subfact.push(subFact.value);\n                        id += 1;\n                        subfacts.push(subfact);\n                    });\n\n                    row.push(subfacts);\n                } else {\n                    row.push([]);\n                }\n            } else {\n                row.push(fact.value);\n            }\n\n            rows.push(row);\n        });\n    }\n\n    return rows;\n}\n\nfunction toggleExpandedRow(expandedRows, factName) {\n    let newExpandedRows;\n\n    if (expandedRows.includes(factName)) {\n        newExpandedRows = expandedRows.filter(fact => fact !== factName);\n    } else {\n        newExpandedRows = expandedRows.slice();\n        newExpandedRows.splice(0, 0, factName);\n    }\n\n    return newExpandedRows;\n}\n\nfunction isAllSelected(data) {\n    let allSelected = true;\n    let falseCounter = 0;\n\n    data.forEach(function(fact) {\n        if (!fact.selected) {\n            allSelected = null;\n            falseCounter++;\n        }\n    });\n\n    if (falseCounter === data.length) {\n        allSelected = false;\n    }\n\n    return allSelected;\n}\n\nfunction isCategory(fact) {\n    let subfacts = fact[2];\n    if (Array.isArray(subfacts)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction isSameFact(factA, factB) {\n    if (factA.name === factB.name) {\n        if (factA.values === factB.values || factA.value === factB.value) {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n}\n\nfunction baselineSubFacts(fact) {\n    return fact[2];\n}\n\nfunction findFactCount(editBaselineTableData) {\n    let totalFacts = 0;\n\n    editBaselineTableData.forEach(function(fact) {\n        if (Array.isArray(fact[2])) {\n            totalFacts += fact[2].length;\n        }\n\n        totalFacts += 1;\n    });\n\n    return totalFacts;\n}\n\nfunction findSelected(editBaselineTableData) {\n    let selected = 0;\n\n    editBaselineTableData.forEach(function(fact) {\n        if (Array.isArray(fact[2])) {\n            fact[2].forEach(function(subFact) {\n                if (subFact.selected === true) {\n                    selected += 1;\n                }\n            });\n            if (fact.selected) {\n                selected += 1;\n            }\n        } else {\n            if (fact.selected === true) {\n                selected += 1;\n            }\n        }\n    });\n\n    return selected;\n}\n\nfunction convertDataToCSV(data, baselineData) {\n    if (data === null || !data.length) {\n        return null;\n    }\n\n    let columnDelimiter = ',';\n    let lineDelimiter = '\\n';\n\n    /*eslint-disable camelcase*/\n    let headers = 'Fact,Value,';\n    let result = baselineData.display_name + lineDelimiter + headers + lineDelimiter;\n    /*eslint-enable camelcase*/\n\n    data.forEach(function(row) {\n        row.forEach(function(rowData) {\n            if (row[0] === rowData) {\n                return;\n            }\n\n            if (Array.isArray(rowData)) {\n                rowData.forEach(function(subFact) {\n                    result += lineDelimiter;\n                    result += '    ';\n                    subFact.forEach(function(subFactData) {\n                        if (subFact[0] === subFactData) {\n                            return;\n                        }\n\n                        result += subFactData;\n                        result += columnDelimiter;\n                    });\n                });\n            } else {\n                result += rowData;\n                result += columnDelimiter;\n            }\n        });\n\n        result += lineDelimiter;\n    });\n\n    return result;\n}\n\n/*eslint-disable camelcase*/\nfunction convertDataToJSON(data) {\n    if (data === null || !data.length) {\n        return null;\n    }\n\n    let json = [];\n\n    data.forEach(function(fact) {\n        let row = new Object();\n        row.fact = fact[1];\n        if (Array.isArray(fact[2])) {\n            row.sub_facts = convertDataToJSON(fact[2]);\n        } else {\n            row.value = fact[2];\n        }\n\n        json.push(row);\n    });\n\n    return json;\n}\n/*eslint-enable camelcase*/\n\nexport default {\n    renderKebab,\n    buildNewFactData,\n    buildEditedFactData,\n    buildDeletedSubFact,\n    buildBaselineTableData,\n    makeDeleteFactsPatch,\n    makeAddFactPatch,\n    makeAddFactToCategoryPatch,\n    makeEditFactPatch,\n    makeDeleteFactPatch,\n    makeDeleteSubFactPatch,\n    toggleExpandedRow,\n    isAllSelected,\n    isCategory,\n    isSameFact,\n    baselineSubFacts,\n    findFactCount,\n    findSelected,\n    convertDataToCSV,\n    convertDataToJSON\n};\n","const TOGGLE_DELETE_NOTIFICATION_MODAL = 'TOGGLE_DELETE_NOTIFICATION_MODAL';\nconst SET_SYSTEMS_TO_DELETE = 'SET_SYSTEMS_TO_DELETE';\nconst DELETE_NOTIFICATIONS = 'DELETE_NOTIFICATIONS';\nconst GET_NOTIFICATIONS = 'GET_NOTIFICATIONS';\nconst ADD_NOTIFICATIONS = 'ADD_NOTIFICATIONS';\n\nexport default {\n    TOGGLE_DELETE_NOTIFICATION_MODAL,\n    SET_SYSTEMS_TO_DELETE,\n    DELETE_NOTIFICATIONS,\n    GET_NOTIFICATIONS,\n    ADD_NOTIFICATIONS\n};\n","import types from './types';\nimport api from '../../../../api';\n\nfunction expandRow(factName) {\n    return {\n        type: types.EXPAND_PARENT_FACT,\n        payload: factName\n    };\n}\n\nfunction fetchBaselineData(baselineUUID) {\n    return {\n        type: types.FETCH_BASELINE_DATA,\n        payload: api.getBaselineData(baselineUUID)\n    };\n}\n\nfunction clearEditBaselineData() {\n    return {\n        type: types.CLEAR_EDIT_BASELINE_DATA\n    };\n}\n\nfunction patchBaseline(baselineId, apiBody) {\n    return {\n        type: types.PATCH_BASELINE,\n        payload: api.patchBaselineData(baselineId, apiBody)\n    };\n}\n\nfunction deleteBaselineData(baselineId, apiBody) {\n    return {\n        type: types.DELETE_BASELINE_DATA,\n        payload: api.patchBaselineData(baselineId, apiBody)\n    };\n}\n\nfunction toggleFactModal() {\n    return {\n        type: types.TOGGLE_FACT_MODAL\n    };\n}\n\nfunction setFactData(factData) {\n    return {\n        type: types.SET_FACT_DATA,\n        payload: factData\n    };\n}\n\nfunction selectFact(ids, isSelected) {\n    return {\n        type: types.SELECT_FACT,\n        payload: { ids, isSelected }\n    };\n}\n\nfunction clearErrorData() {\n    return {\n        type: types.CLEAR_ERROR_DATA\n    };\n}\n\nfunction exportToCSV(baselineData, baselineRowData = []) {\n    let data = {\n        type: 'csv',\n        exportType: 'baselines data',\n        exportData: baselineData,\n        baselineRowData\n    };\n\n    return {\n        type: `EXPORT_BASELINE_DATA_TO_CSV`,\n        payload: data\n    };\n}\n\nfunction exportToJSON(baselineData) {\n    let data = {\n        type: 'json',\n        exportType: 'baselines data',\n        exportData: baselineData\n    };\n\n    return {\n        type: `EXPORT_BASELINE_DATA_TO_JSON`,\n        payload: data\n    };\n}\n\nfunction toggleNotificationPending() {\n    return {\n        type: `TOGGLE_NOTIFICATIONS_SWITCH_PENDING`\n    };\n}\n\nfunction toggleNotificationFulfilled(data) {\n    return {\n        type: `TOGGLE_NOTIFICATIONS_SWITCH_FULFILLED`,\n        payload: data.response\n    };\n}\n\n/*eslint-disable camelcase*/\nfunction toggleNotificationRejected(error, id, display_name) {\n    return {\n        type: `TOGGLE_NOTIFICATIONS_SWITCH_REJECTED`,\n        payload: { error, id, display_name }\n    };\n}\n/*eslint-enable camelcase*/\n\nexport default {\n    expandRow,\n    fetchBaselineData,\n    clearEditBaselineData,\n    patchBaseline,\n    deleteBaselineData,\n    setFactData,\n    toggleFactModal,\n    selectFact,\n    clearErrorData,\n    exportToCSV,\n    exportToJSON,\n    toggleNotificationPending,\n    toggleNotificationFulfilled,\n    toggleNotificationRejected\n\n};\n","const EXPAND_PARENT_FACT = 'EXPAND_PARENT_FACT';\nconst FETCH_BASELINE_DATA = 'FETCH_BASELINE_DATA';\nconst CLEAR_EDIT_BASELINE_DATA = 'CLEAR_EDIT_BASELINE_DATA';\nconst PATCH_BASELINE = 'PATCH_BASELINE';\nconst DELETE_BASELINE_DATA = 'DELETE_BASELINE_DATA';\nconst SET_FACT_DATA = 'SET_FACT_DATA';\nconst TOGGLE_FACT_MODAL = 'TOGGLE_FACT_MODAL';\nconst SELECT_FACT = 'SELECT_FACT';\nconst CLEAR_ERROR_DATA = 'CLEAR_ERROR_DATA';\nconst EXPORT_BASELINE_DATA_TO_CSV = 'EXPORT_BASELINE_DATA_TO_CSV';\nconst EXPORT_BASELINE_DATA_TO_JSON = 'EXPORT_BASELINE_DATA_TO_JSON';\nconst TOGGLE_NOTIFICATIONS_SWITCH = 'TOGGLE_NOTIFICATIONS_SWITCH';\n\nexport default {\n    EXPAND_PARENT_FACT,\n    FETCH_BASELINE_DATA,\n    CLEAR_EDIT_BASELINE_DATA,\n    PATCH_BASELINE,\n    DELETE_BASELINE_DATA,\n    SET_FACT_DATA,\n    TOGGLE_FACT_MODAL,\n    SELECT_FACT,\n    CLEAR_ERROR_DATA,\n    EXPORT_BASELINE_DATA_TO_CSV,\n    EXPORT_BASELINE_DATA_TO_JSON,\n    TOGGLE_NOTIFICATIONS_SWITCH\n};\n","import moment from 'moment';\n\nfunction fetchBaselines (tableId, fetchBaselines, fetchParams = {}) {\n    let params = {};\n\n    /*eslint-disable camelcase*/\n    params.order_by = fetchParams.orderBy;\n    params.order_how = fetchParams.orderHow;\n    params.limit = fetchParams.perPage;\n    params.offset = (fetchParams.page - 1) * fetchParams.perPage;\n\n    if (fetchParams.search) {\n        params.display_name = fetchParams.search;\n    }\n    /*eslint-enable camelcase*/\n\n    fetchBaselines(tableId, params);\n}\n\nfunction buildBaselinesTable(data, selectedBaselineIds) {\n    let rows = [];\n\n    data.forEach(function(baseline) {\n        let row = [];\n\n        let dateTimeStamp = getDateTimeStamp(baseline.updated);\n\n        row.push(baseline.id);\n        row.push(baseline.display_name);\n        row.push(dateTimeStamp);\n        row.push(baseline.mapped_system_count ? baseline.mapped_system_count : 0);\n        row.push(baseline.notifications_enabled);\n\n        rows.push(row);\n    });\n\n    if (selectedBaselineIds) {\n        rows = setSelected(rows, selectedBaselineIds);\n    }\n\n    return rows;\n}\n\nfunction setSelected(baselineRows, selectedBaselineIds) {\n    if (selectedBaselineIds === undefined) {\n        selectedBaselineIds = [];\n    }\n\n    baselineRows.forEach(function(baseline) {\n        let found = selectedBaselineIds.find(function(id) {\n            return baseline[0] === id;\n        });\n\n        if (found !== undefined) {\n            baseline.selected = true;\n        }\n    });\n\n    return baselineRows;\n}\n\nfunction setBaselineArray(baselines) {\n    let baselineArray = [];\n\n    baselines.forEach(function(baseline) {\n        if (baseline.selected) {\n            baselineArray.push(baseline[0]);\n        }\n    });\n\n    return baselineArray;\n}\n\nfunction getDateTimeStamp(dateTime) {\n    return moment(dateTime).fromNow();\n}\n\nfunction toggleExpandedRow(expandedRows, factName) {\n    if (expandedRows.includes(factName)) {\n        expandedRows = expandedRows.filter(fact => fact !== factName);\n    } else {\n        expandedRows.push(factName);\n    }\n\n    return expandedRows;\n}\n\nfunction convertListToCSV(data) {\n    if (data === null || !data.length) {\n        return null;\n    }\n\n    let columnDelimiter = data.columnDelimiter || ',';\n    let lineDelimiter = data.lineDelimiter || '\\n';\n\n    let headers = 'UUID,Name,Last updated,Associated systems';\n    let result = headers + lineDelimiter;\n\n    data.forEach(function(baseline) {\n        baseline.forEach(function(detail) {\n            result += detail;\n            result += columnDelimiter;\n        });\n\n        result += lineDelimiter;\n    });\n\n    return result;\n}\n\n/*eslint-disable camelcase*/\nfunction convertListToJSON(data) {\n    if (data === null || !data.length) {\n        return null;\n    }\n\n    let json = [];\n\n    data.forEach(function(baseline) {\n        let row = new Object();\n        row.name = baseline[1];\n        row.last_updated = baseline[2];\n        row.associated_systems = baseline[3];\n        row.notifications_enabled = baseline[4];\n        json.push(row);\n    });\n\n    return JSON.stringify(json);\n}\n/*eslint-enable camelcase*/\n\nexport default {\n    fetchBaselines,\n    buildBaselinesTable,\n    setBaselineArray,\n    toggleExpandedRow,\n    setSelected,\n    convertListToCSV,\n    convertListToJSON\n};\n","import api from '../../../api';\n\nfunction fetchBaselines(tableId, params = {}) {\n    return {\n        type: `FETCH_BASELINE_LIST_${ tableId }`,\n        payload: api.getBaselineList(params)\n    };\n}\n\nfunction revertBaselineFetch(tableId) {\n    return {\n        type: `REVERT_BASELINE_FETCH_${tableId}`\n    };\n}\n\nfunction selectBaseline(ids, isSelected, tableId) {\n    return {\n        type: `SELECT_BASELINE_${tableId}`,\n        payload: { ids, isSelected }\n    };\n}\n\nfunction setSelectedBaselines(selectedBaselineIds, tableId) {\n    return {\n        type: `SET_SELECTED_BASELINES_${tableId}`,\n        payload: selectedBaselineIds\n    };\n}\n\nfunction clearSelectedBaselines(tableId) {\n    return {\n        type: `CLEAR_SELECTED_BASELINES_${tableId}`\n    };\n}\n\nfunction clearBaselineData(tableId) {\n    return {\n        type: `CLEAR_BASELINE_DATA_${tableId}`\n    };\n}\n\nfunction deleteSelectedBaselines(deleteBaselinesAPIBody, tableId) {\n    return {\n        type: `DELETE_SELECTED_BASELINES_${tableId}`,\n        payload: api.deleteBaselinesData(deleteBaselinesAPIBody)\n    };\n}\n\nfunction exportToCSV(baselineData) {\n    let data = {\n        type: 'csv',\n        exportType: 'baseline list',\n        exportData: baselineData\n    };\n\n    return {\n        type: `EXPORT_BASELINES_LIST_TO_CSV_CHECKBOX`,\n        payload: data\n    };\n}\n\nfunction exportToJSON(baselineData) {\n    let data = {\n        type: 'json',\n        exportType: 'baseline list',\n        exportData: baselineData\n    };\n\n    return {\n        type: `EXPORT_BASELINES_LIST_TO_JSON_CHECKBOX`,\n        payload: data\n    };\n}\n\nexport default {\n    fetchBaselines,\n    revertBaselineFetch,\n    selectBaseline,\n    setSelectedBaselines,\n    clearSelectedBaselines,\n    clearBaselineData,\n    deleteSelectedBaselines,\n    exportToCSV,\n    exportToJSON\n};\n","import baselinesReducerHelpers from './helpers';\nimport helpers from '../../helpers';\nimport union from 'lodash/union';\n\nconst initialState = {\n    loading: true,\n    baselineTableData: [],\n    selectedBaselineIds: [],\n    IdToDelete: '',\n    emptyState: false,\n    baselineError: {},\n    totalBaselines: 0\n};\n\nconst baselinesTableReducer = (tableId = '') => {\n    const tableReducer = (state = initialState, action) => {\n        let rows = [];\n        let selectedBaselines = [];\n        let newBaselineTableData = [];\n        let response;\n        let errorObject;\n\n        switch (action.type) {\n            case `FETCH_BASELINE_LIST_${tableId}_PENDING`:\n                return {\n                    ...state,\n                    loading: true\n                };\n            case `FETCH_BASELINE_LIST_${tableId}_FULFILLED`:\n                rows = baselinesReducerHelpers.buildBaselinesTable(action.payload.data, state.selectedBaselineIds, tableId);\n\n                return {\n                    ...state,\n                    loading: false,\n                    emptyState: action.payload.meta.total_available === 0,\n                    baselineTableData: rows,\n                    totalBaselines: action.payload.meta.count\n                };\n            case `FETCH_BASELINE_LIST_${tableId}_REJECTED`:\n                response = action.payload.response;\n                errorObject = { status: response.status };\n                if (response.data === '') {\n                    errorObject.detail = response.statusText;\n                } else if (response.data.message) {\n                    errorObject.detail = response.data.message;\n                } else {\n                    errorObject.detail = response.data.detail;\n                }\n\n                return {\n                    ...state,\n                    loading: false,\n                    emptyState: true,\n                    baselineError: errorObject\n                };\n            case `REVERT_BASELINE_FETCH_${tableId}`:\n                return {\n                    ...state,\n                    emptyState: false,\n                    baselineError: {},\n                    loading: false\n                };\n            case `SELECT_BASELINE_${tableId}`:\n                selectedBaselines = [ ...state.selectedBaselineIds ];\n\n                if (action.payload.ids.length === 0) {\n                    selectedBaselines = [];\n                } else if (action.payload.isSelected) {\n                    if (tableId === 'CHECKBOX' || tableId === 'COMPARISON') {\n                        selectedBaselines = union(selectedBaselines.concat(action.payload.ids));\n                    } else if (tableId === 'RADIO') {\n                        selectedBaselines.pop();\n                        selectedBaselines.push(action.payload.ids[0]);\n                    }\n                } else if (!action.payload.isSelected) {\n                    selectedBaselines = selectedBaselines.filter(function(item) {\n                        return !action.payload.ids.includes(item);\n                    });\n                }\n\n                state.baselineTableData.map(row => {\n                    if (selectedBaselines.includes(row[0])) {\n                        row.selected = true;\n                    } else {\n                        row.selected = false;\n                    }\n\n                    newBaselineTableData.push(row);\n                });\n\n                return {\n                    ...state,\n                    baselineTableData: newBaselineTableData,\n                    selectedBaselineIds: selectedBaselines\n                };\n            case `SET_SELECTED_BASELINES_${tableId}`:\n                newBaselineTableData = [ ...state.baselineTableData ];\n                //rows = baselinesReducerHelpers.setSelected(newBaselineTableData, state.selectedBaselineIds);\n                rows = baselinesReducerHelpers.setSelected(newBaselineTableData, action.payload);\n\n                return {\n                    ...state,\n                    baselineTableData: rows,\n                    //selectedBaselineIds: action.payload.length ? action.payload : state.selectedBaselineIds\n                    selectedBaselineIds: action.payload\n                };\n            case `CLEAR_SELECTED_BASELINES_${tableId}`:\n                return {\n                    ...state,\n                    selectedBaselineIds: []\n                };\n            case `CLEAR_BASELINE_DATA_${tableId}`:\n                return {\n                    ...state,\n                    baselineData: undefined\n                };\n            case `DELETE_SELECTED_BASELINES_${tableId}_PENDING`:\n                return {\n                    ...state,\n                    loading: true\n                };\n            case `DELETE_SELECTED_BASELINES_${tableId}_FULFILLED`:\n                return {\n                    ...state,\n                    loading: false\n                };\n            case `DELETE_SELECTED_BASELINES_${tableId}_REJECTED`:\n                response = action.payload.response;\n                errorObject = { status: response.status };\n                if (response.data === '') {\n                    errorObject.detail = response.statusText;\n                } else if (response.data.message) {\n                    errorObject.detail = response.data.message;\n                } else {\n                    errorObject.detail = response.data.detail;\n                }\n\n                return {\n                    ...state,\n                    loading: false,\n                    baselineError: errorObject\n                };\n            case `EXPORT_BASELINES_LIST_TO_CSV_${tableId}`:\n                helpers.downloadHelper(action.payload);\n                return {\n                    ...state\n                };\n            case `EXPORT_BASELINES_LIST_TO_JSON_${tableId}`:\n                helpers.downloadHelper(action.payload);\n                return {\n                    ...state\n                };\n            default:\n                return state;\n        }\n    };\n\n    return tableReducer;\n};\n\nexport default baselinesTableReducer;\n","import { combineReducers } from 'redux';\nexport { default as baselinesTableActions } from './actions';\nimport baselinesTableReducer from './baselinesTableReducer';\n\nexport const baselinesTableRootReducer = combineReducers({\n    checkboxTable: baselinesTableReducer('CHECKBOX'),\n    radioTable: baselinesTableReducer('RADIO'),\n    comparisonTable: baselinesTableReducer('COMPARISON')\n});\n","const OPEN_FILTER_DROPDOWN = 'OPEN_FILTER_DROPDOWN';\n\nexport default {\n    OPEN_FILTER_DROPDOWN\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from '@patternfly/react-core';\n\nexport const DriftTooltip = ({\n    content,\n    body\n}) => {\n    return (\n        <Tooltip\n            content={ content }\n        >\n            { body }\n        </Tooltip>\n    );\n};\n\nDriftTooltip.propTypes = {\n    content: PropTypes.string,\n    body: PropTypes.any\n};\n\nexport default DriftTooltip;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\n\nexport class EmptyStateDisplay extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    async componentDidMount() {\n        await window.insights?.chrome?.appAction?.('comparison-list');\n    }\n\n    render() {\n        const { button, color, error, icon, isSmall, text, title } = this.props;\n\n        /*eslint-disable react/jsx-key*/\n        return (\n            <EmptyState variant={ isSmall ? EmptyStateVariant.small : EmptyStateVariant.large }>\n                { icon\n                    ? <EmptyStateIcon\n                        icon={ icon }\n                        color={ color ? color : null }\n                        className={ isSmall ? 'small-empty-state-icon' : null }\n                    />\n                    : null\n                }\n                <br></br>\n                <Title\n                    headingLevel={ isSmall ? 'h5' : 'h1' }\n                    size={ isSmall ? 'md' : 'lg' }\n                >\n                    { title }\n                </Title>\n                <EmptyStateBody>\n                    { text ? text.map(line =>\n                        <React.Fragment>\n                            { line }\n                            <br />\n                        </React.Fragment>)\n                        : null\n                    }\n                    { error ? error : null }\n                </EmptyStateBody>\n                { button }\n            </EmptyState>\n        );\n        /*eslint-enable react/jsx-key*/\n    }\n}\n\nEmptyStateDisplay.propTypes = {\n    button: PropTypes.object,\n    color: PropTypes.string,\n    error: PropTypes.string,\n    icon: PropTypes.any,\n    isSmall: PropTypes.bool,\n    text: PropTypes.array,\n    title: PropTypes.string\n};\n\nexport default EmptyStateDisplay;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nexport class HistoricalProfilesCheckbox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: this.findChecked()\n        };\n    }\n\n    findChecked = () => {\n        const { profile, selectedHSPIds, entities, updateBadgeCount } = this.props;\n        let checked;\n\n        if (profile.captured_date === 'Latest') {\n            checked = entities.selectedSystemIds.some(id => id === profile.id);\n            updateBadgeCount(checked);\n        } else {\n            checked = selectedHSPIds?.some(id => id === profile.id);\n        }\n\n        return checked;\n    }\n\n    handleChange = () => {\n        const { checked } = this.state;\n        const { onSelect, profile } = this.props;\n\n        this.setState({\n            checked: !checked\n        });\n\n        onSelect(checked, profile);\n    }\n\n    render() {\n        const { profile } = this.props;\n        const { checked } = this.state;\n\n        /*eslint-disable camelcase*/\n        return (\n            <React.Fragment>\n                <Checkbox\n                    label={ profile.captured_date === 'Latest'\n                        ? profile.captured_date\n                        : moment.utc(profile.captured_date).format('DD MMM YYYY, HH:mm UTC') }\n                    isChecked={ checked }\n                    onChange={ this.handleChange }\n                    aria-label={ profile.id }\n                    id={ profile.id }\n                    name={ profile.id }\n                    data-ouia-component-id={ 'hsp-popover-option-checkbox-' + profile.id }\n                    data-ouia-component-type='PF4/Checkbox'\n                />\n            </React.Fragment>\n        );\n        /*eslint-enable camelcase*/\n    }\n}\n\nHistoricalProfilesCheckbox.propTypes = {\n    profile: PropTypes.object,\n    selectHistoricProfiles: PropTypes.func,\n    selectedHSPIds: PropTypes.array,\n    updateBadgeCount: PropTypes.func,\n    selectSystem: PropTypes.func,\n    entities: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        entities: state.entities\n    };\n}\n\nexport default (connect(mapStateToProps, null)(HistoricalProfilesCheckbox));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Radio } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nexport class HistoricalProfilesRadio extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: this.findChecked()\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { entities, profile } = this.props;\n\n        if (prevProps.entities?.selectedHSP !== entities?.selectedHSP) {\n            this.setState({\n                checked: entities.selectedHSP?.id === profile.id\n            });\n        }\n    }\n\n    findChecked = () => {\n        const { profile, entities } = this.props;\n        let checked;\n\n        if (profile.captured_date === 'Latest') {\n            checked = entities.selectedSystemIds.some(id => id === profile.id);\n        } else {\n            checked = entities?.selectedHSP?.id === profile.id;\n        }\n\n        return checked;\n    }\n\n    handleChange = () => {\n        const { checked } = this.state;\n        const { onSingleSelect, profile } = this.props;\n\n        if (!checked) {\n            this.setState({\n                checked: true\n            });\n        }\n\n        onSingleSelect(profile);\n    }\n\n    render() {\n        const { profile } = this.props;\n        const { checked } = this.state;\n\n        /*eslint-disable camelcase*/\n        return (\n            <React.Fragment>\n                <Radio\n                    isChecked={ checked }\n                    id={ profile.captured_date }\n                    name={ profile.captured_date }\n                    label={ moment.utc(profile.captured_date).format('DD MMM YYYY, HH:mm UTC') }\n                    value={ profile.captured_date }\n                    onChange={ this.handleChange }\n                />\n            </React.Fragment>\n        );\n        /*eslint-enable camelcase*/\n    }\n}\n\nHistoricalProfilesRadio.propTypes = {\n    profile: PropTypes.object,\n    entities: PropTypes.object,\n    onSingleSelect: PropTypes.func,\n    checked: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n    return {\n        entities: state.entities\n    };\n}\n\nexport default (connect(mapStateToProps, null)(HistoricalProfilesRadio));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Badge, Button, Popover } from '@patternfly/react-core';\nimport { ExclamationCircleIcon, HistoryIcon, UndoIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nimport systemsTableActions from '../SystemsTable/actions';\nimport HistoricalProfilesCheckbox from './HistoricalProfilesCheckbox/HistoricalProfilesCheckbox';\nimport api from '../../api';\nimport EmptyStateDisplay from '../EmptyStateDisplay/EmptyStateDisplay';\nimport HistoricalProfilesRadio from './HistoricalProfilesRadio/HistoricalProfilesRadio';\nimport { addSystemModalActions } from '../AddSystemModal/redux';\n\nexport class HistoricalProfilesPopover extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: false,\n            historicalData: undefined,\n            dropDownArray: this.renderLoadingRows(),\n            badgeCount: this.props.badgeCount ? this.props.badgeCount : 0,\n            error: undefined\n        };\n\n        this.onToggle = () => {\n            const { isVisible } = this.state;\n\n            if (isVisible === false) {\n                this.fetchData(this.props.system);\n            }\n\n            this.setState({\n                isVisible: !isVisible\n            });\n        };\n\n        this.onSelect = this.onSelect.bind(this);\n        this.onSingleSelect = this.onSingleSelect.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.selectedHSPIds !== prevProps.selectedHSPIds) {\n            this.updateBadgeCount();\n            this.setState({ dropDownArray: this.createDropdownArray() });\n        }\n    }\n\n    async onSelect(checked, profile) {\n        const { handleHSPSelection, selectHistoricProfiles, selectSystem, selectedHSPIds } = this.props;\n        let newSelectedHSPIds = [ ...selectedHSPIds ];\n\n        if (profile.captured_date === 'Latest') {\n            await selectSystem(profile.id, !checked);\n        } else {\n            if (newSelectedHSPIds.includes(profile.id)) {\n                newSelectedHSPIds = newSelectedHSPIds.filter(hsp => hsp !== profile.id);\n            } else {\n                newSelectedHSPIds.push(profile.id);\n            }\n\n            await selectHistoricProfiles(newSelectedHSPIds);\n        }\n\n        handleHSPSelection(profile);\n        this.updateBadgeCount(!checked);\n    }\n\n    async onSingleSelect(profile) {\n        const { selectSystem, selectSingleHSP } = this.props;\n\n        if (profile.captured_date === 'Latest') {\n            await selectSystem(profile.id, true);\n        }\n\n        selectSingleHSP(profile);\n    }\n\n    fetchCompare = () => {\n        const { systemIds, selectedBaselineIds, selectedHSPIds, referenceId, fetchCompare } = this.props;\n\n        fetchCompare(systemIds, selectedBaselineIds, selectedHSPIds, referenceId);\n    }\n\n    async retryFetch() {\n        const { system } = this.props;\n        this.setState({\n            dropDownArray: this.renderLoadingRows()\n        });\n\n        await this.fetchData(system);\n    }\n\n    /*eslint-disable camelcase*/\n    async fetchData(system) {\n        const { systemName } = this.props;\n\n        let fetchedData = await api.fetchHistoricalData(system.system_id ? system.system_id : system.id);\n\n        fetchedData.profiles?.forEach(function(profile) {\n            profile.system_name = systemName;\n        });\n\n        if (fetchedData.status) {\n            this.setState({\n                error: { status: fetchedData.status, message: fetchedData.data.message }\n            });\n        } else {\n            fetchedData.profiles.shift();\n\n            this.setState({\n                historicalData: fetchedData\n            });\n        }\n\n        this.setState({\n            dropDownArray: this.createDropdownArray()\n        });\n    }\n    /*eslint-enable camelcase*/\n\n    createDropdownArray = () => {\n        const { hasMultiSelect, selectedHSPIds } = this.props;\n        const { historicalData, error } = this.state;\n\n        let dropdownItems = [];\n        let badgeCountFunc = this.updateBadgeCount;\n        let onSelectFunc = this.onSelect;\n        let onSingleSelectFunc = this.onSingleSelect;\n\n        if (historicalData && historicalData.profiles.length > 0) {\n            historicalData.profiles.forEach(function(profile, index) {\n                dropdownItems.push(\n                    <div className={ index > 0 ? 'sm-padding-top' : null }>\n                        { hasMultiSelect\n                            ? <HistoricalProfilesCheckbox\n                                profile={ profile }\n                                updateBadgeCount={ badgeCountFunc }\n                                onSelect={ onSelectFunc }\n                                selectedHSPIds={ selectedHSPIds }\n                            />\n                            : <HistoricalProfilesRadio\n                                profile={ profile }\n                                onSingleSelect={ onSingleSelectFunc }\n                                selectedHSPIds={ selectedHSPIds }\n                            />\n                        }\n                    </div>\n                );\n            });\n        } else if (error) {\n            dropdownItems.push(\n                <EmptyStateDisplay\n                    icon={ ExclamationCircleIcon }\n                    isSmall={ true }\n                    color='#c9190b'\n                    title={ 'Cannot get historical check-ins' }\n                    error={ error.status + ': ' + error.message }\n                    button={ <a onClick={ () => this.retryFetch() }>\n                        <UndoIcon className='reload-button' />\n                            Retry\n                    </a> }\n                />\n            );\n        } else {\n            dropdownItems.push(\n                <div>\n                    There are no historical profiles to display.\n                </div>\n            );\n        }\n\n        return dropdownItems;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rows.push(\n                <Skeleton\n                    className='hsp-dropdown-loading'\n                    size={ SkeletonSize.sm }\n                    key={ 'skeleton-row-' + i }\n                />\n            );\n        }\n\n        return rows;\n    }\n\n    updateBadgeCount = () => {\n        this.setState({\n            badgeCount: this.state.historicalData?.profiles.filter((hsp) => {\n                return this.props.selectedHSPIds.includes(hsp.id);\n            }).length\n        });\n    }\n\n    renderBadge = () => {\n        const { badgeCount } = this.state;\n\n        if (badgeCount > 0) {\n            return <Badge key={ 1 }>{ badgeCount }</Badge>;\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        /*eslint-disable camelcase*/\n        const { dropDownArray, isVisible } = this.state;\n        const { hasBadge, hasCompareButton, system } = this.props;\n        let id = system?.system_id ? system?.system_id : system?.id;\n        /*eslint-enable camelcase*/\n\n        return (\n            <React.Fragment>\n                <span\n                    className='hsp-icon-padding'\n                    data-ouia-component-id={ 'hsp-popover-toggle-' + id  }\n                    data-ouia-component-type='PF4/Button' >\n                    <Popover\n                        id={ 'hsp-popover-' + id }\n                        isVisible={ isVisible }\n                        shouldClose={ () => this.onToggle() }\n                        headerContent={ <div>Historical profiles for this system</div> }\n                        bodyContent={ <div style={{ maxHeight: '350px', overflowY: 'scroll' }}>\n                            { dropDownArray }\n                        </div> }\n                        footerContent={ hasCompareButton\n                            ? <Button\n                                variant='primary'\n                                ouiaId=\"hsp-popover-compare\"\n                                onClick={ () => this.fetchCompare() }>\n                                Compare\n                            </Button>\n                            : null }\n                    >\n                        <HistoryIcon className='hsp-dropdown-icon' onClick={ () => this.onToggle() } />\n                    </Popover>\n                </span>\n                { hasBadge ? this.renderBadge() : null }\n            </React.Fragment>\n        );\n    }\n}\n\nHistoricalProfilesPopover.propTypes = {\n    fetchHistoricalData: PropTypes.func,\n    system: PropTypes.object,\n    fetchCompare: PropTypes.func,\n    systemIds: PropTypes.array,\n    selectedHSPIds: PropTypes.array,\n    selectedBaselineIds: PropTypes.array,\n    selectHistoricProfiles: PropTypes.func,\n    selectSystem: PropTypes.func,\n    hasBadge: PropTypes.bool,\n    hasCompareButton: PropTypes.bool,\n    badgeCount: PropTypes.number,\n    referenceId: PropTypes.string,\n    dropdownDirection: PropTypes.string,\n    hasMultiSelect: PropTypes.bool,\n    selectSingleHSP: PropTypes.func,\n    handleHSPSelection: PropTypes.func,\n    systemName: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        selectedHSPIds: state.historicProfilesState?.selectedHSPIds || []\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        selectSystem: (id, selected) => dispatch({\n            type: 'SELECT_ENTITY',\n            payload: { id, selected }\n        }),\n        selectSingleHSP: (profile) => dispatch(systemsTableActions.selectSingleHSP(profile)),\n        handleHSPSelection: (content) => dispatch(addSystemModalActions.handleHSPSelection(content))\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HistoricalProfilesPopover));\n","const SELECT_HISTORIC_PROFILES = 'SELECT_HISTORIC_PROFILES';\n\nexport default {\n    SELECT_HISTORIC_PROFILES\n};\n","import types from '../modules/types';\n\nfunction selectSingleHSP(profile) {\n    return {\n        type: types.SELECT_SINGLE_HSP,\n        payload: profile\n    };\n}\n\nfunction updateColumns(key) {\n    return {\n        type: types.UPDATE_COLUMNS,\n        payload: key\n    };\n}\n\nfunction clearAllFilters() {\n    return {\n        type: types.DRIFT_CLEAR_ALL_FILTERS\n    };\n}\n\nfunction disableSystemTable(isDisabled) {\n    return {\n        type: types.DISABLE_SYSTEM_TABLE,\n        payload: isDisabled\n    };\n}\n\nexport default {\n    selectSingleHSP,\n    updateColumns,\n    clearAllFilters,\n    disableSystemTable\n};\n","import React from 'react';\nimport { CloseIcon, HistoryIcon, ServerIcon } from '@patternfly/react-icons';\nimport moment from 'moment';\nimport DriftTooltip from './DriftTooltip/DriftTooltip';\nimport baselinesTableHelpers from './BaselinesTable/redux/helpers';\nimport editBaselineHelpers from './BaselinesPage/EditBaselinePage/EditBaseline/helpers';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\n\nfunction findSelectedOnPage(rows, selectedSystemIds) {\n    let selectedSystems = [];\n\n    rows.forEach(function(row) {\n        if (selectedSystemIds.includes(row.id)) {\n            row.selected = true;\n        }\n\n        if (row.selected) {\n            selectedSystems.push({\n                id: row.id,\n                name: row.display_name,\n                icon: <DriftTooltip\n                    content='System'\n                    body={ <ServerIcon /> }\n                />\n            });\n        }\n    });\n\n    return selectedSystems;\n}\n\nfunction findCheckedValue(total, selected) {\n    if (selected === total && total > 0) {\n        return true;\n    } else if (selected > 0 && selected < total) {\n        return null;\n    } else {\n        return false;\n    }\n}\n\nfunction paginateData(data, selectedPage, itemsPerPage) {\n    let paginatedData = [];\n\n    if (data === null || !data.length) {\n        return [];\n    }\n\n    for (let i = 0; i < data.length; i++) {\n        if (Math.ceil((i + 1) / itemsPerPage) === selectedPage) {\n            paginatedData.push(data[i]);\n        }\n    }\n\n    return paginatedData;\n}\n\nfunction buildSystemsTableWithSelectedHSP (rows, selectedHSP, deselectHistoricalProfiles) {\n    /*eslint-disable camelcase*/\n    rows.forEach((row) => {\n        row.selected = false;\n        row.display_selected_hsp = row.display_name;\n        if (selectedHSP.system_id === row.id) {\n            row.display_selected_hsp = <React.Fragment>\n                <div>\n                    { row.display_name }\n                </div>\n                <div>\n                    <HistoryIcon className='active-blue margin-right-5-px' />\n                    {\n                        moment.utc(selectedHSP.captured_date).format('DD MMM YYYY, HH:mm UTC')\n                    }\n                    <CloseIcon\n                        className='pointer not-active margin-left-5-px'\n                        onClick={ () => deselectHistoricalProfiles() }\n                    />\n                </div>\n            </React.Fragment>;\n        }\n    });\n    /*eslint-enable camelcase*/\n\n    return rows;\n}\n\nfunction downloadHelper(baselineData) {\n    let filename;\n    let file;\n\n    if (baselineData.exportType === 'baseline list') {\n        filename = 'baseline-list-export';\n        if (baselineData.type === 'csv') {\n            file = baselinesTableHelpers.convertListToCSV(baselineData.exportData);\n        } else if (baselineData.type === 'json') {\n            file = baselinesTableHelpers.convertListToJSON(baselineData.exportData);\n        }\n    } else if (baselineData.exportType === 'baselines data') {\n        filename = 'baseline-data-export';\n        if (baselineData.type === 'csv') {\n            file = editBaselineHelpers.convertDataToCSV(baselineData.exportData, baselineData.baselineRowData);\n        } else if (baselineData.type === 'json') {\n            file = JSON.stringify(editBaselineHelpers.convertDataToJSON(baselineData.exportData));\n        }\n    }\n\n    if (file === null) {\n        return;\n    }\n\n    let today = new Date();\n    filename += today.toISOString();\n    //filename += '.' + baselineData.type;\n\n    downloadFile(file, filename, baselineData.type);\n}\n\nexport default {\n    findSelectedOnPage,\n    findCheckedValue,\n    paginateData,\n    buildSystemsTableWithSelectedHSP,\n    downloadHelper\n};\n","import types from './types';\nimport api from '../../api';\nimport { ASC, DESC } from '../../constants';\n\nfunction fetchCompare(systemIds, baselineIds, systemHSPIds, referenceId) {\n    return {\n        type: types.FETCH_COMPARE,\n        payload: api.getCompare(systemIds, baselineIds, systemHSPIds, referenceId)\n    };\n}\n\nfunction revertCompareData() {\n    return {\n        type: types.REVERT_COMPARE_DATA\n    };\n}\n\nfunction clearComparison() {\n    return {\n        type: types.CLEAR_COMPARISON\n    };\n}\n\nfunction clearComparisonFilters() {\n    return {\n        type: types.CLEAR_COMPARISON_FILTERS\n    };\n}\n\nfunction setSelectedSystemIds(selectedSystemIds) {\n    return {\n        type: types.SET_SELECTED_SYSTEM_IDS,\n        payload: { selectedSystemIds }\n    };\n}\n\nfunction toggleFactSort(currentSort) {\n    return {\n        type: types.TOGGLE_FACT_SORT,\n        payload: currentSort === ASC ? DESC : ASC\n    };\n}\n\nfunction toggleStateSort(currentSort) {\n    let newSort;\n\n    if (currentSort === ASC) {\n        newSort = DESC;\n    }\n    else if (currentSort === DESC) {\n        newSort = '';\n    } else {\n        newSort = ASC;\n    }\n\n    return {\n        type: types.TOGGLE_STATE_SORT,\n        payload: newSort\n    };\n}\n\nfunction addStateFilter(filterData) {\n    filterData.selected = !filterData.selected;\n    return {\n        type: types.ADD_STATE_FILTER,\n        payload: filterData\n    };\n}\n\nfunction filterByFact(filter) {\n    return {\n        type: types.FILTER_BY_FACT,\n        payload: filter\n    };\n}\n\nfunction handleFactFilter(filter) {\n    return {\n        type: types.HANDLE_FACT_FILTER,\n        payload: filter\n    };\n}\n\nfunction clearAllFactFilters() {\n    return {\n        type: types.CLEAR_ALL_FACT_FILTERS\n    };\n}\n\nfunction updatePagination(pagination) {\n    return {\n        type: types.UPDATE_DRIFT_PAGINATION,\n        payload: pagination\n    };\n}\n\nfunction exportToCSV() {\n    return {\n        type: types.EXPORT_TO_CSV\n    };\n}\n\nfunction exportToJSON() {\n    return {\n        type: types.EXPORT_TO_JSON\n    };\n}\n\nfunction expandRow(factName) {\n    return {\n        type: types.EXPAND_ROW,\n        payload: factName\n    };\n}\n\nfunction updateReferenceId(id) {\n    return {\n        type: types.UPDATE_REFERENCE_ID,\n        payload: id\n    };\n}\n\nfunction setGlobalFilterTags(tags = []) {\n    return {\n        type: types.SET_GLOBAL_FILTER_TAGS,\n        payload: tags\n    };\n}\n\nfunction setGlobalFilterWorkloads(workloads = []) {\n    return {\n        type: types.SET_GLOBAL_FILTER_WORKLOADS,\n        payload: workloads\n    };\n}\n\nfunction setGlobalFilterSIDs(SIDs = []) {\n    return {\n        type: types.SET_GLOBAL_FILTER_SIDS,\n        payload: SIDs\n    };\n}\n\nfunction resetComparisonFilters() {\n    return {\n        type: types.RESET_COMPARISON_FILTERS\n    };\n}\n\nexport default {\n    fetchCompare,\n    revertCompareData,\n    clearComparison,\n    clearComparisonFilters,\n    setSelectedSystemIds,\n    toggleFactSort,\n    addStateFilter,\n    toggleStateSort,\n    filterByFact,\n    handleFactFilter,\n    clearAllFactFilters,\n    updatePagination,\n    exportToCSV,\n    exportToJSON,\n    expandRow,\n    updateReferenceId,\n    setGlobalFilterTags,\n    setGlobalFilterWorkloads,\n    setGlobalFilterSIDs,\n    resetComparisonFilters\n};\n","const SELECT_ENTITY = 'SELECT_ENTITY';\nconst FETCH_COMPARE = 'FETCH_COMPARE';\nconst SET_SELECTED_SYSTEM_IDS = 'SET_SELECTED_SYSTEM_IDS';\nconst TOGGLE_FACT_SORT = 'TOGGLE_FACT_SORT';\nconst ADD_STATE_FILTER = 'ADD_STATE_FILTER';\nconst TOGGLE_STATE_SORT = 'TOGGLE_STATE_SORT';\nconst FILTER_BY_FACT = 'FILTER_BY_FACT';\nconst HANDLE_FACT_FILTER = 'HANDLE_FACT_FILTER';\nconst CLEAR_ALL_FACT_FILTERS = 'CLEAR_ALL_FACT_FILTERS';\nconst UPDATE_DRIFT_PAGINATION = 'UPDATE_DRIFT_PAGINATION';\nconst CLEAR_COMPARISON = 'CLEAR_COMPARISON';\nconst CLEAR_COMPARISON_FILTERS = 'CLEAR_COMPARISON_FILTERS';\nconst EXPORT_TO_CSV = 'EXPORT_TO_CSV';\nconst EXPORT_TO_JSON = 'EXPORT_TO_JSON';\nconst EXPAND_ROW = 'EXPAND_ROW';\nconst REVERT_COMPARE_DATA = 'REVERT_COMPARE_DATA';\nconst TOGGLE_ACTIVE_SORT = 'TOGGLE_ACTIVE_SORT';\nconst UPDATE_REFERENCE_ID = 'UPDATE_REFERENCE_ID';\nconst SELECT_SINGLE_HSP = 'SELECT_SINGLE_HSP';\nconst UPDATE_COLUMNS = 'UPDATE_COLUMNS';\nconst SET_GLOBAL_FILTER_TAGS = 'SET_GLOBAL_FILTER_TAGS';\nconst SET_GLOBAL_FILTER_WORKLOADS = 'SET_GLOBAL_FILTER_WORKLOADS';\nconst SET_GLOBAL_FILTER_SIDS = 'SET_GLOBAL_FILTER_SIDS';\nconst DRIFT_CLEAR_ALL_FILTERS = 'DRIFT_CLEAR_ALL_FILTERS';\nconst DISABLE_SYSTEM_TABLE = 'DISABLE_SYSTEM_TABLE';\nconst RESET_COMPARISON_FILTERS = 'RESET_COMPARISON_FILTERS';\n\nexport default {\n    SELECT_ENTITY,\n    FETCH_COMPARE,\n    SET_SELECTED_SYSTEM_IDS,\n    TOGGLE_FACT_SORT,\n    ADD_STATE_FILTER,\n    TOGGLE_STATE_SORT,\n    FILTER_BY_FACT,\n    HANDLE_FACT_FILTER,\n    CLEAR_ALL_FACT_FILTERS,\n    UPDATE_DRIFT_PAGINATION,\n    CLEAR_COMPARISON,\n    CLEAR_COMPARISON_FILTERS,\n    EXPORT_TO_CSV,\n    EXPORT_TO_JSON,\n    EXPAND_ROW,\n    REVERT_COMPARE_DATA,\n    TOGGLE_ACTIVE_SORT,\n    UPDATE_REFERENCE_ID,\n    SELECT_SINGLE_HSP,\n    UPDATE_COLUMNS,\n    SET_GLOBAL_FILTER_TAGS,\n    SET_GLOBAL_FILTER_WORKLOADS,\n    SET_GLOBAL_FILTER_SIDS,\n    DRIFT_CLEAR_ALL_FILTERS,\n    DISABLE_SYSTEM_TABLE,\n    RESET_COMPARISON_FILTERS\n};\n","function getBaseName(pathname) {\n    let release = '/';\n    const pathName = pathname.split('/');\n\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n\n    return `${release}${pathName[0]}/${pathName[1]}`;\n}\n\nexport default getBaseName;\n","/*eslint-disable camelcase*/\nimport axios from 'axios';\nimport { DRIFT_API_ROOT, BASELINE_API_ROOT, HISTORICAL_PROFILES_API_ROOT } from './constants';\n\nasync function post(path, body = {}) {\n    const request = await axios.post(DRIFT_API_ROOT.concat(path), body);\n    return request.data;\n}\n\nasync function getBaselines(path, getParams = {}) {\n    const request = await axios.get(BASELINE_API_ROOT.concat(path), { params: getParams });\n    return request.data;\n}\n\nasync function getBaseline(path) {\n    const request = await axios.get(BASELINE_API_ROOT.concat(path));\n    return request.data.data[0];\n}\n\nasync function getNotificationSystems(path) {\n    const request = await axios.get(BASELINE_API_ROOT.concat(path));\n    return request.data.system_ids;\n}\n\nasync function postSystemNotifications(path, body = {}) {\n    const request = await axios.post(BASELINE_API_ROOT.concat(path), body);\n    return request.data;\n}\n\nasync function patchBaseline(path, body = {}) {\n    let request = await axios.patch(BASELINE_API_ROOT.concat(path), body);\n\n    return request;\n}\n\nasync function postBaseline(path, body = {}) {\n    const request = await axios.post(BASELINE_API_ROOT.concat(path), body);\n    return request.data;\n}\n\nasync function deleteBaselines(path, body = {}) {\n    let response = await axios.post(BASELINE_API_ROOT.concat(path), body);\n\n    return response;\n}\n\nasync function getHistoricalData(path) {\n    let response;\n\n    const request = await axios.get(HISTORICAL_PROFILES_API_ROOT.concat(path))\n    .catch(function (error) {\n        return error.response;\n    });\n\n    if (request.status === 200) {\n        response = request.data.data[0];\n    } else {\n        response = request;\n    }\n\n    return response;\n}\n\nfunction getCompare(systemIds = [], baselineIds = [], historicalSystemProfileIds = [], referenceId = '') {\n    if (!Array.isArray(systemIds)) {\n        systemIds = [ systemIds ];\n    }\n\n    if (!Array.isArray(baselineIds)) {\n        baselineIds = [ baselineIds ];\n    }\n\n    if (!Array.isArray(historicalSystemProfileIds)) {\n        historicalSystemProfileIds = [ historicalSystemProfileIds ];\n    }\n\n    return post('/comparison_report', {\n        system_ids: systemIds,\n        baseline_ids: baselineIds,\n        historical_system_profile_ids: historicalSystemProfileIds,\n        reference_id: referenceId\n    });\n}\n\nfunction getBaselineList(params = {}) {\n    return getBaselines('/baselines', params);\n}\n\nfunction getBaselineData(baselineId = []) {\n    let path = '/baselines/';\n\n    return getBaseline(path.concat(baselineId), {});\n}\n\nfunction patchBaselineData(baselineId = [], apiBody) {\n    let path = '/baselines/';\n\n    return patchBaseline(path.concat(baselineId), apiBody);\n}\n\nfunction deleteBaselinesData(deleteBaselinesAPIBody = []) {\n    let path = '/baselines/deletion_request';\n\n    return deleteBaselines(path, deleteBaselinesAPIBody);\n}\n\nfunction postNewBaseline(apiBody, uuid) {\n    let path = '/baselines';\n    if (uuid !== undefined) {\n        let newPath = path.concat('/', uuid, '?', 'display_name=', apiBody.display_name);\n        return postBaseline(newPath, {});\n    }\n\n    return postBaseline(path, apiBody);\n}\n\nfunction fetchHistoricalData(systemId) {\n    let path = '/systems/';\n    return getHistoricalData(path.concat(systemId));\n}\n\nfunction getBaselineNotification(baselineId) {\n    let path = `/baselines/${baselineId}/systems`;\n    return getNotificationSystems(path);\n}\n\nfunction addSystemNotification(baselineId, systems) {\n    let path = `/baselines/${baselineId}/systems`;\n    let body = { system_ids: systems };\n\n    return postSystemNotifications(path, body);\n}\n\nfunction deleteSystemNotifications(baselineId, systems) {\n    let path = `/baselines/${baselineId}/systems/deletion_request`;\n    let body = { system_ids: systems };\n\n    return postSystemNotifications(path, body);\n}\n\nexport default {\n    getCompare,\n    getBaselineList,\n    getBaselineData,\n    patchBaselineData,\n    deleteBaselinesData,\n    postNewBaseline,\n    fetchHistoricalData,\n    getBaselineNotification,\n    addSystemNotification,\n    deleteSystemNotifications\n};\n/*eslint-enable camelcase*/\n","import version from './../package.json';\nexport const DRIFT_API_ROOT = '/api/drift/v1';\nexport const BASELINE_API_ROOT = '/api/system-baseline/v1';\nexport const HISTORICAL_PROFILES_API_ROOT = '/api/historical-system-profiles/v1';\nexport const ASC = 'asc';\nexport const DESC = 'desc';\nexport const FACT_ID = 0;\nexport const FACT_NAME = 1;\nexport const FACT_VALUE = 2;\nexport const COLUMN_DELIMITER = ',';\nexport const LINE_DELIMITER = '\\n';\n\nexport const API_HEADERS = {\n    'X-Insights-Drift': version,\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n};\n","import { ASC, DESC, COLUMN_DELIMITER, LINE_DELIMITER } from '../../constants';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport moment from 'moment';\n\nfunction paginateData(data, selectedPage, factsPerPage) {\n    let paginatedFacts = [];\n\n    if (data === null || !data.length) {\n        return [];\n    }\n\n    for (let i = 0; i < data.length; i++) {\n        if (Math.ceil((i + 1) / factsPerPage) === selectedPage) {\n            paginatedFacts.push(data[i]);\n        }\n    }\n\n    return paginatedFacts;\n}\n\nfunction getStateSelected(state, stateFilters) {\n    let isStateSelected;\n\n    isStateSelected = stateFilters.find(function(stateFilter) {\n        if (stateFilter.filter === state) {\n            return stateFilter.selected;\n        } else if (state === 'INCOMPLETE_DATA_OBFUSCATED') {\n            return getState('INCOMPLETE_DATA', stateFilters).selected;\n        }\n    });\n\n    return isStateSelected;\n}\n\nfunction getState(state, stateFilters) {\n    let isStateSelected;\n\n    stateFilters.find(function(stateFilter) {\n        if (stateFilter.filter === state) {\n            isStateSelected = stateFilter;\n        } else if (state === 'INCOMPLETE_DATA_OBFUSCATED') {\n            isStateSelected = getState('INCOMPLETE_DATA', stateFilters);\n        }\n    });\n\n    return isStateSelected;\n}\n\nfunction setTooltip (data, stateFilters, referenceId) {\n    let type = data.comparisons || data.multivalues ? 'category' : 'row';\n    let state = getState(data.state, stateFilters);\n\n    if (data.state === 'SAME') {\n        data.tooltip = state.display +\n        ' - ' +\n        'All system facts in this ' + type + ' are the same.';\n    } else if (data.state === 'INCOMPLETE_DATA') {\n        data.tooltip = state.display +\n        ' - ' +\n        'At least one system fact value in this ' + type + ' is missing.';\n    } else if (data.state === 'INCOMPLETE_DATA_OBFUSCATED') {\n        data.tooltip = state.display +\n        ' - ' +\n        'At least one system fact value in this ' + type + ' is redacted.';\n    } else {\n        if (referenceId) {\n            data.tooltip = state.display +\n            ' - ' +\n            'At least one system fact value in this ' + type + ' differs from the reference.';\n        } else {\n            data.tooltip = state.display +\n            ' - ' +\n            'At least one system fact value in this ' + type + ' differs.';\n        }\n    }\n}\n\nfunction filterCompareData(data, stateFilters, factFilter, referenceId, activeFactFilters) {\n    let filteredFacts = [];\n    let filteredComparisons = [];\n    let isStateSelected;\n    let lowerCaseFactFilter = factFilter.toLowerCase();\n    let lowerCaseActiveFilters = activeFactFilters?.map(filter => filter.toLowerCase());\n\n    if (data === null || !data.length) {\n        return [];\n    }\n\n    for (let i = 0; i < data.length; i += 1) {\n        let lowerCaseFactName = data[i].name.toLowerCase();\n        isStateSelected = getStateSelected(data[i].state, stateFilters);\n\n        if (data[i].comparisons) {\n            if (lowerCaseFactName === lowerCaseFactFilter || lowerCaseActiveFilters?.includes(lowerCaseFactName)) {\n                setTooltip(data[i], stateFilters, referenceId);\n                filteredComparisons = filterComparisons(data[i].comparisons, stateFilters, '', referenceId, []);\n                filteredFacts.push({\n                    name: data[i].name,\n                    state: data[i].state,\n                    comparisons: filteredComparisons,\n                    tooltip: data[i].tooltip\n                });\n\n                continue;\n            }\n\n            filteredComparisons = filterComparisons(data[i].comparisons, stateFilters, lowerCaseFactFilter, referenceId, lowerCaseActiveFilters);\n\n            if (filteredComparisons.length) {\n                setTooltip(data[i], stateFilters, referenceId);\n                filteredFacts.push({\n                    name: data[i].name,\n                    state: data[i].state,\n                    comparisons: filteredComparisons,\n                    tooltip: data[i].tooltip\n                });\n            }\n        } else {\n            if (isStateSelected && filterFact(lowerCaseFactName, lowerCaseFactFilter, lowerCaseActiveFilters)) {\n                setTooltip(data[i], stateFilters, referenceId);\n                filteredFacts.push(data[i]);\n            }\n        }\n    }\n\n    return filteredFacts;\n}\n\n/*eslint-disable camelcase*/\nfunction filterComparisons(comparisons, stateFilters, factFilter, referenceId, activeFactFilters) {\n    let filteredComparisons = [];\n    let filteredMultivalueItems = [];\n    let isStateSelected;\n\n    for (let i = 0; i < comparisons.length; i++) {\n        let lowerCaseFactName = comparisons[i].name.toLowerCase();\n        if (comparisons[i].multivalues) {\n            filteredMultivalueItems = filterMultiFacts(comparisons[i].multivalues, stateFilters, referenceId);\n            if (filteredMultivalueItems.length && filterFact(lowerCaseFactName, factFilter, activeFactFilters)) {\n                setTooltip(comparisons[i], stateFilters, referenceId);\n                filteredComparisons.push({\n                    name: comparisons[i].name,\n                    state: comparisons[i].state,\n                    multivalues: filteredMultivalueItems,\n                    tooltip: comparisons[i].tooltip\n                });\n            }\n        } else {\n            isStateSelected = getStateSelected(comparisons[i].state, stateFilters);\n            if (isStateSelected && filterFact(lowerCaseFactName, factFilter, activeFactFilters)) {\n                setTooltip(comparisons[i], stateFilters, referenceId);\n                filteredComparisons.push(comparisons[i]);\n            }\n        }\n    }\n\n    return filteredComparisons;\n}\n/*eslint-enable camelcase*/\n\nfunction filterMultiFacts(multivalueItems, stateFilters, referenceId) {\n    let filteredMultivalueItems = [];\n\n    for (let i = 0; i < multivalueItems.length; i++) {\n        if (getStateSelected(multivalueItems[i].state, stateFilters)) {\n            setTooltip(multivalueItems[i], stateFilters, referenceId);\n            filteredMultivalueItems.push(multivalueItems[i]);\n        }\n    }\n\n    return filteredMultivalueItems;\n}\n\nfunction filterFact(factName, factFilter, activeFactFilters) {\n    let isFiltered = false;\n\n    if (activeFactFilters?.length > 0) {\n        activeFactFilters.forEach(function(filter) {\n            if (factName.includes(filter)) {\n                isFiltered = true;\n            }\n        });\n\n        if (!isFiltered && factFilter.length && factName.includes(factFilter)) {\n            isFiltered = true;\n        }\n\n    } else if (factName.includes(factFilter)) {\n        isFiltered = true;\n    }\n\n    return isFiltered;\n}\n\n/*eslint-disable camelcase*/\nfunction sortData(filteredFacts, factSort, stateSort) {\n    let filteredSubfacts;\n    let newFilteredFacts;\n    let filteredValues;\n\n    newFilteredFacts = sortFacts(filteredFacts, factSort, stateSort);\n\n    newFilteredFacts.forEach(function(fact) {\n        if (fact.comparisons !== undefined && fact.comparisons.length > 0) {\n            filteredSubfacts = sortFacts(fact.comparisons, factSort, stateSort);\n\n            filteredSubfacts.forEach(function(subFact) {\n                if (subFact.multivalues?.length > 0) {\n                    filteredValues = sortFacts(subFact.multivalues, factSort, stateSort);\n                    subFact.multivalues = filteredValues;\n                }\n            });\n\n            fact.comparisons = filteredSubfacts;\n        }\n    });\n\n    return newFilteredFacts;\n}\n/*eslint-enable camelcase*/\n\nfunction sortFacts(filteredFacts, factSort, stateSort) {\n    if (stateSort === ASC) {\n        filteredFacts.sort(function(a, b) {\n            if (a.state.toLowerCase() > b.state.toLowerCase()) {\n                return -1;\n            }\n            else if (a.state.toLowerCase() < b.state.toLowerCase()) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n    }\n\n    if (stateSort === DESC) {\n        filteredFacts.sort(function(a, b) {\n            if (b.state.toLowerCase() > a.state.toLowerCase()) {\n                return -1;\n            }\n            else if (b.state.toLowerCase() < a.state.toLowerCase()) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n    }\n\n    if (factSort === ASC) {\n        filteredFacts.sort(function(a, b) {\n            if (stateSort === '') {\n                if (a.name?.toLowerCase() > b.name?.toLowerCase()) {\n                    return 1;\n                }\n                else if (a.name?.toLowerCase() < b.name?.toLowerCase()) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            }\n            else {\n                if ((a.name?.toLowerCase() > b.name?.toLowerCase()) && (a.state === b.state)) {\n                    return 1;\n                }\n                else if ((a.name?.toLowerCase() < b.name?.toLowerCase()) && (a.state === b.state)) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            }\n        });\n    }\n    else if (factSort === DESC) {\n        filteredFacts.sort(function(a, b) {\n            if (stateSort === '') {\n                if (b.name?.toLowerCase() > a.name?.toLowerCase()) {\n                    return 1;\n                }\n                else if (b.name?.toLowerCase() < a.name?.toLowerCase()) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            }\n            else {\n                if ((b.name?.toLowerCase() > a.name?.toLowerCase()) && (a.state === b.state)) {\n                    return 1;\n                }\n                else if ((b.name?.toLowerCase() < a.name?.toLowerCase()) && (a.state === b.state)) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            }\n        });\n    }\n\n    return filteredFacts;\n}\n\nfunction addRow(fact) {\n    let factName = fact.name ? fact.name : '';\n    let value = '';\n    let result = '';\n\n    result += factName + COLUMN_DELIMITER;\n    result += fact.state + COLUMN_DELIMITER;\n\n    if (fact.systems) {\n        fact.systems.forEach(function(system) {\n            value = system.value ? system.value.replace(/,/g, '') : '';\n            result += value;\n            result += COLUMN_DELIMITER;\n        });\n    } else if (fact.multivalues) {\n        fact.multivalues.forEach(function(value) {\n            result += LINE_DELIMITER;\n            result += addRow(value);\n        });\n    }\n\n    return result;\n}\n\nfunction convertFactsToCSV(data, referenceId, systems) {\n    let referenceIndex;\n    if (data === null || !data.length) {\n        return null;\n    }\n\n    let systemNames = systems.map(function(system, index) {\n        let systemName = system.display_name;\n        if (system.id === referenceId) {\n            systemName += '(reference)';\n            referenceIndex = index;\n        }\n\n        return systemName;\n    });\n    let mappedDates = systems.map(system => system.last_updated ? system.last_updated : system.updated);\n    let systemUpdates = [];\n    mappedDates.forEach((date, index) => {\n        if (index === referenceIndex) {\n            systemUpdates.push(moment.utc(date).format('DD MMM YYYY HH:mm UTC') + '(reference)');\n        } else {\n            systemUpdates.push(moment.utc(date).format('DD MMM YYYY HH:mm UTC'));\n        }\n    });\n\n    let headers = 'Fact,State,';\n    systemNames = systemNames.join(COLUMN_DELIMITER);\n    let result = headers + systemNames + LINE_DELIMITER;\n\n    systemUpdates = systemUpdates.join(COLUMN_DELIMITER);\n    result += COLUMN_DELIMITER + COLUMN_DELIMITER + systemUpdates + LINE_DELIMITER;\n\n    data.forEach(function(fact) {\n        result += addRow(fact);\n        result += LINE_DELIMITER;\n\n        if (fact.comparisons) {\n            fact.comparisons.forEach(function(subFact) {\n                result += '     ';\n                result += addRow(subFact);\n                result += LINE_DELIMITER;\n            });\n        }\n    });\n\n    return result;\n}\n\nfunction convertFactsToJSON(data, referenceId, systems, factName) {\n    let json = [];\n    let reference = systems.find(system => system.id === referenceId);\n\n    data.forEach(function(fact) {\n        let factInfo = new Object();\n        if (factName) {\n            factInfo.fact = factName;\n        } else {\n            factInfo.fact = fact.name;\n        }\n\n        factInfo.state = fact.state;\n        if (fact.comparisons) {\n            factInfo.comparisons = convertFactsToJSON(fact.comparisons, referenceId, systems);\n        } else if (fact.multivalues) {\n            factInfo.multivalues = convertFactsToJSON(fact.multivalues, referenceId, systems, fact.name);\n        } else {\n            fact.systems.forEach(function(system, index) {\n                factInfo[systems[index].display_name + ', ' +\n                moment.utc(systems[index].last_updated).format('DD MMM YYYY, HH:mm UTC')] = system.value;\n            });\n\n            if (reference) {\n                factInfo.reference = reference.display_name + ', ' + moment.utc(reference.last_updated).format('DD MMM YYYY, HH:mm UTC');\n            }\n        }\n\n        json.push(factInfo);\n    });\n\n    return json;\n}\n\nfunction downloadHelper(type, driftData, referenceId, systems) {\n    let file;\n    if (type === 'csv') {\n        file = convertFactsToCSV(driftData, referenceId, systems);\n    } else {\n        file = JSON.stringify(convertFactsToJSON(driftData, referenceId, systems));\n    }\n\n    if (file === null) {\n        return;\n    }\n\n    let filename = 'system-comparison-export-';\n    let today = new Date();\n    filename += today.toISOString();\n\n    downloadFile(file, filename, type);\n}\n\nfunction toggleExpandedRow(expandedRows, factName) {\n    if (expandedRows.includes(factName)) {\n        expandedRows = expandedRows.filter(fact => fact !== factName);\n    } else {\n        expandedRows.push(factName);\n    }\n\n    return expandedRows;\n}\n\nfunction updateStateFilters(stateFilters, updatedStateFilter) {\n    let newStateFilters = [];\n\n    stateFilters.forEach(function (stateFilter) {\n        if (stateFilter.filter === updatedStateFilter.filter) {\n            newStateFilters.push(updatedStateFilter);\n        } else {\n            newStateFilters.push(stateFilter);\n        }\n    });\n\n    return newStateFilters;\n}\n\nfunction findFilterIndex(filter, activeFactFilters) {\n    return activeFactFilters.indexOf(filter);\n}\n\nexport default {\n    paginateData,\n    getStateSelected,\n    getState,\n    setTooltip,\n    filterCompareData,\n    filterComparisons,\n    filterMultiFacts,\n    filterFact,\n    convertFactsToCSV,\n    convertFactsToJSON,\n    sortData,\n    downloadHelper,\n    toggleExpandedRow,\n    updateStateFilters,\n    findFilterIndex\n};\n","import types from './types';\nimport { ASC, DESC } from '../../constants';\nimport reducerHelpers from './helpers';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\n\nconst initialState = {\n    fullCompareData: [],\n    filteredCompareData: [],\n    sortedFilteredFacts: [],\n    referenceId: undefined,\n    systems: [],\n    baselines: [],\n    historicalProfiles: [],\n    previousStateSystems: [],\n    stateFilters: [\n        {\n            filter: 'SAME',\n            display: 'Same',\n            selected: true\n        },\n        {\n            filter: 'DIFFERENT',\n            display: 'Different',\n            selected: true\n        },\n        {\n            filter: 'INCOMPLETE_DATA',\n            display: 'Incomplete data',\n            selected: true\n        }\n    ],\n    factFilter: '',\n    activeFactFilters: [],\n    totalFacts: 0,\n    page: 1,\n    factSort: ASC,\n    stateSort: DESC,\n    perPage: 50,\n    loading: false,\n    expandedRows: [],\n    error: {},\n    emptyState: true\n};\n\nexport function compareReducer(state = initialState, action) {\n    let filteredFacts;\n    let sortedFacts;\n    let paginatedFacts;\n    let newExpandedRows;\n    let errorObject = {};\n    let response;\n    let updatedStateFilters = [];\n    let newStateFilters;\n    let newActiveFactFilters = [];\n    let index;\n    let newFactFilter;\n\n    switch (action.type) {\n        case types.CLEAR_COMPARISON:\n            return {\n                ...initialState,\n                stateFilters: state.stateFilters,\n                factFilter: state.factFilter,\n                activeFactFilters: state.activeFactFilters,\n                factSort: state.factSort,\n                stateSort: state.stateSort,\n                perPage: state.perPage,\n                expandedRows: [],\n                historicalProfiles: []\n            };\n        case types.CLEAR_COMPARISON_FILTERS:\n            newStateFilters = [ ...state.stateFilters ];\n            newStateFilters.forEach(function(stateFilter) { stateFilter.selected = false; });\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, newStateFilters, initialState.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            return {\n                ...state,\n                filteredCompareData: filteredFacts,\n                sortedFilteredFacts: sortedFacts,\n                stateFilters: newStateFilters,\n                factFilter: '',\n                activeFactFilters: [],\n                totalFacts: filteredFacts.length,\n                page: 1\n            };\n        case types.REVERT_COMPARE_DATA:\n            return {\n                ...state,\n                loading: false,\n                error: {},\n                systems: state.previousStateSystems\n            };\n        case `${types.FETCH_COMPARE}_PENDING`:\n            return {\n                ...state,\n                previousStateSystems: state.systems,\n                systems: [],\n                baselines: [],\n                historicalProfiles: [],\n                loading: true,\n                emptyState: false\n            };\n        case `${types.FETCH_COMPARE}_FULFILLED`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                action.payload.facts, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n\n            return {\n                ...state,\n                loading: false,\n                fullCompareData: action.payload.facts,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                systems: action.payload.systems || [],\n                baselines: action.payload.baselines || [],\n                historicalProfiles: action.payload.historical_system_profiles || [],\n                page: 1,\n                totalFacts: filteredFacts.length,\n                emptyState: (action.payload.systems.concat(action.payload.baselines).concat(action.payload.historical_system_profiles)).length === 0\n            };\n        case `${types.FETCH_COMPARE}_REJECTED`:\n            response = action.payload.response;\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                loading: false,\n                error: errorObject,\n                emptyState: true\n            };\n        case `${types.UPDATE_DRIFT_PAGINATION}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, action.payload.page, action.payload.perPage);\n            return {\n                ...state,\n                page: action.payload.page,\n                perPage: action.payload.perPage,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.ADD_STATE_FILTER}`:\n            updatedStateFilters = reducerHelpers.updateStateFilters(state.stateFilters, action.payload);\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, updatedStateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                stateFilters: updatedStateFilters,\n                page: 1,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.FILTER_BY_FACT}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, action.payload, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                factFilter: action.payload,\n                page: 1,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.HANDLE_FACT_FILTER}`:\n            newActiveFactFilters = [ ...state.activeFactFilters ];\n            index = reducerHelpers.findFilterIndex(action.payload, state.activeFactFilters);\n\n            if (index > -1) {\n                newActiveFactFilters.splice(index, 1);\n                newFactFilter = state.factFilter;\n            } else {\n                newActiveFactFilters.push(action.payload);\n                newFactFilter = '';\n            }\n\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, newFactFilter, state.referenceId, newActiveFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n\n            return {\n                ...state,\n                factFilter: newFactFilter,\n                activeFactFilters: newActiveFactFilters,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.CLEAR_ALL_FACT_FILTERS}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, '', state.referenceId, newActiveFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                factFilter: '',\n                activeFactFilters: [],\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.TOGGLE_FACT_SORT}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, action.payload, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                page: 1,\n                factSort: action.payload,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.TOGGLE_STATE_SORT}`:\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, action.payload);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n            return {\n                ...state,\n                page: 1,\n                stateSort: action.payload,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.EXPORT_TO_CSV}`:\n            reducerHelpers.downloadHelper(\n                'csv', state.sortedFilteredFacts, state.referenceId, [ ...state.baselines, ...state.systems, ...state.historicalProfiles ]\n            );\n            return {\n                ...state\n            };\n        case `${types.EXPORT_TO_JSON}`:\n            reducerHelpers.downloadHelper(\n                'json', state.sortedFilteredFacts, state.referenceId, [ ...state.baselines, ...state.systems, ...state.historicalProfiles ]\n            );\n            return {\n                ...state\n            };\n        case `${types.EXPAND_ROW}`:\n            newExpandedRows = reducerHelpers.toggleExpandedRow(state.expandedRows, action.payload);\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, state.stateFilters, state.factFilter, state.referenceId, state.activeFactFilters\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, state.page, state.perPage);\n            return {\n                ...state,\n                expandedRows: newExpandedRows,\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n        case `${types.UPDATE_REFERENCE_ID}`:\n            return {\n                ...state,\n                referenceId: action.payload\n            };\n        case `${types.RESET_COMPARISON_FILTERS}`:\n            newStateFilters = [\n                {\n                    filter: 'SAME',\n                    display: 'Same',\n                    selected: true\n                },\n                {\n                    filter: 'DIFFERENT',\n                    display: 'Different',\n                    selected: true\n                },\n                {\n                    filter: 'INCOMPLETE_DATA',\n                    display: 'Incomplete data',\n                    selected: true\n                }\n            ];\n\n            filteredFacts = reducerHelpers.filterCompareData(\n                state.fullCompareData, newStateFilters, '', state.referenceId, []\n            );\n            sortedFacts = reducerHelpers.sortData(filteredFacts, state.factSort, state.stateSort);\n            paginatedFacts = reducerHelpers.paginateData(sortedFacts, 1, state.perPage);\n\n            return {\n                ...state,\n                stateFilters: newStateFilters,\n                factFilter: '',\n                activeFactFilters: [],\n                filteredCompareData: paginatedFacts,\n                sortedFilteredFacts: sortedFacts,\n                totalFacts: filteredFacts.length\n            };\n\n        default:\n            return {\n                ...state\n            };\n    }\n}\n\nexport const globalFilterReducer = applyReducerHash({\n    [types.SET_GLOBAL_FILTER_TAGS]: (state = {}, action) => ({\n        ...state,\n        tagsFilter: action.payload\n    }),\n    [types.SET_GLOBAL_FILTER_WORKLOADS]: (state = {}, action) => ({\n        ...state,\n        workloadsFilter: action.payload\n    }),\n    [types.SET_GLOBAL_FILTER_SIDS]: (state = {}, action) => ({\n        ...state,\n        sidsFilter: action.payload\n    })\n});\n","import React from 'react';\nimport DriftTooltip from '../../DriftTooltip/DriftTooltip';\nimport { ClockIcon } from '@patternfly/react-icons';\n\nfunction makeSelections(content, isSelected, selectedContent) {\n    let newSelectedContent = [];\n    let exists;\n\n    if (!isSelected) {\n        for (let i = 0; i < selectedContent.length; i++) {\n            exists = false;\n            content.forEach(function(item) {\n                if (item.id === selectedContent[i].id) {\n                    exists = true;\n                }\n            });\n\n            if (!exists) {\n                newSelectedContent.push(selectedContent[i]);\n            }\n        }\n    } else {\n        newSelectedContent = [ ...selectedContent ];\n        let selectedContentIds = selectedContent.map(selectedItem => selectedItem.id);\n\n        content.forEach(function(item) {\n            if (!selectedContentIds.includes(item.id)) {\n                newSelectedContent.push(item);\n            }\n        });\n    }\n\n    return newSelectedContent;\n}\n\nfunction makeHSPSelections(content, selectedContent) {\n    let newSelectedContent = [];\n    let exists = false;\n\n    selectedContent?.forEach(function(hsp) {\n        if (hsp.id !== content.id) {\n            if (!content.icon) {\n                content.icon = <DriftTooltip content='Historical profile' body={ <ClockIcon /> } />;\n            }\n\n            newSelectedContent.push(hsp);\n        } else {\n            exists = true;\n        }\n    });\n\n    if (!exists) {\n        content.icon = <DriftTooltip content='Historical profile' body={ <ClockIcon /> } />;\n        newSelectedContent.push(content);\n    }\n\n    return newSelectedContent;\n}\n\nexport default {\n    makeSelections,\n    makeHSPSelections\n};\n","import types from './types';\nimport helpers from './helpers';\n\nconst initialState = {\n    addSystemModalOpened: false,\n    activeTab: 0,\n    selectedSystemIds: [],\n    selectedSystemContent: [],\n    selectedBaselineContent: [],\n    selectedHSPContent: []\n};\n\nexport function addSystemModalReducer(state = initialState, action) {\n    let newSelectedContent;\n\n    switch (action.type) {\n        case `${types.OPEN_ADD_SYSTEM_MODAL}`:\n            return {\n                ...state,\n                addSystemModalOpened: !state.addSystemModalOpened\n            };\n        case `${types.SELECT_ACTIVE_TAB}`:\n            return {\n                ...state,\n                activeTab: action.payload\n            };\n        case `${types.SET_SELECTED_SYSTEMS_COMPARISON}`:\n            return {\n                ...state,\n                selectedSystemIds: action.payload\n            };\n        case `${types.HANDLE_SYSTEM_SELECTION}`:\n            newSelectedContent = helpers.makeSelections(action.payload.content, action.payload.isSelected, state.selectedSystemContent);\n\n            return {\n                ...state,\n                selectedSystemContent: newSelectedContent\n            };\n        case `${types.HANDLE_BASELINE_SELECTION}`:\n            newSelectedContent = helpers.makeSelections(action.payload.content, action.payload.isSelected, state.selectedBaselineContent);\n\n            return {\n                ...state,\n                selectedBaselineContent: newSelectedContent\n            };\n        case `${types.HANDLE_HSP_SELECTION}`:\n            newSelectedContent = helpers.makeHSPSelections(action.payload, state.selectedHSPContent);\n\n            return {\n                ...state,\n                selectedHSPContent: newSelectedContent\n            };\n\n        default:\n            return state;\n    }\n}\n","import types from './types';\n\nconst initialState = {\n    filterDropdownOpened: false\n};\n\nexport function filterDropdownReducer(filterDropdownOpened = initialState.filterDropdownOpened, action) {\n    switch (action.type) {\n        case `${types.OPEN_FILTER_DROPDOWN}`:\n            return !filterDropdownOpened;\n\n        default:\n            return filterDropdownOpened;\n    }\n}\n","import types from './types';\n\nconst initialState = {\n    createBaselineModalOpened: false,\n    baselineDataLoading: false,\n    baselineData: undefined,\n    createBaselineError: {}\n};\n\nexport function createBaselineModalReducer(state = initialState, action) {\n    let response = '';\n    let errorObject = {};\n\n    switch (action.type) {\n        case `${types.TOGGLE_CREATE_BASELINE_MODAL}`:\n            return {\n                ...state,\n                createBaselineModalOpened: !state.createBaselineModalOpened,\n                createBaselineError: {}\n            };\n        case `${types.CREATE_BASELINE}_PENDING`:\n            return {\n                ...state,\n                baselineDataLoading: true,\n                baselineData: {},\n                createBaselineError: {}\n            };\n        case `${types.CREATE_BASELINE}_FULFILLED`:\n            return {\n                ...state,\n                baselineDataLoading: false,\n                baselineData: action.payload\n            };\n        case `${types.CREATE_BASELINE}_REJECTED`:\n            response = action.payload.response;\n\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                baselineDataLoading: false,\n                createBaselineError: errorObject\n            };\n\n        default:\n            return state;\n    }\n}\n","import types from './types';\nimport editBaselineHelpers from '../EditBaseline/helpers';\nimport helpers from '../../../helpers';\nimport { FACT_VALUE } from '../../../../constants';\n\nconst initialState = {\n    baselineData: undefined,\n    baselineDataLoading: false,\n    editBaselineTableData: [],\n    editBaselineError: {},\n    inlineError: {},\n    expandedRows: [],\n    factModalOpened: false,\n    factName: '',\n    factValue: '',\n    factData: [],\n    isCategory: false,\n    isSubFact: false,\n    editBaselineEmptyState: false,\n    notificationsSwitchError: {}\n};\n\nexport function editBaselineReducer(state = initialState, action) {\n    let errorObject = {};\n    let newEditBaselineTableData = [];\n    let newExpandedRows = [];\n    let response;\n    let error;\n\n    switch (action.type) {\n        case `${types.FETCH_BASELINE_DATA}_PENDING`:\n            return {\n                ...state,\n                baselineDataLoading: true,\n                editBaselineError: {},\n                notificationsSwitchError: {}\n            };\n        case `${types.FETCH_BASELINE_DATA}_FULFILLED`:\n            newEditBaselineTableData = editBaselineHelpers.buildBaselineTableData(action.payload.baseline_facts);\n            return {\n                ...state,\n                baselineDataLoading: false,\n                baselineData: action.payload,\n                editBaselineTableData: newEditBaselineTableData,\n                editBaselineEmptyState: action.payload.baseline_facts.length === 0\n            };\n        case `${types.FETCH_BASELINE_DATA}_REJECTED`:\n            response = action.payload.response;\n\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                baselineDataLoading: false,\n                editBaselineError: errorObject,\n                editBaselineEmptyState: true\n            };\n        case `${types.CLEAR_EDIT_BASELINE_DATA}`:\n            return {\n                ...state,\n                baselineData: undefined,\n                editBaselineTableData: [],\n                expandedRows: []\n            };\n        case `${types.PATCH_BASELINE}_PENDING`:\n            return {\n                ...state,\n                inlineError: {},\n                baselineDataLoading: true\n            };\n        case `${types.PATCH_BASELINE}_FULFILLED`:\n            return {\n                ...state,\n                baselineDataLoading: false,\n                baselineData: action.payload.data[0]\n            };\n        case `${types.PATCH_BASELINE}_REJECTED`:\n            response = action.payload.response;\n\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                baselineDataLoading: false,\n                inlineError: errorObject\n            };\n        case `${types.DELETE_BASELINE_DATA}_PENDING`:\n            return {\n                ...state,\n                baselineDataLoading: true\n            };\n        case `${types.DELETE_BASELINE_DATA}_FULFILLED`:\n            return {\n                ...state,\n                baselineDataLoading: false,\n                baselineData: action.payload.data[0],\n                editBaselineEmptyState: action.payload.data[0].baseline_facts.length < 1\n            };\n        case `${types.DELETE_BASELINE_DATA}_REJECTED`:\n            response = action.payload.response;\n\n            if (response.data === '') {\n                errorObject = { detail: response.statusText, status: response.status };\n            } else if (response.data.message) {\n                errorObject = { detail: response.data.message, status: response.status };\n            } else {\n                errorObject = { detail: response.data.detail, status: response.status };\n            }\n\n            return {\n                ...state,\n                baselineDataLoading: false,\n                editBaselineError: errorObject\n            };\n        case `${types.EXPAND_PARENT_FACT}`:\n            newExpandedRows = editBaselineHelpers.toggleExpandedRow(state.expandedRows, action.payload);\n            return {\n                ...state,\n                expandedRows: newExpandedRows\n            };\n        case `${types.TOGGLE_FACT_MODAL}`:\n            return {\n                ...state,\n                editBaselineError: {},\n                factModalOpened: !state.factModalOpened,\n                inlineError: {}\n            };\n        case `${types.SET_FACT_DATA}`:\n            return {\n                ...state,\n                factName: action.payload.factName,\n                factValue: action.payload.factValue,\n                factData: action.payload.fact,\n                isCategory: action.payload.isCategory,\n                isSubFact: action.payload.isSubFact\n            };\n        case `${types.SELECT_FACT}`:\n            newEditBaselineTableData = [ ...state.editBaselineTableData ];\n\n            newEditBaselineTableData.map(row => {\n                let factId = row[0];\n                if (action.payload.ids.includes(factId)) {\n                    row.selected = action.payload.isSelected;\n                }\n\n                if (editBaselineHelpers.isCategory(row) && row[FACT_VALUE].length > 0) {\n                    editBaselineHelpers.baselineSubFacts(row).map(subFact => {\n                        let subFactId = subFact[0];\n                        if (action.payload.ids.includes(subFactId)) {\n                            subFact.selected = action.payload.isSelected;\n                        }\n                    });\n\n                    row.selected = editBaselineHelpers.isAllSelected(editBaselineHelpers.baselineSubFacts(row));\n                }\n            });\n\n            return {\n                ...state,\n                editBaselineTableData: newEditBaselineTableData.slice()\n            };\n        case `${types.CLEAR_ERROR_DATA}`:\n            return {\n                ...state,\n                editBaselineError: {},\n                inlineError: {},\n                baselineDataLoading: false\n            };\n        case `${types.EXPORT_BASELINE_DATA_TO_CSV}`:\n            helpers.downloadHelper(action.payload);\n            return {\n                ...state\n            };\n        case `${types.EXPORT_BASELINE_DATA_TO_JSON}`:\n            helpers.downloadHelper(action.payload);\n            return {\n                ...state\n            };\n        case `${types.TOGGLE_NOTIFICATIONS_SWITCH}_PENDING`:\n            return {\n                ...state,\n                notificationsSwitchError: {}\n            };\n        case `${types.TOGGLE_NOTIFICATIONS_SWITCH}_FULFILLED`:\n            return {\n                ...state\n            };\n        case `${types.TOGGLE_NOTIFICATIONS_SWITCH}_REJECTED`:\n            error = action.payload.error.response;\n\n            if (error.status !== 200) {\n                errorObject = {\n                    detail: `Notifications toggle failed for ${ action.payload.display_name }. ` + error.data.detail,\n                    status: error.status,\n                    id: action.payload.id\n                };\n            }\n\n            return {\n                ...state,\n                notificationsSwitchError: errorObject\n            };\n        default:\n            return state;\n    }\n}\n","import types from './types';\n\nconst initialState = {\n    selectedHSPIds: []\n};\n\nexport function historicProfilesReducer(state = initialState, action) {\n    let id;\n    let selected;\n\n    switch (action.type) {\n        case types.SELECT_HISTORIC_PROFILES:\n\n            return {\n                ...state,\n                selectedHSPIds: action.payload\n            };\n        case 'SELECT_ENTITY':\n            id = action.payload.id;\n            selected = action.payload.selected;\n\n            return {\n                ...state,\n                selectedHSPIds: id === 0 && !selected ? [] : state.selectedHSPIds\n            };\n        case 'CLEAR_COMPARISON':\n            return {\n                selectedHSPIds: []\n            };\n\n        default:\n            return {\n                ...state\n            };\n    }\n}\n","import types from './types';\n\nconst initialState = {\n    deleteNotificationsModalOpened: false,\n    systemsToDelete: [],\n    systemNotificationIds: undefined,\n    systemNotificationLoaded: false\n};\n\nexport function systemNotificationsReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.TOGGLE_DELETE_NOTIFICATION_MODAL:\n            return {\n                ...state,\n                deleteNotificationsModalOpened: !state.deleteNotificationsModalOpened\n            };\n        case types.SET_SYSTEMS_TO_DELETE:\n            return {\n                ...state,\n                systemsToDelete: action.payload\n            };\n        case `${types.DELETE_NOTIFICATIONS}_FULFILLED`:\n            return {\n                ...state,\n                systemsToDelete: []\n            };\n        case `${types.GET_NOTIFICATIONS}_PENDING`:\n            return {\n                ...state,\n                systemNotificationIds: undefined,\n                systemNotificationLoaded: false\n            };\n        case `${types.GET_NOTIFICATIONS}_FULFILLED`:\n            return {\n                ...state,\n                systemNotificationIds: action.payload,\n                systemNotificationLoaded: true\n            };\n        case `${types.ADD_NOTIFICATIONS}_FULFILLED`:\n            return {\n                ...state\n            };\n\n        default:\n            return {\n                ...state\n            };\n    }\n}\n","import promiseMiddleware from 'redux-promise-middleware';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\n\nimport { compareReducer, globalFilterReducer } from '../SmartComponents/modules/reducers';\nimport { addSystemModalReducer } from '../SmartComponents/AddSystemModal/redux/addSystemModalReducer';\nimport { baselinesTableRootReducer } from '../SmartComponents/BaselinesTable/redux';\nimport { filterDropdownReducer } from '../SmartComponents/DriftPage/FilterDropDown/redux/filterDropdownReducer';\nimport { createBaselineModalReducer } from '../SmartComponents/BaselinesPage/CreateBaselineModal/redux/reducers';\nimport { editBaselineReducer } from '../SmartComponents/BaselinesPage/EditBaselinePage/redux/reducers';\nimport { historicProfilesReducer } from '../SmartComponents/HistoricalProfilesPopover/redux/reducers';\nimport { systemNotificationsReducer } from '../SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/redux/reducer';\n\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nexport { default as reducers } from './reducers';\n\nlet registry;\nlet middlewareListener;\n\nexport const createMiddlewareListener = () => {\n    middlewareListener = new MiddlewareListener();\n    return middlewareListener;\n};\n\nexport function init (...middleware) {\n    createMiddlewareListener();\n\n    registry = getRegistry({}, [\n        promiseMiddleware(),\n        middlewareListener.getMiddleware(),\n        ...middleware.filter(item => typeof item !== 'undefined')\n    ]);\n\n    registry.register({\n        compareState: compareReducer,\n        addSystemModalState: addSystemModalReducer,\n        baselinesTableState: baselinesTableRootReducer,\n        filterDropdownOpened: filterDropdownReducer,\n        createBaselineModalState: createBaselineModalReducer,\n        editBaselineState: editBaselineReducer,\n        historicProfilesState: historicProfilesReducer,\n        systemNotificationsState: systemNotificationsReducer,\n        notifications,\n        globalFilterState: globalFilterReducer\n    });\n\n    return registry;\n}\n\nexport function getStore () {\n    return registry.getStore();\n}\n\nexport function register (...args) {\n    return registry.register(...args);\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Dropdown, KebabToggle, DropdownItem, DropdownPosition } from '@patternfly/react-core';\n\nexport class SystemKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            kebabOpened: false\n        };\n\n        this.toggleKebab = () => {\n            const { kebabOpened } = this.state;\n\n            this.setState({ kebabOpened: !kebabOpened });\n        };\n    }\n\n    buildDropdownItems = () => {\n        const { deleteNotifications, systemIds } = this.props;\n        let dropdownItems = [];\n\n        dropdownItems.push(\n            <DropdownItem\n                key=\"delete-baseline-notification\"\n                component=\"button\"\n                data-ouia-component-id='delete-baseline-notification'\n                onClick={ () => deleteNotifications(systemIds) }\n            >\n                Delete associated system\n            </DropdownItem>\n        );\n\n        return dropdownItems;\n    }\n\n    render() {\n        const { kebabOpened } = this.state;\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    style={{ float: 'right' }}\n                    toggle={ <KebabToggle\n                        data-ouia-component-id='system-notification-dropdown'\n                        data-ouia-component-type='PF4/DropdownToggle'\n                        onToggle={ () => this.toggleKebab() } /> }\n                    isOpen={ kebabOpened }\n                    dropdownItems={ this.buildDropdownItems() }\n                    isPlain\n                    ouiaId='system-notification-dropdown'\n                    position={ DropdownPosition.right }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nSystemKebab.propTypes = {\n    systemIds: PropTypes.array,\n    deleteNotifications: PropTypes.func\n};\n\nexport default SystemKebab;\n","/*eslint-disable camelcase*/\nimport React from 'react';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport HistoricalProfilesPopover from '../SmartComponents/HistoricalProfilesPopover/HistoricalProfilesPopover';\nimport SystemKebab from '../SmartComponents/BaselinesPage/EditBaselinePage/SystemNotification/SystemKebab/SystemKebab';\n\nimport types from '../SmartComponents/modules/types';\nimport helpers from '../SmartComponents/helpers';\n\nfunction selectedReducer(\n    INVENTORY_ACTIONS, baselineId, createBaselineModal, historicalProfiles, hasMultiSelect,\n    deselectHistoricalProfiles, isAddSystemNotifications, selectHistoricProfiles, systemNotificationIds, selectSystemsToAdd,\n    deleteNotifications, permissions\n) {\n    let newColumns;\n    let systemIds;\n\n    return applyReducerHash({\n        [INVENTORY_ACTIONS.LOAD_ENTITIES_FULFILLED]: (state, action) => {\n\n            for (let i = 0; i < action.payload.results.length; i += 1) {\n                if (state.selectedSystemIds.includes(action.payload.results[i].id)) {\n                    action.payload.results[i].selected = true;\n                }\n            }\n\n            let rows = mergeArraysByKey([ action.payload.results, state.rows ]);\n\n            if (historicalProfiles !== undefined) {\n                rows.forEach(function(row) {\n                    let badgeCount = 0;\n                    let systemInfo = {\n                        id: row.id,\n                        last_updated: row.updated\n                    };\n\n                    historicalProfiles.forEach(function(profile) {\n                        if (profile.system_id === row.id) {\n                            badgeCount += 1;\n                        }\n                    });\n\n                    row.historical_profiles = <div>\n                        <div className='hsp-icon-align'>\n                            <HistoricalProfilesPopover\n                                system={ systemInfo }\n                                hasBadge={ true }\n                                badgeCount={ badgeCount }\n                                hasMultiSelect={ hasMultiSelect }\n                                selectHistoricProfiles={ selectHistoricProfiles }\n                                systemName={ row.display_name }\n                            />\n                        </div>\n                    </div>;\n                });\n            }\n\n            if (isAddSystemNotifications) {\n                rows.forEach(function(row) {\n                    if (systemNotificationIds.includes(row.id)) {\n                        row.selected = true;\n                        row.disableSelection = true;\n                    }\n                });\n            }\n\n            if (baselineId && !isAddSystemNotifications && permissions.notificationsWrite) {\n                rows.forEach(function(row) {\n                    systemIds = [ row.id ];\n\n                    row.system_notification = <React.Fragment>\n                        <SystemKebab\n                            systemIds={ systemIds }\n                            deleteNotifications={ deleteNotifications }\n                        />\n                    </React.Fragment>;\n                });\n            }\n            /*eslint-enable camelcase*/\n\n            return {\n                ...state,\n                rows: state.selectedHSP && !hasMultiSelect\n                    ? helpers.buildSystemsTableWithSelectedHSP(rows, state.selectedHSP, deselectHistoricalProfiles)\n                    : rows,\n                selectedSystems: helpers.findSelectedOnPage(rows, state.selectedSystemIds)\n            };\n        },\n        [types.DRIFT_CLEAR_ALL_FILTERS]: (state) => ({\n            ...state,\n            activeFilters: undefined\n        }),\n        [types.UPDATE_COLUMNS]: (state, action) => {\n            let nameColumn = {\n                key: action.payload,\n                title: 'Name',\n                props: { width: 20 }\n            };\n            newColumns = [ ...state.columns || [] ];\n            newColumns.shift();\n            newColumns.unshift(nameColumn);\n\n            return {\n                ...state,\n                columns: newColumns\n            };\n        },\n        [types.SELECT_ENTITY]: (state, action) => {\n            let id = action.payload.id;\n            let selected = action.payload.selected;\n            let { selectedSystemIds } = state;\n            let newRows = [];\n            let selectedSystems = [];\n\n            if (id === 0) {\n                if (createBaselineModal) {\n                    newRows = state.rows.map(function (oneRow) {\n                        oneRow.selected = false;\n                        return oneRow;\n                    });\n\n                    selectedSystemIds = [];\n                } else {\n                    if (selected) {\n                        let ids = state.rows.map(function (item) {\n                            return item.id;\n                        });\n                        selectedSystemIds = [ ...new Set(selectedSystemIds.concat(ids)) ];\n                    } else {\n                        if (action.payload.bulk) {\n                            selectedSystemIds = [];\n                        } else {\n                            for (let i = 0; i < state.rows.length; i += 1) {\n                                selectedSystemIds = selectedSystemIds.filter(item => item !== state.rows[i].id);\n                            }\n                        }\n                    }\n                }\n            } else if (selected && id !== null) {\n                if (createBaselineModal) {\n                    newRows = state.rows.map(function (oneRow) {\n                        if (oneRow.id === id) {\n                            oneRow.selected = true;\n                        } else {\n                            oneRow.selected = false;\n                        }\n\n                        return oneRow;\n                    });\n\n                    selectedSystemIds.pop();\n                }\n\n                selectedSystemIds.push(id);\n            } else {\n                selectedSystemIds = selectedSystemIds.filter(item => item !== id);\n            }\n\n            if (isAddSystemNotifications) {\n                selectSystemsToAdd(selectedSystemIds);\n            }\n\n            if (newRows.length === 0) {\n                selectedSystems = helpers.findSelectedOnPage(state.rows, selectedSystemIds);\n            }\n\n            return {\n                ...state,\n                selectedSystemIds,\n                selectedSystems,\n                rows: newRows.length > 0 ? newRows : state.rows\n            };\n        },\n        [types.SET_SELECTED_SYSTEM_IDS]: (state, action) => {\n            return {\n                ...state,\n                rows: [],\n                loaded: false,\n                selectedSystemIds: action.payload.selectedSystemIds\n            };\n        },\n        [types.SELECT_SINGLE_HSP]: (state, action) => {\n            return {\n                ...state,\n                rows: action.payload\n                    ? helpers.buildSystemsTableWithSelectedHSP([ ...state.rows ], action.payload, deselectHistoricalProfiles)\n                    : state.rows.map((row) => ({\n                        ...row,\n                        // eslint-disable-next-line camelcase\n                        display_selected_hsp: undefined\n                    })),\n                selectedSystemIds: action.payload\n                    ? []\n                    : state.selectedSystemIds,\n                selectedHSP: action.payload\n            };\n        },\n        [types.DISABLE_SYSTEM_TABLE]: (state, action) => {\n            state.rows.forEach(function(row) {\n                row.disableSelection = action.payload;\n            });\n\n            return {\n                ...state\n            };\n        }\n    });\n}\n\nexport default selectedReducer;\n/*eslint-enable camelcase*/\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["asyncComponent","importComponent","AsyncComponent","props","state","component","this","setState","C","Component","DriftPage","BaselinesPage","EditBaselinePage","InsightsRoute","title","rest","document","Route","propTypes","PropTypes","Routes","Switch","exact","path","Redirect","to","PermissionContext","createContext","withRouter","history","useHistory","dispatch","useDispatch","useState","hasCompareReadPermissions","undefined","hasBaselinesReadPermissions","hasBaselinesWritePermissions","hasHSPReadPermissions","hasInventoryReadPermissions","hasNotificationsWritePermissions","hasNotificationsReadPermissions","arePermissionsLoaded","setPermissions","hasPermission","permission","permissionList","forEach","permissions","useEffect","insights","chrome","init","identifyApp","on","event","domEvent","type","push","navId","window","getUserPermissions","driftPermissions","fullPermissions","concat","hasCompareRead","permissionsList","map","some","hasBaselinesRead","hasBaselinesWrite","hasHSPRead","hasInventoryRead","hasNotificationsWrite","hasNotificationsRead","data","mapGlobalFilter","workloads","SID","tags","actions","Provider","value","compareRead","baselinesRead","baselinesWrite","hspRead","inventoryRead","notificationsWrite","notificationsRead","NotificationsPortal","childProps","toggleAddSystemModal","types","selectActiveTab","newActiveTab","payload","setSelectedSystemIds","selectedSystemIds","handleSystemSelection","content","isSelected","handleBaselineSelection","handleHSPSelection","OPEN_ADD_SYSTEM_MODAL","SELECT_ACTIVE_TAB","SET_SELECTED_SYSTEMS_COMPARISON","HANDLE_SYSTEM_SELECTION","HANDLE_BASELINE_SELECTION","HANDLE_HSP_SELECTION","TOGGLE_CREATE_BASELINE_MODAL","CREATE_BASELINE","DeleteFactModal","deleteFacts","bind","deleteBaselineData","fetchBaselineData","baselineData","editBaselineTableData","apiBody","editBaselineHelpers","toggleModal","id","deleteFact","categoryMessage","factMessage","modalOpened","Modal","className","ouiaId","variant","ModalVariant","isOpen","onClose","Button","key","onClick","connect","editBaselineState","baselineId","newBaselineBody","editBaselineActions","baselineUUID","FactKebab","editFact","addFact","toggleModalOpened","toggleFactModal","setFactData","factName","factValue","fact","isCategory","isSubFact","factToDelete","name","newAPIBody","onKebabToggle","dropdownItems","DropdownItem","Dropdown","position","DropdownPosition","style","float","toggle","KebabToggle","onToggle","isPlain","factData","makeAPIPatch","originalAPIBody","originalParentFact","patchBody","Array","isArray","length","baseline_facts","isSameFact","makePatchBody","jiff","diff","subfacts","factA","factB","values","baselineSubFacts","renderKebab","buildNewFactData","isParent","newFactData","subFacts","subFact","buildEditedFactData","originalFactName","originalValueName","originalSubFact","newSubFact","buildDeletedSubFact","newSubFacts","buildBaselineTableData","row","rows","subfact","makeDeleteFactsPatch","factsToDelete","unselectedFacts","index","selected","unselectedSubFacts","idx","patch","display_name","facts_patch","makeAddFactPatch","Object","prototype","hasOwnProperty","call","i","op","makeAddFactToCategoryPatch","oldFactData","newFactBody","makeEditFactPatch","editedFactBody","makeDeleteFactPatch","makeDeleteSubFactPatch","parentFact","toggleExpandedRow","expandedRows","newExpandedRows","includes","filter","slice","splice","isAllSelected","allSelected","falseCounter","findFactCount","totalFacts","findSelected","convertDataToCSV","lineDelimiter","result","rowData","subFactData","convertDataToJSON","json","sub_facts","TOGGLE_DELETE_NOTIFICATION_MODAL","SET_SYSTEMS_TO_DELETE","DELETE_NOTIFICATIONS","GET_NOTIFICATIONS","ADD_NOTIFICATIONS","expandRow","api","clearEditBaselineData","patchBaseline","selectFact","ids","clearErrorData","exportToCSV","baselineRowData","exportType","exportData","exportToJSON","toggleNotificationPending","toggleNotificationFulfilled","response","toggleNotificationRejected","error","EXPAND_PARENT_FACT","FETCH_BASELINE_DATA","CLEAR_EDIT_BASELINE_DATA","PATCH_BASELINE","DELETE_BASELINE_DATA","SET_FACT_DATA","TOGGLE_FACT_MODAL","SELECT_FACT","CLEAR_ERROR_DATA","EXPORT_BASELINE_DATA_TO_CSV","EXPORT_BASELINE_DATA_TO_JSON","TOGGLE_NOTIFICATIONS_SWITCH","setSelected","baselineRows","selectedBaselineIds","baseline","find","fetchBaselines","tableId","fetchParams","params","order_by","orderBy","order_how","orderHow","limit","perPage","offset","page","search","buildBaselinesTable","dateTime","dateTimeStamp","updated","moment","fromNow","mapped_system_count","notifications_enabled","setBaselineArray","baselines","baselineArray","convertListToCSV","columnDelimiter","detail","convertListToJSON","last_updated","associated_systems","JSON","stringify","revertBaselineFetch","selectBaseline","setSelectedBaselines","clearSelectedBaselines","clearBaselineData","deleteSelectedBaselines","deleteBaselinesAPIBody","initialState","loading","baselineTableData","IdToDelete","emptyState","baselineError","totalBaselines","tableReducer","errorObject","action","selectedBaselines","newBaselineTableData","baselinesReducerHelpers","meta","total_available","count","status","statusText","message","union","pop","item","helpers","baselinesTableRootReducer","combineReducers","checkboxTable","baselinesTableReducer","radioTable","comparisonTable","OPEN_FILTER_DROPDOWN","DriftTooltip","body","Tooltip","EmptyStateDisplay","appAction","button","color","icon","isSmall","text","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","size","EmptyStateBody","line","HistoricalProfilesCheckbox","findChecked","checked","profile","selectedHSPIds","entities","updateBadgeCount","captured_date","handleChange","onSelect","Checkbox","label","format","isChecked","onChange","selectHistoricProfiles","selectSystem","HistoricalProfilesRadio","selectedHSP","onSingleSelect","prevProps","Radio","HistoricalProfilesPopover","fetchCompare","systemIds","referenceId","createDropdownArray","hasMultiSelect","historicalData","badgeCountFunc","onSelectFunc","onSingleSelectFunc","profiles","ExclamationCircleIcon","retryFetch","UndoIcon","badgeCount","hsp","renderBadge","Badge","isVisible","dropDownArray","renderLoadingRows","fetchData","system","newSelectedHSPIds","selectSingleHSP","systemName","system_id","fetchedData","system_name","shift","Skeleton","SkeletonSize","hasBadge","hasCompareButton","Popover","shouldClose","headerContent","bodyContent","maxHeight","overflowY","footerContent","HistoryIcon","fetchHistoricalData","dropdownDirection","historicProfilesState","systemsTableActions","addSystemModalActions","SELECT_HISTORIC_PROFILES","updateColumns","clearAllFilters","disableSystemTable","isDisabled","findSelectedOnPage","selectedSystems","ServerIcon","findCheckedValue","total","paginateData","selectedPage","itemsPerPage","paginatedData","Math","ceil","buildSystemsTableWithSelectedHSP","deselectHistoricalProfiles","display_selected_hsp","CloseIcon","downloadHelper","filename","file","baselinesTableHelpers","Date","toISOString","downloadFile","baselineIds","systemHSPIds","revertCompareData","clearComparison","clearComparisonFilters","toggleFactSort","currentSort","ASC","DESC","addStateFilter","filterData","toggleStateSort","newSort","filterByFact","handleFactFilter","clearAllFactFilters","updatePagination","pagination","updateReferenceId","setGlobalFilterTags","setGlobalFilterWorkloads","setGlobalFilterSIDs","SIDs","resetComparisonFilters","SELECT_ENTITY","FETCH_COMPARE","SET_SELECTED_SYSTEM_IDS","TOGGLE_FACT_SORT","ADD_STATE_FILTER","TOGGLE_STATE_SORT","FILTER_BY_FACT","HANDLE_FACT_FILTER","CLEAR_ALL_FACT_FILTERS","UPDATE_DRIFT_PAGINATION","CLEAR_COMPARISON","CLEAR_COMPARISON_FILTERS","EXPORT_TO_CSV","EXPORT_TO_JSON","EXPAND_ROW","REVERT_COMPARE_DATA","TOGGLE_ACTIVE_SORT","UPDATE_REFERENCE_ID","SELECT_SINGLE_HSP","UPDATE_COLUMNS","SET_GLOBAL_FILTER_TAGS","SET_GLOBAL_FILTER_WORKLOADS","SET_GLOBAL_FILTER_SIDS","DRIFT_CLEAR_ALL_FILTERS","DISABLE_SYSTEM_TABLE","RESET_COMPARISON_FILTERS","pathname","release","pathName","split","post","axios","DRIFT_API_ROOT","request","getBaselines","getParams","BASELINE_API_ROOT","getBaseline","system_ids","postSystemNotifications","postBaseline","deleteBaselines","HISTORICAL_PROFILES_API_ROOT","getCompare","historicalSystemProfileIds","baseline_ids","historical_system_profile_ids","reference_id","getBaselineList","getBaselineData","patchBaselineData","deleteBaselinesData","postNewBaseline","uuid","systemId","getHistoricalData","getBaselineNotification","getNotificationSystems","addSystemNotification","systems","deleteSystemNotifications","FACT_ID","FACT_NAME","FACT_VALUE","COLUMN_DELIMITER","LINE_DELIMITER","getStateSelected","stateFilters","stateFilter","getState","isStateSelected","setTooltip","comparisons","multivalues","tooltip","display","filterComparisons","factFilter","activeFactFilters","filteredComparisons","filteredMultivalueItems","lowerCaseFactName","toLowerCase","filterMultiFacts","filterFact","multivalueItems","isFiltered","sortFacts","filteredFacts","factSort","stateSort","sort","a","b","addRow","replace","convertFactsToCSV","referenceIndex","systemNames","mappedDates","systemUpdates","date","join","convertFactsToJSON","reference","factInfo","factsPerPage","paginatedFacts","lowerCaseFactFilter","lowerCaseActiveFilters","filteredSubfacts","newFilteredFacts","filteredValues","driftData","updatedStateFilter","newStateFilters","indexOf","fullCompareData","filteredCompareData","sortedFilteredFacts","historicalProfiles","previousStateSystems","compareReducer","sortedFacts","newFactFilter","updatedStateFilters","newActiveFactFilters","reducerHelpers","facts","historical_system_profiles","globalFilterReducer","applyReducerHash","tagsFilter","workloadsFilter","sidsFilter","selectedContent","exists","newSelectedContent","selectedContentIds","selectedItem","ClockIcon","addSystemModalOpened","activeTab","selectedSystemContent","selectedBaselineContent","selectedHSPContent","addSystemModalReducer","filterDropdownReducer","filterDropdownOpened","createBaselineModalOpened","baselineDataLoading","createBaselineError","createBaselineModalReducer","editBaselineError","inlineError","factModalOpened","editBaselineEmptyState","notificationsSwitchError","editBaselineReducer","newEditBaselineTableData","factId","subFactId","historicProfilesReducer","deleteNotificationsModalOpened","systemsToDelete","systemNotificationIds","systemNotificationLoaded","systemNotificationsReducer","registry","middlewareListener","createMiddlewareListener","MiddlewareListener","middleware","getRegistry","promiseMiddleware","getMiddleware","register","compareState","addSystemModalState","baselinesTableState","createBaselineModalState","systemNotificationsState","notifications","globalFilterState","addNewListener","actionType","callback","addNew","SystemKebab","buildDropdownItems","deleteNotifications","kebabOpened","toggleKebab","INVENTORY_ACTIONS","createBaselineModal","isAddSystemNotifications","selectSystemsToAdd","newColumns","LOAD_ENTITIES_FULFILLED","results","mergeArraysByKey","systemInfo","historical_profiles","disableSelection","system_notification","activeFilters","nameColumn","width","columns","unshift","newRows","oneRow","Set","bulk","loaded","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","exports"],"sourceRoot":""}