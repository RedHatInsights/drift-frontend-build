{"version":3,"sources":["webpack:///./src/SmartComponents/BaselinesPage/redux/actions.js","webpack:///./src/SmartComponents/BaselinesPage/CreateBaseline/CreateBaseline.js","webpack:///./src/SmartComponents/BaselinesPage/EditBaseline/EditBaseline.js","webpack:///./src/SmartComponents/BaselinesPage/BaselinesPage.js"],"names":["actions","toggleCreateBaseline","type","types","CREATE_NEW_BASELINE","CreateBaseline_CreateBaseline","CreateBaseline","props","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","react_default","a","createElement","Button","variant","onClick","react","propTypes","prop_types_default","func","BaselinesPage_CreateBaseline_CreateBaseline","Object","es","dispatch","EditBaseline_EditBaseline","EditBaseline","_this","finishBaselineEdit","bind","assertThisInitialized_default","renderRows","renderLoadingRows","renderTable","_this$props","clearBaselineData","creatingNewBaseline","baselineData","rows","baseline_facts","forEach","fact","row","push","name","value","rowData","i","frontend_components","size","md","table","columns","loading","Table","cells","Header","Body","baselineName","_this$props2","display_name","Fragment","className","isBlock","add_circle_o_icon","style","float","bool","object","BaselinesPage_EditBaseline_EditBaseline","state","baselinesPageState","baselinesTableState","redux","BaselinesPage_BaselinesPage","BaselinesPage","window","insights","chrome","auth","getUser","fetchBaselines","title","Card","CardBody","Toolbar","ToolbarGroup","ToolbarItem","BaselinesTable","obj","__webpack_exports__"],"mappings":"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","file":"js/3-c529d4522b7db66bd3fa.js","sourcesContent":["import types from './types';\n\nfunction toggleCreateBaseline() {\n    return {\n        type: types.CREATE_NEW_BASELINE\n    };\n}\n\nexport default {\n    toggleCreateBaseline\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\n\nimport { baselinesPageActions } from '../redux';\n\nclass CreateBaseline extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { toggleCreateBaseline } = this.props;\n\n        return (\n            <Button\n                variant='primary'\n                onClick={ toggleCreateBaseline }>\n                Create Baseline\n            </Button>\n        );\n    }\n}\n\nCreateBaseline.propTypes = {\n    toggleCreateBaseline: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleCreateBaseline: (() => dispatch(baselinesPageActions.toggleCreateBaseline()))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(CreateBaseline);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport { AddCircleOIcon } from '@patternfly/react-icons';\n\nimport { baselinesPageActions } from '../redux';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\n\nclass EditBaseline extends Component {\n    constructor(props) {\n        super(props);\n        this.finishBaselineEdit = this.finishBaselineEdit.bind(this);\n        this.renderRows = this.renderRows.bind(this);\n        this.renderLoadingRows = this.renderLoadingRows.bind(this);\n        this.renderTable = this.renderTable.bind(this);\n    }\n\n    finishBaselineEdit() {\n        const { clearBaselineData, toggleCreateBaseline, creatingNewBaseline } = this.props;\n\n        clearBaselineData();\n\n        if (creatingNewBaseline) {\n            toggleCreateBaseline();\n        }\n    }\n\n    renderRows() {\n        const { baselineData } = this.props;\n        let rows = [];\n\n        if (!baselineData) {\n            rows = [];\n        } else {\n            baselineData.baseline_facts.forEach(function(fact) {\n                let row = [];\n                row.push(fact.name);\n                row.push(fact.value);\n                rows.push(row);\n            });\n        }\n\n        return rows;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n        let rowData = [];\n\n        for (let i = 0; i < 2; i += 1) {\n            rowData.push(<Skeleton size={ SkeletonSize.md } />);\n        }\n\n        for (let i = 0; i < 5; i += 1) {\n            rows.push(rowData);\n        }\n\n        return rows;\n    }\n\n    renderTable() {\n        const { loading } = this.props;\n        let columns = [ 'Fact', 'Value' ];\n        let table;\n\n        if (loading === false) {\n            let rows = this.renderRows();\n\n            table = <Table\n                cells={ columns }\n                rows={ rows }\n            >\n                <TableHeader />\n                <TableBody />\n            </Table>;\n        } else {\n            let rows = this.renderLoadingRows();\n\n            table = <Table\n                cells={ columns }\n                rows={ rows }\n            >\n                <TableHeader />\n                <TableBody />\n            </Table>;\n        }\n\n        return table;\n    }\n\n    render() {\n        const { loading, baselineData } = this.props;\n        let baselineName;\n\n        if (baselineData) {\n            baselineName = baselineData.display_name;\n        } else {\n            baselineName = 'Create baseline name';\n        }\n\n        return (\n            <React.Fragment>\n                { baselineName }\n                { this.renderTable() }\n                { !loading ?\n                    <div>\n                        <Button\n                            className=\"button-margin\"\n                            isBlock\n                        >\n                            <AddCircleOIcon/>\n                            Add fact\n                        </Button>\n                        <Button\n                            className=\"button-margin\"\n                            style={ { float: 'right' } }\n                            variant='primary'\n                            onClick={ this.finishBaselineEdit }>\n                            Finish\n                        </Button>\n                    </div> : null\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nEditBaseline.propTypes = {\n    toggleCreateBaseline: PropTypes.func,\n    clearBaselineData: PropTypes.func,\n    creatingNewBaseline: PropTypes.bool,\n    baselineData: PropTypes.object,\n    loading: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n    return {\n        creatingNewBaseline: state.baselinesPageState.creatingNewBaseline,\n        baselineData: state.baselinesTableState.baselineData,\n        loading: state.baselinesTableState.loading\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleCreateBaseline: () => dispatch(baselinesPageActions.toggleCreateBaseline()),\n        clearBaselineData: () => dispatch(baselinesTableActions.clearBaselineData())\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditBaseline);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\n\nimport BaselinesTable from '../BaselinesTable/BaselinesTable';\nimport CreateBaseline from './CreateBaseline/CreateBaseline';\nimport EditBaseline from './EditBaseline/EditBaseline';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nclass BaselinesPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    render() {\n        const { fetchBaselines, creatingNewBaseline, baselineData } = this.props;\n\n        fetchBaselines();\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='Baselines'/>\n                </PageHeader>\n                <Main>\n                    <Card className='pf-t-light pf-m-opaque-100'>\n                        { creatingNewBaseline || baselineData ?\n                            <CardBody>\n                                <div>\n                                    <EditBaseline />\n                                </div>\n                            </CardBody> :\n                            <CardBody>\n                                <Toolbar className=\"drift-toolbar\">\n                                    <ToolbarGroup>\n                                        <ToolbarItem>\n                                            <CreateBaseline />\n                                        </ToolbarItem>\n                                    </ToolbarGroup>\n                                </Toolbar>\n                                <div>\n                                    <BaselinesTable />\n                                </div>\n                            </CardBody>\n                        }\n                    </Card>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nBaselinesPage.propTypes = {\n    fetchBaselines: PropTypes.func,\n    creatingNewBaseline: PropTypes.bool,\n    baselineData: PropTypes.obj\n};\n\nfunction mapStateToProps(state) {\n    return {\n        creatingNewBaseline: state.baselinesPageState.creatingNewBaseline,\n        baselineData: state.baselinesTableState.baselineData\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchBaselines: () => dispatch(baselinesTableActions.fetchBaselines())\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BaselinesPage);\n"],"sourceRoot":""}