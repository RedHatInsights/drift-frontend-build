{"version":3,"sources":["webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./src/Utilities/SetHistory.js","webpack:///./src/SmartComponents/AddSystemModal/AddSystemModal.js","webpack:///./src/SmartComponents/StateIcon/StateIcon.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/ReferenceSelector/ReferenceSelector.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/ComparisonHeader/ComparisonHeader.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/DriftTable.js","webpack:///./src/SmartComponents/DriftPage/AddSystemButton/AddSystemButton.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/FilterDropDown.js","webpack:///./src/SmartComponents/DriftPage/SearchBar/SearchBar.js","webpack:///./src/SmartComponents/DriftPage/DriftFilterChips/DriftFilterChips.js","webpack:///./src/SmartComponents/DriftPage/DriftToolbar/DriftToolbar.js","webpack:///./src/SmartComponents/DriftPage/DriftPage.js"],"names":["strictUriEncode","objectAssign","encode","value","opts","strict","encodeURIComponent","exports","extract","str","split","parse","formatter","result","arrayFormat","key","accumulator","exec","replace","undefined","concat","parserForArrayFormat","ret","Object","create","trim","forEach","param","parts","shift","val","length","join","decodeURIComponent","keys","sort","reduce","Boolean","Array","isArray","keysSorter","input","a","b","Number","map","stringify","obj","index","encoderForArrayFormat","slice","val2","push","filter","x","module","c","charCodeAt","toString","toUpperCase","setHistory","history","systemIds","baselineIds","hspIds","referenceId","search","queryString","system_ids","baseline_ids","hsp_ids","reference_id","AddSystemModal","props","onSelect","event","isSelected","rowId","baselineTableData","selectBaseline","item","onBulkSelect","ids","baseline","confirmModal","bind","cancelSelection","changeActiveTab","state","columns","title","transforms","sortable","cellWidth","window","insights","chrome","auth","getUser","this","entities","selectedBaselineIds","toggleModal","selectedHSPIds","selectedSystemIds","systems","system","id","tabIndex","selectActiveTab","activeTab","addSystemModalOpened","hasBaselinesReadPermissions","hasBaselinesWritePermissions","hasInventoryReadPermissions","historicalProfiles","loading","totalBaselines","Fragment","Modal","width","isOpen","onClose","actions","Button","variant","onClick","isDisabled","Tabs","activeKey","Tab","eventKey","SystemsTable","hasHistoricalDropdown","hasMultiSelect","BaselinesTable","tableId","tableData","hasReadPermissions","hasWritePermissions","Component","propTypes","showModal","PropTypes","bool","number","func","object","array","baselines","string","connect","addSystemModalState","compareState","baselinesTableState","checkboxTable","historicProfilesState","dispatch","addSystemModalActions","toggleAddSystemModal","newActiveTab","baselinesTableActions","StateIcon","factState","color","height","icon","ReferenceSelector","isReference","updateReferenceId","className","ComparisonHeader","formatDate","dateString","moment","utc","format","ASC","DESC","sortType","toggleFactSort","toggleStateSort","fetchCompare","masterList","removeSystem","row","typeIcon","type","header-id","display_name","system_profile_exists","Tooltip","position","content","last_updated","updated","HistoricalProfilesDropdown","dropdownDirection","DropdownDirection","down","hasCompareButton","factSort","stateSort","toggleSort","renderSortButton","renderSystemHeaders","renderHeaderRow","DriftTable","shiftReferenceToFront","systemToMove","findIndex","splice","unshift","HSPIds","findHSPReference","newReferenceId","emptyStateMessage","setSystemIds","setBaselineIds","setHSPIds","setReferenceId","fullHistoricalSystemList","historicalGroups","hsp","hasOwnProperty","system_id","hsps","find","indexOf","entries","location","setSelectedBaselines","selectHistoricProfiles","isFirstReference","setIsFirstReference","profile","reference","clearComparison","facts","rows","fact","renderRow","rowData","i","size","SkeletonSize","md","sys","comparisons","expandedRows","includes","name","renderExpandableRowButton","comparison","renderRowChild","findSystem","factName","expandRow","compareData","renderLoadingRows","renderRows","emptyState","filteredCompareData","formatEntities","renderTable","fullCompareData","error","withRouter","compareActions","historicProfileIds","historicProfilesActions","AddSystemButton","isTable","toggleFilterDropDown","types","OPEN_FILTER_DROPDOWN","FilterDropDown","onToggle","createDropdownItem","toggleDropDown","stateFilter","DropdownItem","Checkbox","display","label","isChecked","selected","onChange","addStateFilter","stateFilters","dropdownItems","dropdownItem","selectedViewsArray","selectedViews","createDropdownArray","createSelectedViewsString","Dropdown","toggle","DropdownToggle","filterDropdownOpened","filterDropdownActions","SearchBar","updateFactFilter","setState","setFactFilter","changeFactFilter","factFilter","prevProps","TextInput","placeholder","aria-label","filterByFact","DriftFilterChips","setStateChips","stateChips","removeChip","chip","checkChips","chipGroup","setIsEmpty","isEmpty","group","chips","category","newChipGroup","newStateChips","newFactChips","filteredChips","chipKeyCount","ChipGroup","categoryName","Chip","DriftToolbar","dropdownOpen","clearFilters","clearComparisonFilters","clearSelectedBaselines","actionKebabItems","component","exportToCSV","page","perPage","totalFacts","updatePagination","Toolbar","ToolbarContent","ToolbarGroup","ToolbarItem","ExportCSVButton","ActionKebab","align","default","total","isCompact","widgetId","PaginationVariant","top","DriftPage","revertCompareData","previousStateSystems","renderEmptyState","status","EmptyStateDisplay","ExclamationCircleIcon","text","detail","button","PlusCircleIcon","Consumer","permissions","compareRead","LockIcon","ErrorAlert","Card","CardBody","baselinesRead","baselinesWrite","inventoryRead","bottom","pagination"],"mappings":"0FACA,IAAIA,EAAkB,EAAQ,KAC1BC,EAAe,EAAQ,KA0F3B,SAASC,EAAOC,EAAOC,GACtB,OAAIA,EAAKF,OACDE,EAAKC,OAASL,EAAgBG,GAASG,mBAAmBH,GAG3DA,EAiBRI,EAAQC,QAAU,SAAUC,GAC3B,OAAOA,EAAIC,MAAM,KAAK,IAAM,IAG7BH,EAAQI,MAAQ,SAAUF,EAAKL,GAG9B,IAAIQ,EA/EL,SAA8BR,GAC7B,IAAIS,EAEJ,OAAQT,EAAKU,aACZ,IAAK,QACJ,OAAO,SAAUC,EAAKZ,EAAOa,GAC5BH,EAAS,aAAaI,KAAKF,GAE3BA,EAAMA,EAAIG,QAAQ,WAAY,IAEzBL,QAKoBM,IAArBH,EAAYD,KACfC,EAAYD,GAAO,IAGpBC,EAAYD,GAAKF,EAAO,IAAMV,GAR7Ba,EAAYD,GAAOZ,GAWtB,IAAK,UACJ,OAAO,SAAUY,EAAKZ,EAAOa,GAC5BH,EAAS,UAAUI,KAAKF,GACxBA,EAAMA,EAAIG,QAAQ,QAAS,IAEtBL,OAG2BM,IAArBH,EAAYD,GAKvBC,EAAYD,GAAO,GAAGK,OAAOJ,EAAYD,GAAMZ,GAJ9Ca,EAAYD,GAAO,CAACZ,GAHpBa,EAAYD,GAAOZ,GAUtB,QACC,OAAO,SAAUY,EAAKZ,EAAOa,QACHG,IAArBH,EAAYD,GAKhBC,EAAYD,GAAO,GAAGK,OAAOJ,EAAYD,GAAMZ,GAJ9Ca,EAAYD,GAAOZ,IAsCPkB,CAFhBjB,EAAOH,EAAa,CAACa,YAAa,QAASV,IAMvCkB,EAAMC,OAAOC,OAAO,MAExB,MAAmB,iBAARf,EACHa,GAGRb,EAAMA,EAAIgB,OAAOP,QAAQ,YAAa,MAMtCT,EAAIC,MAAM,KAAKgB,SAAQ,SAAUC,GAChC,IAAIC,EAAQD,EAAMT,QAAQ,MAAO,KAAKR,MAAM,KAGxCK,EAAMa,EAAMC,QACZC,EAAMF,EAAMG,OAAS,EAAIH,EAAMI,KAAK,UAAOb,EAI/CW,OAAcX,IAARW,EAAoB,KAAOG,mBAAmBH,GAEpDlB,EAAUqB,mBAAmBlB,GAAMe,EAAKR,MAGlCC,OAAOW,KAAKZ,GAAKa,OAAOC,QAAO,SAAUvB,EAAQE,GACvD,IAAIe,EAAMR,EAAIP,GAQd,OAPIsB,QAAQP,IAAuB,iBAARA,IAAqBQ,MAAMC,QAAQT,GAE7DjB,EAAOE,GAvDV,SAASyB,EAAWC,GACnB,OAAIH,MAAMC,QAAQE,GACVA,EAAMN,OACc,iBAAVM,EACVD,EAAWjB,OAAOW,KAAKO,IAAQN,MAAK,SAAUO,EAAGC,GACvD,OAAOC,OAAOF,GAAKE,OAAOD,MACxBE,KAAI,SAAU9B,GAChB,OAAO0B,EAAM1B,MAIR0B,EA4CSD,CAAWV,GAEzBjB,EAAOE,GAAOe,EAGRjB,IACLU,OAAOC,OAAO,QA3BTF,GA8BTf,EAAQuC,UAAY,SAAUC,EAAK3C,GAClC,IAQIQ,EAzKL,SAA+BR,GAC9B,OAAQA,EAAKU,aACZ,IAAK,QACJ,OAAO,SAAUC,EAAKZ,EAAO6C,GAC5B,OAAiB,OAAV7C,EAAiB,CACvBD,EAAOa,EAAKX,GACZ,IACA4C,EACA,KACChB,KAAK,IAAM,CACZ9B,EAAOa,EAAKX,GACZ,IACAF,EAAO8C,EAAO5C,GACd,KACAF,EAAOC,EAAOC,IACb4B,KAAK,KAGT,IAAK,UACJ,OAAO,SAAUjB,EAAKZ,GACrB,OAAiB,OAAVA,EAAiBD,EAAOa,EAAKX,GAAQ,CAC3CF,EAAOa,EAAKX,GACZ,MACAF,EAAOC,EAAOC,IACb4B,KAAK,KAGT,QACC,OAAO,SAAUjB,EAAKZ,GACrB,OAAiB,OAAVA,EAAiBD,EAAOa,EAAKX,GAAQ,CAC3CF,EAAOa,EAAKX,GACZ,IACAF,EAAOC,EAAOC,IACb4B,KAAK,MAwIMiB,CAFhB7C,EAAOH,EANQ,CACdC,QAAQ,EACRG,QAAQ,EACRS,YAAa,QAGgBV,IAI9B,OAAO2C,EAAMxB,OAAOW,KAAKa,GAAKZ,OAAOU,KAAI,SAAU9B,GAClD,IAAIe,EAAMiB,EAAIhC,GAEd,QAAYI,IAARW,EACH,MAAO,GAGR,GAAY,OAARA,EACH,OAAO5B,EAAOa,EAAKX,GAGpB,GAAIkC,MAAMC,QAAQT,GAAM,CACvB,IAAIjB,EAAS,GAUb,OARAiB,EAAIoB,QAAQxB,SAAQ,SAAUyB,QAChBhC,IAATgC,GAIJtC,EAAOuC,KAAKxC,EAAUG,EAAKoC,EAAMtC,EAAOkB,YAGlClB,EAAOmB,KAAK,KAGpB,OAAO9B,EAAOa,EAAKX,GAAQ,IAAMF,EAAO4B,EAAK1B,MAC3CiD,QAAO,SAAUC,GACnB,OAAOA,EAAEvB,OAAS,KAChBC,KAAK,KAAO,K,iCC1MhBuB,EAAOhD,QAAU,SAAUE,GAC1B,OAAOH,mBAAmBG,GAAKS,QAAQ,YAAY,SAAUsC,GAC5D,MAAO,IAAMA,EAAEC,WAAW,GAAGC,SAAS,IAAIC,mB,qYCDrC,SAASC,EAAWC,GAAqE,IAA5DC,EAA4D,uDAAhD,GAAIC,EAA4C,uDAA9B,GAAIC,EAA0B,uDAAjB,GAAIC,EAAa,uCAE5FJ,EAAQT,KAAK,CACTc,OAAQ,IAAMC,IAAYrB,UAAU,CAChCsB,WAAYN,EACZO,aAAcN,EACdO,QAASN,EACTO,aAAcN,M,skBCEnB,IAAMO,GAAb,mCACI,WAAYC,GAAO,0BACf,cAAMA,IAiBVC,SAAW,SAACC,EAAOC,EAAYC,GAAU,MACS,EAAKJ,MAA3CK,EAD6B,EAC7BA,mBAWRC,EAZqC,EACVA,iBAGZ,IAAXF,EACMC,EAAkBjC,KAAI,SAASmC,GACjC,OAAOA,EAAK,MAGV,CAAEF,EAAkBD,GAAO,IAGjBD,EAAY,aA9BjB,EA+DnBK,aAAe,SAACL,GAAe,MACmB,EAAKH,MAA3CK,EADmB,EACnBA,kBAAmBC,EADA,EACAA,eACvBG,EAAM,GAEVJ,EAAkBpD,SAAQ,SAASyD,GAC/BD,EAAI9B,KAAK+B,EAAS,OAGtBJ,EAAeG,EAAKN,EAAY,aArEhC,EAAKQ,aAAe,EAAKA,aAAaC,KAAlB,QACpB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,QACvB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,QAEvB,EAAKG,MAAQ,CACTC,QAAS,CACL,CAAEC,MAAO,OAAQC,WAAY,CAAEC,MAC/B,CAAEF,MAAO,eAAgBC,WAAY,CAAEC,IAAUC,YAAU,QATpD,EADvB,4JAgBcC,OAAOC,SAASC,OAAOC,KAAKC,UAhB1C,6HAkCmB,MACuFC,KAAK1B,MAA/FW,EADG,EACHA,aAAcgB,EADX,EACWA,SAAUC,EADrB,EACqBA,oBAAqBC,EAD1C,EAC0CA,YAAaC,EADvD,EACuDA,eAAgBtC,EADvE,EACuEA,YAElFmB,EACIgB,EAASI,kBACTH,EACAE,EACAtC,GAEJqC,MA3CR,wCA+CQH,KAAK1B,MAAM6B,gBA/CnB,0CAmDQ,IAAIpB,EAAMiB,KAAK1B,MAAMgC,QAAQ5D,KAAI,SAAU6D,GACvC,OAAOA,EAAOC,MAGlB,OAAOzB,GAAY,KAvD3B,sCA0DoBP,EAAOiC,IAGnBC,EAF4BV,KAAK1B,MAAzBoC,iBAEQD,KA7DxB,+BA2Ea,MAGkBT,KAAK1B,MAFpBqC,EADH,EACGA,UAAWC,EADd,EACcA,qBAAsBjC,EADpC,EACoCA,kBAAmBkC,EADvD,EACuDA,4BAA6BC,EADpF,EACoFA,6BACrFC,EAFC,EAEDA,4BAA6BC,EAF5B,EAE4BA,mBAAoBC,EAFhD,EAEgDA,QAAShB,EAFzD,EAEyDA,SAAUC,EAFnE,EAEmEA,oBAAqBE,EAFxF,EAEwFA,eACzFc,EAHC,EAGDA,eACI5B,EAAYU,KAAKX,MAAjBC,QAER,OACI,kBAAC,IAAM6B,SAAP,KACI,kBAACC,EAAA,EAAD,CACIC,MAAQ,QACR9B,MAAM,oBACN+B,OAASV,EACTW,QAAUvB,KAAKb,gBACfqC,QAAU,CACN,kBAACC,EAAA,EAAD,CACI7G,IAAI,UACJ8G,QAAQ,UACRC,QAAU3B,KAAKf,aACf2C,YACM3B,GAAYA,EAASI,mBAA2D,IAAtCJ,EAASI,kBAAkBzE,SAAkBqE,IAC1D,IAA/BC,EAAoBtE,QACM,IAA1BwE,EAAexE,QAPvB,YAcJ,kBAACiG,EAAA,EAAD,CACIC,UAAYnB,EACZpC,SAAWyB,KAAKZ,iBAEhB,kBAAC2C,EAAA,EAAD,CACIC,SAAW,EACXzC,MAAM,UACNiB,GAAG,eAEH,kBAACyB,EAAA,EAAD,CACI5B,kBAAoBL,KAAKK,oBACzB6B,uBAAwB,EACxBlB,mBAAqBA,EACrBmB,gBAAiB,EACjBpB,4BAA8BA,EAC9Bd,SAAWA,KAGnB,kBAAC8B,EAAA,EAAD,CACIC,SAAW,EACXzC,MAAM,YACNiB,GAAG,iBAEH,kBAAC4B,GAAA,EAAD,CACIC,QAAQ,WACRF,gBAAiB,EACjB5D,SAAWyB,KAAKzB,SAChB+D,UAAY3D,EACZsC,QAAUA,EACV3B,QAAUA,EACVR,aAAekB,KAAKlB,aACpBoB,oBAAsBA,EACtBgB,eAAiBA,EACjBqB,mBAAqB1B,EACrB2B,oBAAsB1B,YAzItD,GAAoC2B,aAmJpCpE,GAAeqE,UAAY,CACvBC,UAAWC,IAAUC,KACrBjC,qBAAsBgC,IAAUC,KAChClC,UAAWiC,IAAUE,OACrB7D,aAAc2D,IAAUG,KACxB5D,gBAAiByD,IAAUG,KAC3B5C,YAAayC,IAAUG,KACvBrC,gBAAiBkC,IAAUG,KAC3B9C,SAAU2C,IAAUI,OACpB1C,QAASsC,IAAUK,MACnB/C,oBAAqB0C,IAAUK,MAC/BC,UAAWN,IAAUK,MACrB7C,eAAgBwC,IAAUK,MAC1BhC,QAAS2B,IAAUC,KACnBlE,kBAAmBiE,IAAUK,MAC7BrE,eAAgBgE,IAAUG,KAC1B/B,mBAAoB4B,IAAUK,MAC9BnF,YAAa8E,IAAUO,OACvBjC,eAAgB0B,IAAUE,OAC1B/B,4BAA6B6B,IAAUC,KACvChC,4BAA6B+B,IAAUC,KACvC/B,6BAA8B8B,IAAUC,MA2B7BO,0BAxBf,SAAyB/D,GACrB,MAAO,CACHuB,qBAAsBvB,EAAMgE,oBAAoBzC,qBAChDN,QAASjB,EAAMiE,aAAahD,QAC5BK,UAAWtB,EAAMgE,oBAAoB1C,UACrCV,SAAUZ,EAAMY,SAChBC,oBAAqBb,EAAMkE,oBAAoBC,cAActD,oBAC7DgD,UAAW7D,EAAMiE,aAAaJ,UAC9B9C,eAAgBf,EAAMoE,sBAAsBrD,eAC5Ca,QAAS5B,EAAMkE,oBAAoBC,cAAcvC,QACjDtC,kBAAmBU,EAAMkE,oBAAoBC,cAAc7E,kBAC3DqC,mBAAoB3B,EAAMiE,aAAatC,mBACvCE,eAAgB7B,EAAMkE,oBAAoBC,cAActC,mBAIhE,SAA4BwC,GACxB,MAAO,CACHvD,YAAa,kBAAMuD,EAASC,KAAsBC,yBAClDlD,gBAAiB,SAACmD,GAAD,OAAkBH,EAASC,KAAsBjD,gBAAgBmD,KAClFjF,eAAgB,SAAC4B,EAAI/B,EAAY4D,GAAjB,OAA6BqB,EAASI,IAAsBlF,eAAe4B,EAAI/B,EAAY4D,QAIpGe,CAA6C/E,I,icC1MtD0F,G,iCACF,WAAYzF,GAAO,+BACTA,G,2CAcN,MAR6B,SAAzB0B,KAAK1B,MAAM0F,UACC,kBAAC,KAAD,CAAiBC,MAAM,UAAUC,OAAO,OAAO7C,MAAM,SACjC,cAAzBrB,KAAK1B,MAAM0F,UACN,kBAAC,IAAD,CAAuBC,MAAM,UAAUC,OAAO,OAAO7C,MAAM,SAE3D,kBAAC,KAAD,CAAoB4C,MAAM,UAAUC,OAAO,OAAO7C,MAAM,W,+BAOxE,OACIrB,KAAKmE,W,GArBO1B,aA0BxBsB,GAAUrB,UAAY,CAClBsB,UAAWpB,IAAUO,QAGVY,U,0kBC9BTK,G,iCACF,WAAY9F,GAAO,0BACf,cAAMA,IAEDe,MAAQ,CACTgF,YAAa,EAAK/F,MAAM+F,aAJb,E,6CAQV,MAC6BrE,KAAK1B,MAA/BgG,EADH,EACGA,kBAAmB9D,EADtB,EACsBA,GAG3B,OAFwBR,KAAKX,MAArBgF,YAIE,kBAAC,KAAD,CACEE,UAAU,6BACV5C,QAAU,kBAAM2C,OAElB,kBAAC,KAAD,CACEC,UAAU,6BACV5C,QAAU,kBAAM2C,EAAkB9D,U,GArBtBiC,aA2BhC2B,GAAkB1B,UAAY,CAC1B2B,YAAazB,IAAUC,KACvByB,kBAAmB1B,IAAUG,KAC7BvC,GAAIoC,IAAUO,QAGHiB,U,6aCzBTI,G,iCACF,WAAYlG,GAAO,0BACf,cAAMA,IAGVmG,WAAa,SAACC,GACV,OAAOC,KAAOC,IAAIF,GAAYG,OAAO,2BALtB,E,qDAQF7I,GAab,OAVIA,IAAS8I,KACE,kBAAC,KAAD,CAAoBP,UAAU,gBAEpCvI,IAAS+I,KACH,kBAAC,KAAD,CAAsBR,UAAU,gBAGhC,kBAAC,KAAD,CAAgBA,UAAU,iB,iCAMlCS,EAAUhJ,GAAM,MACqBgE,KAAK1B,MAAzC2G,EADe,EACfA,eAAgBC,EADD,EACCA,gBAEP,SAAbF,EACAC,EAAejJ,GAEfkJ,EAAgBlJ,K,4CAIF,aAC4EgE,KAAK1B,MAA3F6G,EADU,EACVA,aAAcC,EADJ,EACIA,WAAYtH,EADhB,EACgBA,YAAauH,EAD7B,EAC6BA,aAAc1H,EAD3C,EAC2CA,UAAW2G,EADtD,EACsDA,kBAEpEgB,EAAM,GACNC,EAAW,GAqEf,OAnEAH,EAAW7J,SAAQ,SAAAsD,GACG,WAAdA,EAAK2G,KACLD,EAAW,kBAAC,KAAD,MACU,aAAd1G,EAAK2G,KACZD,EAAW,kBAAC,KAAD,MACU,8BAAd1G,EAAK2G,OACZD,EAAW,kBAAC,KAAD,OAGfD,EAAIrI,KACA,wBACIwI,YAAY5G,EAAK2B,GACjB5F,IAAMiE,EAAK2B,GACX+D,UACI1F,EAAK2B,KAAO1C,EACN,gCADN,uBAEsBe,EAAK2G,KAF3B,YAKJ,6BACI,uBAAG7D,QAAU,kBAAM0D,EAAaxG,IAAQ0F,UAAU,sBAC9C,kBAAC,KAAD,QAGR,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,qBACTgB,GAEN,yBAAKhB,UAAU,eAAgB1F,EAAK6G,cACpC,yBAAKnB,UAAU,gCACX,kBAAC,GAAD,CACID,kBAAoBA,EACpB9D,GAAK3B,EAAK2B,GACV6D,YAAexF,EAAK2B,KAAO1C,KAEE,IAA/Be,EAAK8G,sBACH,kBAACC,GAAA,EAAD,CACIC,SAAS,MACTC,QACI,wHAGJ,kBAAC,KAAD,CAAyB7B,MAAM,aACtB,GAEfpF,EAAKkH,aACD,EAAKtB,WAAW5F,EAAKkH,cACrB,EAAKtB,WAAW5F,EAAKmH,SAEX,WAAdnH,EAAK2G,MAAmC,8BAAd3G,EAAK2G,KAC3B,kBAACS,GAAA,EAAD,CACE1F,OAAS1B,EACTlB,UAAYA,EACZG,YAAcA,EACdqH,aAAeA,EACfe,kBAAoBC,KAAkBC,KACtCC,kBAAmB,EACnBlE,gBAAiB,IAEnB,YAQnBmD,I,wCAGO,aACkBtF,KAAK1B,MAA7BgI,EADM,EACNA,SAAUC,EADJ,EACIA,UAElB,OACI,wBAAIhC,UAAU,wBACV,wBACIA,UAAU,mDACV3J,IAAI,cACJ4F,GAAK8F,EACL3E,QAAU,kBAAM,EAAK6E,WAAW,OAAQF,KAExC,yBAAK/B,UAAU,eAAf,QAAoCvE,KAAKyG,iBAAiBH,KAE9D,wBACI/B,UAAU,oDACV3J,IAAI,eACJ4F,GAAK+F,GAAa,WAClB5E,QAAU,kBAAM,EAAK6E,WAAW,QAASD,KAEzB,KAAdA,EACI,yBAAKhC,UAAU,eAAf,SAAqCvE,KAAKyG,iBAAiBF,IAC3D,sCAAavG,KAAKyG,iBAAiBF,KAG3CvG,KAAK0G,yB,+BAMf,OACI,kBAAC,IAAMvF,SAAP,KACMnB,KAAK2G,uB,GA/IQlE,aAqJ/B+B,GAAiB9B,UAAY,CACzB4D,SAAU1D,IAAUO,OACpBgC,aAAcvC,IAAUG,KACxBqC,WAAYxC,IAAUK,MACtBnF,YAAa8E,IAAUO,OACvBkC,aAAczC,IAAUG,KACxBwD,UAAW3D,IAAUO,OACrBxF,UAAWiF,IAAUK,MACrBgC,eAAgBrC,IAAUG,KAC1BmC,gBAAiBtC,IAAUG,KAC3BuB,kBAAmB1B,IAAUG,MAGlByB,U,yaC7JR,IAAMoC,GAAb,qCACI,WAAYtI,GAAO,0BACf,cAAMA,IA2BVuI,sBAAwB,SAACzB,GACrB,IAAIvI,EACAiK,EASJ,OAPAjK,EAAQuI,EAAW2B,WAAU,SAAClI,GAC1B,OAAOA,EAAK2B,KAAO,EAAKlC,MAAMR,eAGlCgJ,EAAe1B,EAAW4B,OAAOnK,EAAO,GACxCuI,EAAW6B,QAAQH,EAAa,IAEzB1B,GAvCQ,EAgInBd,kBAAoB,SAAC9D,GACjB,EAAK2E,aAAa,EAAKxH,UAAW,EAAKC,YAAa,EAAKsJ,OAAQ1G,IAjIlD,EAoInB2G,iBAAmB,WAAM,IACbrJ,EAAgB,EAAKQ,MAArBR,YACJsJ,EAAiBtJ,EAQrB,OANA,EAAKoJ,OAAO3L,SAAQ,SAACiF,GACbA,IAAO1C,IACPsJ,OAAiBpM,MAIlBoM,GA3IP,EAAK/H,MAAQ,CACTgI,kBAAmB,CACf,wEACA,iDAIR,EAAKjC,WAAa,GAElB,EAAKkC,eACL,EAAKC,iBACL,EAAKC,YACL,EAAKC,iBACL,EAAKtC,aAAe,EAAKA,aAAajG,KAAlB,QACpB,EAAKmG,aAAe,EAAKA,aAAanG,KAAlB,QAjBL,EADvB,4JAsBcS,OAAOC,SAASC,OAAOC,KAAKC,UAtB1C,QAwBYC,KAAKrC,UAAU/B,OAAS,GAAKoE,KAAKpC,YAAYhC,OAAS,GAAKoE,KAAKkH,OAAOtL,OAAS,IACjFoE,KAAKmF,aAAanF,KAAKrC,UAAWqC,KAAKpC,YAAaoC,KAAKkH,OAAQlH,KAAK1B,MAAMR,aAzBxF,kIA2CmBwC,EAAS4C,EAAWlC,GAE/B,IAEIoE,EAFAsC,EAA2B,GAC3BC,EAAmB,GAGvB,GAAuB,IAAnBrH,EAAQ1E,QAAqC,IAArBsH,EAAUtH,QAA8C,IAA9BoF,EAAmBpF,OACrE,MAAO,GAGX0E,EAAUA,EAAQ5D,KAAI,SAAS6D,GAE3B,OADAA,EAAOiF,KAAO,SACPjF,KAEX2C,EAAYA,EAAUxG,KAAI,SAASsC,GAE/B,OADAA,EAASwG,KAAO,WACTxG,MAEXgC,EAAqBA,EAAmBtE,KAAI,SAASkL,GAEjD,OADAA,EAAIpC,KAAO,4BACJoC,MAGQrM,SAAQ,SAASqM,GAC5BD,EAAiBE,eAAeD,EAAIE,WACpCH,EAAiBC,EAAIE,WAAW7K,KAAK2K,GAErCD,EAAiBC,EAAIE,WAAa,CAAEF,MAI5CF,EAA2BpH,EAE3B,IAjCmD,mCAiCtCwH,EAjCsC,KAiC3BC,EAjC2B,KAkC3CxH,EAASD,EAAQ0H,MAAK,SAAAnJ,GAAI,OAAIiJ,IAAcjJ,EAAK2B,MACjD3D,OAAK,OAEM7B,IAAXuF,GACA1D,EAAQ6K,EAAyBO,QAAQ1H,GACzCmH,EAA2B,GAAH,WACjBA,EAAyB3K,MAAM,EAAGF,EAAQ,IADzB,IAEjBkL,GAFiB,IAGjBL,EAAyB3K,MAAMF,EAAQ,EAAG6K,EAAyB9L,WAG1E8L,EAA2BA,EAAyBzM,OAAO8M,IAZnE,MAAkC3M,OAAO8M,QAAQP,GAAjD,eAAoE,IAuBpE,OANAvC,EAAalC,EAAUjI,OAAOyM,GAE1B1H,KAAK1B,MAAMR,cACXsH,EAAapF,KAAK6G,sBAAsBzB,IAGrCA,IAnGf,qCAuGQpF,KAAKrC,UAAYK,IAAYxD,MAAMwF,KAAK1B,MAAM6J,SAASpK,QAAQE,WAC/D+B,KAAKrC,UAAYxB,MAAMC,QAAQ4D,KAAKrC,WAAaqC,KAAKrC,UAAY,CAAEqC,KAAKrC,WACzEqC,KAAKrC,UAAYqC,KAAKrC,UAAUT,QAAO,SAAA2B,GAAI,YAAa7D,IAAT6D,OAzGvD,uCA6GQmB,KAAKpC,YAAcI,IAAYxD,MAAMwF,KAAK1B,MAAM6J,SAASpK,QAAQG,aACjE8B,KAAKpC,YAAczB,MAAMC,QAAQ4D,KAAKpC,aAAeoC,KAAKpC,YAAc,CAAEoC,KAAKpC,aAC/EoC,KAAKpC,YAAcoC,KAAKpC,YAAYV,QAAO,SAAA2B,GAAI,YAAa7D,IAAT6D,KACnDmB,KAAK1B,MAAM8J,qBAAqBpI,KAAKpC,YAAa,cAhH1D,kCAmHgB,IACAyK,EAA2BrI,KAAK1B,MAAhC+J,uBAERrI,KAAKkH,OAASlJ,IAAYxD,MAAMwF,KAAK1B,MAAM6J,SAASpK,QAAQI,QAC5D6B,KAAKkH,OAAS/K,MAAMC,QAAQ4D,KAAKkH,QAAUlH,KAAKkH,OAAS,CAAElH,KAAKkH,QAChElH,KAAKkH,OAASlH,KAAKkH,OAAOhK,QAAO,SAAA2B,GAAI,YAAa7D,IAAT6D,KACzCwJ,EAAuBrI,KAAKkH,UAzHpC,uCA4HqB,MAC2BlH,KAAK1B,MAArC6J,EADK,EACLA,UACR7D,EAFa,EACKA,mBACAtG,IAAYxD,MAAM2N,EAASpK,QAAQK,gBA9H7D,sDAkJuBS,GAlJvB,wFAmJmHmB,KAAK1B,MAAxG0C,EAnJhB,EAmJgBA,mBAAoBsH,EAnJpC,EAmJoCA,iBAAkBxK,EAnJtD,EAmJsDA,YAAauK,EAnJnE,EAmJmEA,uBAAwBE,EAnJ3F,EAmJ2FA,oBAGjE,WAAd1J,EAAK2G,KAtJjB,wBAuJYxF,KAAKrC,UAAYqC,KAAKrC,UAAUT,QAAO,SAAAsD,GAAE,OAAIA,IAAO3B,EAAK2B,MAvJrE,SAwJmCR,KAAKmH,mBAxJxC,cAwJYC,EAxJZ,gBA0JgCpG,EAAmB9D,QAAO,SAACsL,GAC3C,OAAOA,EAAQV,YAAcjJ,EAAK2B,MACnC9D,KAAI,SAAA8L,GAAO,OAAIA,EAAQhI,MA5JtC,OA0JYR,KAAKkH,OA1JjB,+BA8JiC,aAAdrI,EAAK2G,KACZxF,KAAKpC,YAAcoC,KAAKpC,YAAYV,QAAO,SAAAsD,GAAE,OAAIA,IAAO3B,EAAK2B,MACxC,8BAAd3B,EAAK2G,OACZxF,KAAKkH,OAASlH,KAAKkH,OAAOhK,QAAO,SAAAsD,GAAE,OAAIA,IAAO3B,EAAK2B,OAjK/D,QAoKY3B,EAAK2B,KAAO4G,IACZA,OAAiBpM,GAGrBqN,EAAuBrI,KAAKkH,QACvBlH,KAAKrC,UAAU/B,QAAWoE,KAAKpC,YAAYhC,QACxCoE,KAAKkH,OAAOtL,QAAWkC,GAAgBwK,GAC3CC,GAAoB,GAGxBvI,KAAKmF,aAAanF,KAAKrC,UAAWqC,KAAKpC,YAAaoC,KAAKkH,OAAQE,GA9KzE,kIAiLiBzJ,EAAWC,EAAasJ,EAAQpJ,GAAa,IAElD2K,EAFkD,EACoEzI,KAAK1B,MAAvHoK,EAD8C,EAC9CA,gBAAiBvD,EAD6B,EAC7BA,aAAcmD,EADe,EACfA,iBAAkBC,EADH,EACGA,oBAAqBH,EADxB,EACwBA,qBAAsB9D,EAD9C,EAC8CA,kBAGpGtE,KAAKrC,UAAYA,EACjBqC,KAAKpC,YAAcA,EACnBoC,KAAKkH,OAASA,EAEVoB,GACKxK,GAAekC,KAAKpC,YAAYhC,OACjC6M,EAAY7K,EAAY,GACjBE,IACP2K,EAAY3K,GAGhB2K,EAAY3K,EAGhBL,EAAWuC,KAAK1B,MAAMZ,QAASC,EAAWC,EAAasJ,EAAQuB,GAC/DL,EAAqBpI,KAAKpC,YAAa,YACvC0G,EAAkBmE,GAEd9K,EAAU/B,QAAUgC,EAAYhC,QAAUsL,EAAOtL,QAAU6M,GAC3DtD,EAAaxH,EAAWC,EAAasJ,EAAQuB,GAC7CF,GAAoB,IAEpBG,MA3MZ,iCA+MeC,GAAO,WACVC,EAAO,GAQX,YANc5N,IAAV2N,GACAA,EAAMpN,SAAQ,SAAAsN,GACVD,EAAK3L,KAAK,EAAK6L,UAAUD,OAI1BD,IAxNf,0CA+NQ,IAHA,IAAIA,EAAO,GACPG,EAAU,GAELC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACxBD,EAAQ9L,KAAK,4BAAI,kBAAC,WAAD,CAAUgM,KAAOC,eAAaC,OAGnD,IAAK,IAAIH,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACzBJ,EAAK3L,KAAK,4BAAM8L,IAGpB,OAAOH,IAvOf,iCA0OeC,GAAM,IAGTtE,EAHS,OACTe,EAAM,GACN/E,OAASvF,EAuBb,OApBAgF,KAAKoF,WAAW7J,SAAQ,SAAAsD,GACpB0F,EAAY,CAAE,mBACdhE,EAASsI,EAAKvI,QAAQ0H,MAAK,SAASoB,GAChC,OAAOA,EAAI5I,KAAO3B,EAAK2B,MAGvB,EAAKlC,MAAMR,YACU,cAAjByC,EAAOlB,QACPkF,EAAUtH,KAAK,aACfsH,EAAUtH,KAAK,wBAGA,cAAf4L,EAAKxJ,OACLkF,EAAUtH,KAAK,aAIvBqI,EAAIrI,KAAK,wBAAIsH,UAAYA,EAAU1I,KAAK,MAA0B,OAAjB0E,EAAOvG,MAAiB,UAAYuG,EAAOvG,WAGzFsL,IAnQf,gCAsQcuD,GAAM,WACRvD,EAAM,GACNsD,EAAO,GA0CX,OAxCIC,EAAKQ,aACL/D,EAAIrI,KACA,wBAAIsH,UACAvE,KAAK1B,MAAMgL,aAAaC,SAASV,EAAKW,MAClC,2CACA,gCACFxJ,KAAKyJ,0BAA0BzJ,KAAK1B,MAAMgL,aAAcT,EAAKW,MAJnE,IAI6EX,EAAKW,OAGtFlE,EAAIrI,KACA,wBAAIsH,UAAU,2CACV,kBAAC,GAAD,CAAWP,UAAY6E,EAAKxJ,UAIpCW,KAAKoF,WAAW7J,SAAQ,WACpB+J,EAAIrI,KAAK,wBAAIsH,UAAU,wBAG3BqE,EAAK3L,KAAK,4BAAMqI,IAEZtF,KAAK1B,MAAMgL,aAAaC,SAASV,EAAKW,OACtCX,EAAKQ,YAAY9N,SAAQ,SAAAmO,GACrBpE,EAAM,EAAKqE,eAAeD,GAC1Bd,EAAK3L,KAAK,wBAAIsH,UAAiC,cAArBmF,EAAWrK,MAAwB,iBAAmB,IAAOiG,SAI/FA,EAAIrI,KAAK,wBAAIsH,UAAU,gCAAiCsE,EAAKW,OAC7DlE,EAAIrI,KACA,wBAAIsH,UAAU,2CACV,kBAAC,GAAD,CAAWP,UAAY6E,EAAKxJ,UAIpCiG,EAAMA,EAAIrK,OAAO+E,KAAK4J,WAAWf,IAEjCD,EAAK3L,KAAK,wBAAIsH,UAA2B,cAAfsE,EAAKxJ,MAAwB,iBAAmB,IAAOiG,KAG9EsD,IAlTf,qCAqTmBC,GACX,IAAIvD,EAAM,GASV,OAPAA,EAAIrI,KAAK,wBAAIsH,UAAU,4CACnB,uBAAGA,UAAU,aAAcsE,EAAKW,QAEpClE,EAAIrI,KAAK,wBAAIsH,UAAU,2CAA0C,kBAAC,GAAD,CAAWP,UAAY6E,EAAKxJ,UAE7FiG,EAAMA,EAAIrK,OAAO+E,KAAK4J,WAAWf,MA7TzC,gDAkU8BS,EAAcO,GAAU,WAS9C,OANIP,EAAaC,SAASM,GACT,kBAAC,IAAD,CAAetF,UAAU,mCAAmC5C,QAAU,kBAAM,EAAKrD,MAAMwL,UAAUD,MAEjG,kBAAC,IAAD,CAAgBtF,UAAU,uBAAuB5C,QAAU,kBAAM,EAAKrD,MAAMwL,UAAUD,QAxU/G,kCA8UgBE,EAAa9I,GAAS,MACgDjB,KAAK1B,MAA3EgI,EADsB,EACtBA,SAAUxI,EADY,EACZA,YAAayI,EADD,EACCA,UAAWtB,EADZ,EACYA,eAAgBC,EAD5B,EAC4BA,gBAE1D,OACI,kBAAC,IAAM/D,SAAP,KACI,yBAAKoD,UAAU,uBACX,2BAAOA,UAAU,uCACb,+BACI,kBAAC,GAAD,CACI+B,SAAWA,EACXnB,aAAenF,KAAKmF,aACpBC,WAAapF,KAAKoF,WAClBtH,YAAcA,EACduH,aAAerF,KAAKqF,aACpBkB,UAAYA,EACZ5I,UAAYqC,KAAKrC,UACjBsH,eAAiBA,EACjBC,gBAAkBA,EAClBZ,kBAAoBtE,KAAKsE,qBAGjC,+BACMrD,EAAUjB,KAAKgK,oBAAsBhK,KAAKiK,WAAWF,SApWnF,+BA4Wa,MAE4D/J,KAAK1B,MAD9D4L,EADH,EACGA,WAAYC,EADf,EACeA,oBAAqB7J,EADpC,EACoCA,QAAS4C,EAD7C,EAC6CA,UAAWrC,EADxD,EACwDA,4BAA6BC,EADrF,EACqFA,6BACtFC,EAFC,EAEDA,4BAA6BC,EAF5B,EAE4BA,mBAAoBC,EAFhD,EAEgDA,QAIrD,OAFAjB,KAAKoF,WAAapF,KAAKoK,eAAe9J,EAAS4C,EAAWlC,GAGtD,kBAAC,IAAMG,SAAP,KACI,kBAAC,GAAD,CACId,kBAAoBC,EAAQ5D,KAAI,SAAA6D,GAAM,OAAIA,EAAOC,MACjDvB,aAAee,KAAKmF,aACpBrH,YAAckC,KAAK1B,MAAMR,YACzBiD,4BAA8BA,EAC9BF,4BAA8BA,EAC9BC,6BAA+BA,IAEhCoJ,EAEG,KADAlK,KAAKqK,YAAYF,EAAqBlJ,QA7X5D,GAAgCwB,aAqahCmE,GAAWlE,UAAY,CACnB9B,qBAAsBgC,IAAUC,KAChCsF,SAAUvF,IAAUI,OACpBtF,QAASkF,IAAUI,OACnBmC,aAAcvC,IAAUG,KACxBuH,gBAAiB1H,IAAUK,MAC3BkH,oBAAqBvH,IAAUK,MAC/B3C,QAASsC,IAAUK,MACnBC,UAAWN,IAAUK,MACrBjC,mBAAoB4B,IAAUK,MAC9BqD,SAAU1D,IAAUO,OACpBoD,UAAW3D,IAAUO,OACrBlC,QAAS2B,IAAUC,KACnBoC,eAAgBrC,IAAUG,KAC1BmC,gBAAiBtC,IAAUG,KAC3B+G,UAAWlH,IAAUG,KACrBuG,aAAc1G,IAAUK,MACxBmF,qBAAsBxF,IAAUG,KAChCsF,uBAAwBzF,IAAUG,KAClCmH,WAAYtH,IAAUC,KACtByB,kBAAmB1B,IAAUG,KAC7BjF,YAAa8E,IAAUO,OACvBoH,MAAO3H,IAAUI,OACjBsF,iBAAkB1F,IAAUC,KAC5B0F,oBAAqB3F,IAAUG,KAC/B2F,gBAAiB9F,IAAUG,KAC3BhC,4BAA6B6B,IAAUC,KACvChC,4BAA6B+B,IAAUC,KACvC/B,6BAA8B8B,IAAUC,MAG7B2H,mBAAWpH,mBA/D1B,SAAyB/D,GACrB,MAAO,CACHuB,qBAAsBvB,EAAMgE,oBAAoBzC,qBAChD0J,gBAAiBjL,EAAMiE,aAAagH,gBACpCH,oBAAqB9K,EAAMiE,aAAa6G,oBACxClJ,QAAS5B,EAAMiE,aAAarC,QAC5BX,QAASjB,EAAMiE,aAAahD,QAC5B4C,UAAW7D,EAAMiE,aAAaJ,UAC9BlC,mBAAoB3B,EAAMiE,aAAatC,mBACvCsF,SAAUjH,EAAMiE,aAAagD,SAC7BC,UAAWlH,EAAMiE,aAAaiD,UAC9B+C,aAAcjK,EAAMiE,aAAagG,aACjCY,WAAY7K,EAAMiE,aAAa4G,WAC/BpM,YAAauB,EAAMiE,aAAaxF,gBAIxC,SAA4B4F,GACxB,MAAO,CACHyB,aAAe,SAACxH,EAAWC,EAAaoD,EAAoBlD,GAA7C,OACX4F,EAAS+G,IAAetF,aAAaxH,EAAWC,EAAaoD,EAAoBlD,KAErFmH,eAAgB,SAACD,GAAD,OAActB,EAAS+G,IAAexF,eAAeD,KACrEE,gBAAiB,SAACF,GAAD,OAActB,EAAS+G,IAAevF,gBAAgBF,KACvE8E,UAAW,SAACD,GAAD,OAAcnG,EAAS+G,IAAeX,UAAUD,KAC3DzB,qBAAuB,SAAClI,EAAqBmC,GAAtB,OACnBqB,EAASI,IAAsBsE,qBAAqBlI,EAAqBmC,KAE7EgG,uBAAwB,SAACqC,GAAD,OAAwBhH,EAASiH,IAAwBtC,uBAAuBqC,QAmCtFtH,CAA6CwD,K,6bC9chE,IAAMgE,GAAb,iCACI,WAAYtM,GAAO,+BACTA,GAFd,6CAKa,MAC8C0B,KAAK1B,MAAhD2C,EADH,EACGA,QAAS2C,EADZ,EACYA,qBAAsBiH,EADlC,EACkCA,QAEvC,OACI,kBAACpJ,EAAA,EAAD,CACIC,QAAQ,UACRC,QAAUiC,EACVhC,aAAaX,GAEX4J,EAAU,MAAQ,yBAdpC,GAAqCpI,aAoBrCmI,GAAgBlI,UAAY,CACxBkB,qBAAsBhB,IAAUG,KAChC8H,QAASjI,IAAUC,KACnB5B,QAAS2B,IAAUC,MASRO,yBAAQ,MANvB,SAA4BM,GACxB,MAAO,CACHE,qBAAuB,kBAAMF,EAASC,KAAsBC,4BAIrDR,CAAkCwH,I,4DC/BlC,QACXE,qBAPJ,WACI,MAAO,CACHtF,KAAMuF,KAAMC,wB,6aCIdC,G,iCACF,WAAY3M,GAAO,0BACf,cAAMA,IACD4M,SAAW,EAAKA,SAAShM,KAAd,QAChB,EAAKiM,mBAAqB,EAAKA,mBAAmBjM,KAAxB,QAHX,E,+CAOfc,KAAK1B,MAAM8M,mB,yCAGIC,GAAa,WAY5B,OAVI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI/K,GAAK6K,EAAYG,QACjBC,MAAQJ,EAAYG,QACpBE,UAAYL,EAAYM,SACxBC,SAAW,kBACP,EAAKtN,MAAMuN,eAAeR,S,0CAO1BS,GAChB,IAAIC,EAAgB,GAOpB,OALAD,EAAavQ,QAAQ,SAAS8P,GAC1B,IAAIW,EAAehM,KAAKmL,mBAAmBE,GAC3CU,EAAc9O,KAAK+O,IACrB9M,KAAKc,OAEA+L,I,gDAGeD,GAItB,IAHA,IAAIG,EAAqB,GACrBC,EAAgB,GAEXlD,EAAI,EAAGA,EAAI8C,EAAalQ,OAAQoN,IACjC8C,EAAa9C,GAAG2C,UAChBM,EAAmBhP,KAAK6O,EAAa9C,GAAGwC,SAIhD,IAAK,IAAIxC,EAAI,EAAGA,EAAIiD,EAAmBrQ,OAAQoN,IAC3CkD,GAAiBD,EAAmBjD,GAE/BA,EAAI,EAAKiD,EAAmBrQ,SAC7BsQ,GAAiB,MAIzB,OAAOA,I,+BAGF,IAEDH,EACAG,EAFIJ,EAAiB9L,KAAK1B,MAAtBwN,aAOR,OAHAC,EAAgB/L,KAAKmM,oBAAoBL,GACzCI,EAAgBlM,KAAKoM,0BAA0BN,GAG3C,kBAAC,IAAM3K,SAAP,KACI,kBAACkL,GAAA,EAAD,CACIC,OAAS,kBAACC,GAAA,EAAD,CAAgBrB,SAAWlL,KAAKkL,UAAhC,SACGgB,GAEZ5K,OAAStB,KAAK1B,MAAMkO,qBACpBT,cAAgBA,S,GAzEPtJ,aAgF7BwI,GAAevI,UAAY,CACvB0I,eAAgBxI,IAAUG,KAC1ByJ,qBAAsB5J,IAAUC,KAChCiJ,aAAclJ,IAAUK,MACxB4I,eAAgBjJ,IAAUG,MAiBdK,0BAdhB,SAAyB/D,GACrB,MAAO,CACHmN,qBAAsBnN,EAAMmN,qBAC5BV,aAAczM,EAAMiE,aAAawI,iBAIzC,SAA4BpI,GACxB,MAAO,CACH0H,eAAgB,kBAAM1H,EAAS+I,GAAsB3B,yBACrDe,eAAgB,SAAC3O,GAAD,OAAYwG,EAAS+G,IAAeoB,eAAe3O,QAI3DkG,CAA6C6H,I,wcCrGtD,IAAMyB,GAAb,iCACI,WAAYpO,GAAO,0BACf,cAAMA,IAeVqO,iBAAmB,SAACzP,GAChB,EAAK0P,SAAS,CAAE1P,WAChB,EAAK2P,cAAc3P,IAlBJ,EAqBnB2P,cAAgB,MAAW,SAAS3P,GAChC8C,KAAK1B,MAAMwO,iBAAiB5P,KAC7B,KApBC,EAAKmC,MAAQ,CACTnC,OAAQ,EAAKoB,MAAMyO,YAGvB,EAAKF,cAAgB,EAAKA,cAAc3N,KAAnB,QAPN,EADvB,uDAWuB8N,GACc,KAAzBA,EAAUD,YAA+C,KAA1B/M,KAAK1B,MAAMyO,YAC1C/M,KAAK4M,SAAS,CAAE1P,OAAQ8C,KAAK1B,MAAMyO,eAb/C,+BA2BQ,OACI,kBAAC,IAAM5L,SAAP,KACI,kBAAC8L,GAAA,EAAD,CACIjT,MAAQgG,KAAKX,MAAMnC,OACnBsD,GAAG,eACH0M,YAAY,iBACZtB,SAAW5L,KAAK2M,iBAChBQ,aAAW,wBAlC/B,GAA+B1K,aAyC/BiK,GAAUhK,UAAY,CAClBoK,iBAAkBlK,IAAUG,KAC5BgK,WAAYnK,IAAUO,QAeVC,0BAZhB,SAAyB/D,GACrB,MAAO,CACH0N,WAAY1N,EAAMiE,aAAayJ,eAIvC,SAA4BrJ,GACxB,MAAO,CACHoJ,iBAAkB,SAACC,GAAD,OAAgBrJ,EAAS+G,IAAe2C,aAAaL,QAI/D3J,CAA6CsJ,I,idC3DtD,IAAMW,GAAb,iCACI,WAAY/O,GAAO,0BACf,cAAMA,IA+CVgP,cAAgB,SAACxB,GACb,IAAIyB,EAAa,GAQjB,OANAzB,EAAavQ,SAAQ,SAAS2B,GACtBA,EAAOyO,UACP4B,EAAWtQ,KAAKC,EAAOsO,YAIxB+B,GAzDQ,EA4DnBC,WAAa,SAACC,GAAS,MACoC,EAAKnP,MAApDwN,EADW,EACXA,aAAcD,EADH,EACGA,eAAgBuB,EADnB,EACmBA,aAEzB,SAATK,GAA4B,cAATA,GAAiC,oBAATA,EAC3C3B,EAAavQ,SAAQ,SAAS8P,GACtBA,EAAYG,UAAYiC,GACxB5B,EAAeR,MAIvB+B,EAAa,KAtEF,EA0EnBM,WAAa,WAAM,IACPC,EAAc,EAAKtO,MAAnBsO,UACAC,EAAe,EAAKtP,MAApBsP,WACJC,GAAU,EAEdF,EAAUpS,SAAQ,SAASuS,GACnBA,EAAMC,MAAMnS,OAAS,IACrBiS,GAAU,MAIlBD,EAAWC,IAlFX,EAAKxO,MAAQ,CACTsO,UAAW,CACP,CAAEK,SAAU,QAASD,MAAO,EAAKT,cAAc,EAAKhP,MAAMwN,eAC1D,CAAEkC,SAAU,YAAaD,MACK,KAA1B,EAAKzP,MAAMyO,WACL,CAAE,EAAKzO,MAAMyO,YACb,MATH,EADvB,uDAgBuBC,GAAW,IAKtBiB,EALsB,EACWjO,KAAK1B,MAAlCwN,EADkB,EAClBA,aAAciB,EADI,EACJA,WACdY,EAAc3N,KAAKX,MAAnBsO,UACJO,EAAgBP,EAAU,GAC1BQ,EAAeR,EAAU,GAG7B,GAAIX,IAAchN,KAAK1B,MAAO,CAC1B,GAAIwN,IAAiBkB,EAAUlB,aAAc,CACzC,IAAIsC,EAAgB,GAEpBtC,EAAavQ,SAAQ,SAAS2B,GACtBA,EAAOyO,UACPyC,EAAcnR,KAAKC,EAAOsO,YAIlC0C,EAAgB,CAAEF,SAAU,QAASD,MAAOK,GAG5CrB,IAAeC,EAAUD,aACzBoB,EAAe,CAAEH,SAAU,YAAaD,MACrB,KAAfhB,EACM,CAAEA,GACF,KAIdkB,EAAe,CAAEC,EAAeC,GAChCnO,KAAK4M,SAAS,CAAEe,UAAWM,OA7CvC,+BAyFa,WACGN,EAAc3N,KAAKX,MAAnBsO,UACJU,EAAe,EAInB,OAFArO,KAAK0N,aAGDC,EAAUjR,KAAI,SAAAoR,GAAK,OACf,kBAACQ,GAAA,EAAD,CAAWC,aAAeT,EAAME,SAAWpT,IAAMkT,EAAME,UACjDF,EAAMC,MAAMrR,KAAI,SAAA+Q,GAAI,OAClB,kBAACe,GAAA,EAAD,CAAM5T,IAAMkT,EAAME,SAAWK,IAAiB1M,QAAU,kBAAM,EAAK6L,WAAWC,KACxEA,cApG9B,GAAsChL,aA6GtC4K,GAAiB3K,UAAY,CACzBqK,WAAYnK,IAAUO,OACtB2I,aAAclJ,IAAUK,MACxBmK,aAAcxK,IAAUG,KACxB8I,eAAgBjJ,IAAUG,KAC1B6K,WAAYhL,IAAUG,MAiBXK,0BAdf,SAAyB/D,GACrB,MAAO,CACH0N,WAAY1N,EAAMiE,aAAayJ,WAC/BjB,aAAczM,EAAMiE,aAAawI,iBAIzC,SAA4BpI,GACxB,MAAO,CACH0J,aAAc,SAAClQ,GAAD,OAAYwG,EAAS+G,IAAe2C,aAAalQ,KAC/D2O,eAAgB,SAAC3O,GAAD,OAAYwG,EAAS+G,IAAeoB,eAAe3O,QAI5DkG,CAA6CiK,I,yaC5HrD,IAAMoB,GAAb,iCACI,WAAYnQ,GAAO,0BACf,cAAMA,IAoBVsP,WAAa,SAACC,GACV,EAAKjB,SAAS,CAAEiB,aAtBD,EAyBnB3C,SAAW,WAAM,IACLwD,EAAiB,EAAKrP,MAAtBqP,aAER,EAAK9B,SAAS,CACV8B,cAAeA,KA7BJ,EAiCnBC,aAAe,YAGXC,EAFmC,EAAKtQ,MAAhCsQ,2BAlCO,EAuCnBlG,gBAAkB,WAAM,MACiF,EAAKpK,MAAlGZ,EADY,EACZA,QAASgL,EADG,EACHA,gBAAiBmG,EADd,EACcA,uBAAwBtG,EADtC,EACsCA,oBAAqBjE,EAD3D,EAC2DA,kBAE/EoE,IACAmG,EAAuB,YACvBtG,GAAoB,GACpBjE,IACA7G,EAAWC,EAAS,KA3CpB,EAAK2B,MAAQ,CACTyP,iBAAkB,CACd,kBAACxD,GAAA,EAAD,CAAc1Q,IAAI,iBAAiBmU,UAAU,SAASpN,QAAU,EAAK+G,iBAArE,0BAEJqD,cAAe,CACX,kBAACT,GAAA,EAAD,CACI1Q,IAAI,gBACJmU,UAAU,SACVpN,QAAU,kBAAM,EAAKrD,MAAM0Q,gBAH/B,kBAQJnB,SAAS,EACTa,cAAc,GAjBH,EADvB,6CAkDa,aAC4D1O,KAAK1B,MAA9D2C,EADH,EACGA,QAASgO,EADZ,EACYA,KAAMC,EADlB,EACkBA,QAASC,EAD3B,EAC2BA,WAAYC,EADvC,EACuCA,iBADvC,EAE8DpP,KAAKX,MAAhEyP,EAFH,EAEGA,iBAAkB/C,EAFrB,EAEqBA,cAAe2C,EAFpC,EAEoCA,aAAcb,EAFlD,EAEkDA,QAEvD,OACI,kBAAC,IAAM1M,SAAP,KACI,kBAACkO,EAAA,EAAD,CAAS9K,UAAU,iBACf,kBAAC+K,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAc7N,QAAQ,gBAClB,kBAAC8N,EAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACA,EAAA,EAAD,KACI,kBAAC,GAAD,QAGR,kBAACD,EAAA,EAAD,CAAc7N,QAAQ,gBAClB,kBAAC8N,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiBvO,QAAUA,MAGnC,kBAACsO,EAAA,EAAD,CAAc7N,QAAQ,qBAClB,kBAAC8N,EAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI1D,cAAgBA,EAChBzK,OAASoN,EACTxD,SAAWlL,KAAKkL,YAGxB,kBAACsE,EAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAa3D,cAAgB+C,MAGrC,kBAACU,EAAA,EAAD,CAAa9N,QAAQ,aAAaiO,MAAQ,CAAEC,QAAS,eACjD,kBAAC,KAAD,CACIX,KAAOA,EACPC,QAAUA,EACVW,MAAQV,EACRW,WAAY,EACZV,iBAAmBA,EACnBW,SAAS,uBACTrO,QAAUsO,IAAkBC,SAK5C,kBAACZ,EAAA,EAAD,CAAS9K,UAAU,iBACf,kBAAC+K,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAkB5B,WAAa5N,KAAK4N,cAErCC,EAMG,KALA,kBAAC2B,EAAA,EAAD,KACE,uBAAG7N,QAAU,kBAAM,EAAKgN,iBAAxB,0BAxGpC,GAAkClM,aAsHlCgM,GAAa/L,UAAY,CACrBzB,QAAS2B,IAAUC,KACnBnF,QAASkF,IAAUI,OACnBiM,KAAMrM,IAAUE,OAChBoM,QAAStM,IAAUE,OACnBqM,WAAYvM,IAAUE,OACtBsM,iBAAkBxM,IAAUG,KAC5B6L,uBAAwBhM,IAAUG,KAClC2F,gBAAiB9F,IAAUG,KAC3BiM,YAAapM,IAAUG,KACvB8L,uBAAwBjM,IAAUG,KAClCwF,oBAAqB3F,IAAUG,KAC/BuB,kBAAmB1B,IAAUG,MAGlB0L,U,6bC9HR,IAAMyB,GAAb,mCACI,WAAY5R,GAAO,0BACf,cAAMA,IAgBViK,oBAAsB,SAACvO,GACnB,EAAK4S,SAAS,CACVtE,iBAAkBtO,KAnBP,EAuBnBuH,QAAU,WAAM,MACiD,EAAKjD,MAA1D6R,EADI,EACJA,kBAAmBzS,EADf,EACeA,QAAS0S,EADxB,EACwBA,qBAEpCD,IACA1S,EAAWC,EAAS0S,EAAqB1T,KAAI,SAAA6D,GAAM,OAAIA,EAAOC,QA3B/C,EA8BnB6P,iBAAmB,WAAM,IACbhJ,EAAsB,EAAKhI,MAA3BgI,kBACAkD,EAAU,EAAKjM,MAAfiM,MAER,OAAIA,EAAM+F,OACC,kBAACC,GAAA,EAAD,CACHpM,KAAOqM,IACPvM,MAAM,UACN1E,MAAQ,iCACRkR,KAAOpJ,EACPkD,MACI,SAAWA,EAAM+F,OAAS,KAAO/F,EAAMmG,OAE3CC,OAAS,kBAAC,GAAD,CAAiB9F,SAAU,MAGjC,kBAAC0F,GAAA,EAAD,CACHpM,KAAOyM,IACP3M,MAAM,UACN1E,MAAQ,sCACRkR,KAAOpJ,EACPsJ,OAAS,kBAAC,GAAD,CAAiB9F,SAAU,OAjD5C,EAAKxL,MAAQ,CACTgI,kBAAmB,CACf,wEACA,gDAEJiB,kBAAkB,GAGtB,EAAKhK,MAAMuQ,uBAAuB,YAVnB,EADvB,4JAeclP,OAAOC,SAASC,OAAOC,KAAKC,UAf1C,uHAyDa,aAE2EC,KAAK1B,MAD7EoK,EADH,EACGA,gBAAiBkG,EADpB,EACoBA,uBAAwBC,EAD5C,EAC4CA,uBAAwB3E,EADpE,EACoEA,WAAYK,EADhF,EACgFA,MAAOyE,EADvF,EACuFA,YAAatR,EADpG,EACoGA,QACrGuD,EAFC,EAEDA,QAASgO,EAFR,EAEQA,KAAMC,EAFd,EAEcA,QAASC,EAFvB,EAEuBA,WAAYC,EAFnC,EAEmCA,iBAAkB9K,EAFrD,EAEqDA,kBAClDgE,EAAqBtI,KAAKX,MAA1BiJ,iBAER,OACI,kBAAC,IAAMnH,SAAP,KACI,kBAAC,aAAD,KACI,kBAAC,kBAAD,CAAiB5B,MAAM,gBAE3B,kBAAC,OAAD,KACI,kBAAC,KAAkBsR,SAAnB,MACM,SAAA7W,GAAK,OAC+B,IAAlCA,EAAM8W,YAAYC,YACZ,kBAACR,GAAA,EAAD,CACEpM,KAAO6M,IACP/M,MAAM,UACN1E,MAAQ,6CACRkR,KAAO,CAAE,sEAEX,kBAAC,IAAMtP,SAAP,KACE,kBAAC8P,GAAA,EAAD,CACI1G,MAAQA,EACRhJ,QAAU,EAAKA,UAEjB2I,IAAejJ,EACX,EAAKoP,mBACL,8BAEN,kBAACa,EAAA,EAAD,CAAM3M,UAAU,8BACZ,kBAAC4M,EAAA,EAAD,KACI,6BACOjH,EAeG,KAdA,kBAAC,GAAD,CACEjJ,QAAUA,EACVvD,QAAUA,EACVuR,KAAOA,EACPC,QAAUA,EACVC,WAAaA,EACbC,iBAAmBA,EACnB1G,gBAAkBA,EAClBkG,uBAAyBA,EACzBI,YAAcA,EACd1K,kBAAoBA,EACpBiE,oBAAsB,EAAKA,oBAC3BsG,uBAAyBA,IAIjC,kBAAC,GAAD,CACIvK,kBAAoBA,EACpBiG,MAAQA,EACRjC,iBAAmBA,EACnBC,oBAAsB,EAAKA,oBAC3BG,gBAAmBA,EACnB7H,4BAA8B7G,EAAM8W,YAAYM,cAChDtQ,6BAA+B9G,EAAM8W,YAAYO,eACjDtQ,4BAA8B/G,EAAM8W,YAAYQ,gBAEjDpH,GAAejJ,EAgBZ,KAfF,kBAACoO,EAAA,EAAD,CAAS9K,UAAU,iBACf,kBAACgL,EAAA,EAAD,CAAchL,UAAU,mBACpB,kBAACiL,EAAA,EAAD,KACI,kBAAC,KAAD,CACIP,KAAOA,EACPC,QAAUA,EACVW,MAAQV,EACRW,WAAY,EACZV,iBAAmBA,EACnBW,SAAS,0BACTrO,QAAUsO,IAAkBuB,yBA/HhG,GAA+B9O,aAkJ/ByN,GAAUxN,UAAY,CAClBwM,QAAStM,IAAUE,OACnBmM,KAAMrM,IAAUE,OAChBqM,WAAYvM,IAAUE,OACtByH,MAAO3H,IAAUI,OACjB/B,QAAS2B,IAAUC,KACnBgM,uBAAwBjM,IAAUG,KAClCmH,WAAYtH,IAAUC,KACtBuM,iBAAkBxM,IAAUG,KAC5BuB,kBAAmB1B,IAAUG,KAC7B2F,gBAAiB9F,IAAUG,KAC3B6L,uBAAwBhM,IAAUG,KAClCrF,QAASkF,IAAUI,OACnBqF,uBAAwBzF,IAAUG,KAClC3C,eAAgBwC,IAAUK,MAC1BkN,kBAAmBvN,IAAUG,KAC7BqN,qBAAsBxN,IAAUK,MAChC+L,YAAapM,IAAUG,MA6BZyH,sBAAWpH,mBAb1B,SAAyB/D,GACrB,MAAO,CACH4P,KAAM5P,EAAMiE,aAAa2L,KACzBC,QAAS7P,EAAMiE,aAAa4L,QAC5BC,WAAY9P,EAAMiE,aAAa6L,WAC/B5E,MAAOlL,EAAMiE,aAAaiH,MAC1BtJ,QAAS5B,EAAMiE,aAAarC,QAC5BiJ,WAAY7K,EAAMiE,aAAa4G,WAC/B9J,eAAgBf,EAAMoE,sBAAsBrD,eAC5CgQ,qBAAsB/Q,EAAMiE,aAAa8M,yBAtBjD,SAA4B1M,GACxB,MAAO,CACHmL,uBAAwB,SAACxM,GAAD,OAAaqB,EAASI,IAAsB+K,uBAAuBxM,KAC3F+M,iBAAkB,SAACoC,GAAD,OAAgB9N,EAAS+G,IAAe2E,iBAAiBoC,KAC3ElN,kBAAmB,SAAC9D,GAAD,OAAQkD,EAAS+G,IAAenG,kBAAkB9D,KACrEkI,gBAAiB,kBAAMhF,EAAS+G,IAAe/B,oBAC/CkG,uBAAwB,kBAAMlL,EAAS+G,IAAemE,2BACtDvG,uBAAwB,SAACqC,GAAD,OAAwBhH,EAASiH,IAAwBtC,uBAAuBqC,KACxGyF,kBAAmB,kBAAMzM,EAAS+G,IAAe0F,sBACjDnB,YAAa,kBAAMtL,EAAS+G,IAAeuE,mBAiBzB5L,CAA6C8M","file":"js/5-d641682443a3b2d8888d.js","sourcesContent":["'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tformatter(decodeURIComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n};\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n","'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n","import queryString from 'query-string';\n\nexport function setHistory(history, systemIds = [], baselineIds = [], hspIds = [], referenceId) {\n    /*eslint-disable camelcase*/\n    history.push({\n        search: '?' + queryString.stringify({\n            system_ids: systemIds,\n            baseline_ids: baselineIds,\n            hsp_ids: hspIds,\n            reference_id: referenceId\n        })\n    });\n    /*eslint-enable camelcase*/\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Tab, Tabs } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { sortable, cellWidth } from '@patternfly/react-table';\n\nimport SystemsTable from '../SystemsTable/SystemsTable';\nimport BaselinesTable from '../BaselinesTable/BaselinesTable';\nimport { addSystemModalActions } from './redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nexport class AddSystemModal extends Component {\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n        this.cancelSelection = this.cancelSelection.bind(this);\n        this.changeActiveTab = this.changeActiveTab.bind(this);\n\n        this.state = {\n            columns: [\n                { title: 'Name', transforms: [ sortable ]},\n                { title: 'Last updated', transforms: [ sortable, cellWidth(20) ]}\n            ]\n        };\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    onSelect = (event, isSelected, rowId) => {\n        const { baselineTableData, selectBaseline } = this.props;\n        let ids;\n\n        if (rowId === -1) {\n            ids = baselineTableData.map(function(item) {\n                return item[0];\n            });\n        } else {\n            ids = [ baselineTableData[rowId][0] ];\n        }\n\n        selectBaseline(ids, isSelected, 'CHECKBOX');\n    }\n\n    confirmModal() {\n        const { confirmModal, entities, selectedBaselineIds, toggleModal, selectedHSPIds, referenceId } = this.props;\n\n        confirmModal(\n            entities.selectedSystemIds,\n            selectedBaselineIds,\n            selectedHSPIds,\n            referenceId\n        );\n        toggleModal();\n    }\n\n    cancelSelection() {\n        this.props.toggleModal();\n    }\n\n    selectedSystemIds() {\n        let ids = this.props.systems.map(function (system) {\n            return system.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    changeActiveTab(event, tabIndex) {\n        const { selectActiveTab } = this.props;\n\n        selectActiveTab(tabIndex);\n    }\n\n    onBulkSelect = (isSelected) => {\n        const { baselineTableData, selectBaseline } = this.props;\n        let ids = [];\n\n        baselineTableData.forEach(function(baseline) {\n            ids.push(baseline[0]);\n        });\n\n        selectBaseline(ids, isSelected, 'CHECKBOX');\n    }\n\n    render() {\n        const { activeTab, addSystemModalOpened, baselineTableData, hasBaselinesReadPermissions, hasBaselinesWritePermissions,\n            hasInventoryReadPermissions, historicalProfiles, loading, entities, selectedBaselineIds, selectedHSPIds,\n            totalBaselines } = this.props;\n        const { columns } = this.state;\n\n        return (\n            <React.Fragment>\n                <Modal\n                    width={ '950px' }\n                    title=\"Add to comparison\"\n                    isOpen={ addSystemModalOpened }\n                    onClose={ this.cancelSelection }\n                    actions={ [\n                        <Button\n                            key=\"confirm\"\n                            variant=\"primary\"\n                            onClick={ this.confirmModal }\n                            isDisabled={\n                                ((entities && entities.selectedSystemIds && entities.selectedSystemIds.length === 0) || !entities) &&\n                                selectedBaselineIds.length === 0 &&\n                                selectedHSPIds.length === 0\n                            }\n                        >\n                            Submit\n                        </Button>\n                    ] }\n                >\n                    <Tabs\n                        activeKey={ activeTab }\n                        onSelect={ this.changeActiveTab }\n                    >\n                        <Tab\n                            eventKey={ 0 }\n                            title=\"Systems\"\n                            id='systems-tab'\n                        >\n                            <SystemsTable\n                                selectedSystemIds={ this.selectedSystemIds() }\n                                hasHistoricalDropdown={ true }\n                                historicalProfiles={ historicalProfiles }\n                                hasMultiSelect={ true }\n                                hasInventoryReadPermissions={ hasInventoryReadPermissions }\n                                entities={ entities }\n                            />\n                        </Tab>\n                        <Tab\n                            eventKey={ 1 }\n                            title=\"Baselines\"\n                            id='baselines-tab'\n                        >\n                            <BaselinesTable\n                                tableId='CHECKBOX'\n                                hasMultiSelect={ true }\n                                onSelect={ this.onSelect }\n                                tableData={ baselineTableData }\n                                loading={ loading }\n                                columns={ columns }\n                                onBulkSelect={ this.onBulkSelect }\n                                selectedBaselineIds={ selectedBaselineIds }\n                                totalBaselines={ totalBaselines }\n                                hasReadPermissions={ hasBaselinesReadPermissions }\n                                hasWritePermissions={ hasBaselinesWritePermissions }\n                            />\n                        </Tab>\n                    </Tabs>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nAddSystemModal.propTypes = {\n    showModal: PropTypes.bool,\n    addSystemModalOpened: PropTypes.bool,\n    activeTab: PropTypes.number,\n    confirmModal: PropTypes.func,\n    cancelSelection: PropTypes.func,\n    toggleModal: PropTypes.func,\n    selectActiveTab: PropTypes.func,\n    entities: PropTypes.object,\n    systems: PropTypes.array,\n    selectedBaselineIds: PropTypes.array,\n    baselines: PropTypes.array,\n    selectedHSPIds: PropTypes.array,\n    loading: PropTypes.bool,\n    baselineTableData: PropTypes.array,\n    selectBaseline: PropTypes.func,\n    historicalProfiles: PropTypes.array,\n    referenceId: PropTypes.string,\n    totalBaselines: PropTypes.number,\n    hasInventoryReadPermissions: PropTypes.bool,\n    hasBaselinesReadPermissions: PropTypes.bool,\n    hasBaselinesWritePermissions: PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        systems: state.compareState.systems,\n        activeTab: state.addSystemModalState.activeTab,\n        entities: state.entities,\n        selectedBaselineIds: state.baselinesTableState.checkboxTable.selectedBaselineIds,\n        baselines: state.compareState.baselines,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds,\n        loading: state.baselinesTableState.checkboxTable.loading,\n        baselineTableData: state.baselinesTableState.checkboxTable.baselineTableData,\n        historicalProfiles: state.compareState.historicalProfiles,\n        totalBaselines: state.baselinesTableState.checkboxTable.totalBaselines\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(addSystemModalActions.toggleAddSystemModal()),\n        selectActiveTab: (newActiveTab) => dispatch(addSystemModalActions.selectActiveTab(newActiveTab)),\n        selectBaseline: (id, isSelected, tableId) => dispatch(baselinesTableActions.selectBaseline(id, isSelected, tableId))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddSystemModal);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckCircleIcon, QuestionCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\n\nclass StateIcon extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    icon() {\n        let iconClass = '';\n\n        if (this.props.factState === 'SAME') {\n            iconClass = <CheckCircleIcon color='#3E8635' height='16px' width='16px'/>;\n        } else if (this.props.factState === 'DIFFERENT') {\n            iconClass = <ExclamationCircleIcon color='#C9190B' height='16px' width='16px'/>;\n        } else {\n            iconClass = <QuestionCircleIcon color='#151515' height='16px' width='16px'/>;\n        }\n\n        return iconClass;\n    };\n\n    render() {\n        return (\n            this.icon()\n        );\n    }\n}\n\nStateIcon.propTypes = {\n    factState: PropTypes.string\n};\n\nexport default StateIcon;\n","import React, { Component } from 'react';\nimport { OutlinedStarIcon, StarIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\n\nclass ReferenceSelector extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isReference: this.props.isReference\n        };\n    }\n\n    render() {\n        const { updateReferenceId, id } = this.props;\n        const { isReference } = this.state;\n\n        return (\n            isReference\n                ? <StarIcon\n                    className='reference-selector pointer'\n                    onClick={ () => updateReferenceId() }\n                />\n                : <OutlinedStarIcon\n                    className='reference-selector pointer'\n                    onClick={ () => updateReferenceId(id) }\n                />\n        );\n    }\n}\n\nReferenceSelector.propTypes = {\n    isReference: PropTypes.bool,\n    updateReferenceId: PropTypes.func,\n    id: PropTypes.string\n};\n\nexport default ReferenceSelector;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DropdownDirection, Tooltip } from '@patternfly/react-core';\nimport { ClockIcon, TimesIcon, ExclamationTriangleIcon, ServerIcon, BlueprintIcon } from '@patternfly/react-icons';\nimport { LongArrowAltUpIcon, LongArrowAltDownIcon, ArrowsAltVIcon } from '@patternfly/react-icons';\nimport moment from 'moment';\n\nimport { ASC, DESC } from '../../../../constants';\n\nimport HistoricalProfilesDropdown from '../../../HistoricalProfilesDropdown/HistoricalProfilesDropdown';\nimport ReferenceSelector from '../ReferenceSelector/ReferenceSelector';\n\nclass ComparisonHeader extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    formatDate = (dateString) => {\n        return moment.utc(dateString).format('DD MMM YYYY, HH:mm UTC');\n    }\n\n    renderSortButton(sort) {\n        let sortIcon;\n\n        if (sort === ASC) {\n            sortIcon = <LongArrowAltUpIcon className=\"active-blue\" />;\n        }\n        else if (sort === DESC) {\n            sortIcon = <LongArrowAltDownIcon className=\"active-blue\" />;\n        }\n        else {\n            sortIcon = <ArrowsAltVIcon className=\"not-active\" />;\n        }\n\n        return sortIcon;\n    }\n\n    toggleSort(sortType, sort) {\n        const { toggleFactSort, toggleStateSort } = this.props;\n\n        if (sortType === 'fact') {\n            toggleFactSort(sort);\n        } else {\n            toggleStateSort(sort);\n        }\n    }\n\n    renderSystemHeaders() {\n        const { fetchCompare, masterList, referenceId, removeSystem, systemIds, updateReferenceId } = this.props;\n\n        let row = [];\n        let typeIcon = '';\n\n        masterList.forEach(item => {\n            if (item.type === 'system') {\n                typeIcon = <ServerIcon/>;\n            } else if (item.type === 'baseline') {\n                typeIcon = <BlueprintIcon/>;\n            } else if (item.type === 'historical-system-profile') {\n                typeIcon = <ClockIcon />;\n            }\n\n            row.push(\n                <th\n                    header-id={ item.id }\n                    key={ item.id }\n                    className={\n                        item.id === referenceId\n                            ? 'drift-header reference-header'\n                            : `drift-header ${item.type}-header`\n                    }\n                >\n                    <div>\n                        <a onClick={ () => removeSystem(item) } className=\"remove-system-icon\">\n                            <TimesIcon/>\n                        </a>\n                    </div>\n                    <div className='comparison-header'>\n                        <div className=\"drift-header-icon\">\n                            { typeIcon }\n                        </div>\n                        <div className=\"system-name\">{ item.display_name }</div>\n                        <div className=\"system-updated-and-reference\">\n                            <ReferenceSelector\n                                updateReferenceId={ updateReferenceId }\n                                id={ item.id }\n                                isReference= { item.id === referenceId }\n                            />\n                            { item.system_profile_exists === false ?\n                                <Tooltip\n                                    position='top'\n                                    content={\n                                        <div>System profile does not exist. Please run insights-client on system to upload archive.</div>\n                                    }\n                                >\n                                    <ExclamationTriangleIcon color=\"#f0ab00\"/>\n                                </Tooltip> : ''\n                            }\n                            { item.last_updated\n                                ? this.formatDate(item.last_updated)\n                                : this.formatDate(item.updated)\n                            }\n                            { item.type === 'system' || item.type === 'historical-system-profile'\n                                ? <HistoricalProfilesDropdown\n                                    system={ item }\n                                    systemIds={ systemIds }\n                                    referenceId={ referenceId }\n                                    fetchCompare={ fetchCompare }\n                                    dropdownDirection={ DropdownDirection.down }\n                                    hasCompareButton={ true }\n                                    hasMultiSelect={ true }\n                                />\n                                : null\n                            }\n                        </div>\n                    </div>\n                </th>\n            );\n        });\n\n        return row;\n    }\n\n    renderHeaderRow() {\n        const { factSort, stateSort } = this.props;\n\n        return (\n            <tr className=\"sticky-column-header\">\n                <th\n                    className=\"fact-header sticky-column fixed-column-1 pointer\"\n                    key='fact-header'\n                    id={ factSort }\n                    onClick={ () => this.toggleSort('fact', factSort) }\n                >\n                    <div className=\"active-blue\">Fact { this.renderSortButton(factSort) }</div>\n                </th>\n                <th\n                    className=\"state-header sticky-column fixed-column-2 pointer\"\n                    key='state-header'\n                    id={ stateSort || 'disabled' }\n                    onClick={ () => this.toggleSort('state', stateSort) }\n                >\n                    { stateSort !== ''\n                        ? <div className=\"active-blue\">State { this.renderSortButton(stateSort) }</div>\n                        : <div>State { this.renderSortButton(stateSort) }</div>\n                    }\n                </th>\n                { this.renderSystemHeaders() }\n            </tr>\n        );\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                { this.renderHeaderRow() }\n            </React.Fragment>\n        );\n    }\n}\n\nComparisonHeader.propTypes = {\n    factSort: PropTypes.string,\n    fetchCompare: PropTypes.func,\n    masterList: PropTypes.array,\n    referenceId: PropTypes.string,\n    removeSystem: PropTypes.func,\n    stateSort: PropTypes.string,\n    systemIds: PropTypes.array,\n    toggleFactSort: PropTypes.func,\n    toggleStateSort: PropTypes.func,\n    updateReferenceId: PropTypes.func\n};\n\nexport default ComparisonHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport queryString from 'query-string';\nimport { AngleDownIcon, AngleRightIcon } from '@patternfly/react-icons';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\n\nimport AddSystemModal from '../../AddSystemModal/AddSystemModal';\nimport StateIcon from '../../StateIcon/StateIcon';\nimport ComparisonHeader from './ComparisonHeader/ComparisonHeader';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport { compareActions } from '../../modules';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { historicProfilesActions } from '../../HistoricalProfilesDropdown/redux';\n\nexport class DriftTable extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            emptyStateMessage: [\n                'You currently have no system or baselines displayed. Add at least two',\n                'systems or baselines to compare their facts.'\n            ]\n        };\n\n        this.masterList = [];\n\n        this.setSystemIds();\n        this.setBaselineIds();\n        this.setHSPIds();\n        this.setReferenceId();\n        this.fetchCompare = this.fetchCompare.bind(this);\n        this.removeSystem = this.removeSystem.bind(this);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n\n        if (this.systemIds.length > 0 || this.baselineIds.length > 0 || this.HSPIds.length > 0) {\n            this.fetchCompare(this.systemIds, this.baselineIds, this.HSPIds, this.props.referenceId);\n        }\n    }\n\n    shiftReferenceToFront = (masterList) => {\n        let index;\n        let systemToMove;\n\n        index = masterList.findIndex((item) => {\n            return item.id === this.props.referenceId;\n        });\n\n        systemToMove = masterList.splice(index, 1);\n        masterList.unshift(systemToMove[0]);\n\n        return masterList;\n    }\n\n    formatEntities(systems, baselines, historicalProfiles) {\n        /*eslint-disable camelcase*/\n        let fullHistoricalSystemList = [];\n        let historicalGroups = {};\n        let masterList;\n\n        if (systems.length === 0 && baselines.length === 0 && historicalProfiles.length === 0) {\n            return [];\n        }\n\n        systems = systems.map(function(system) {\n            system.type = 'system';\n            return system;\n        });\n        baselines = baselines.map(function(baseline) {\n            baseline.type = 'baseline';\n            return baseline;\n        });\n        historicalProfiles = historicalProfiles.map(function(hsp) {\n            hsp.type = 'historical-system-profile';\n            return hsp;\n        });\n\n        historicalProfiles.forEach(function(hsp) {\n            if (historicalGroups.hasOwnProperty(hsp.system_id)) {\n                historicalGroups[hsp.system_id].push(hsp);\n            } else {\n                historicalGroups[hsp.system_id] = [ hsp ];\n            }\n        });\n\n        fullHistoricalSystemList = systems;\n\n        for (const [ system_id, hsps ] of Object.entries(historicalGroups)) {\n            let system = systems.find(item => system_id === item.id);\n            let index;\n\n            if (system !== undefined) {\n                index = fullHistoricalSystemList.indexOf(system);\n                fullHistoricalSystemList = [\n                    ...fullHistoricalSystemList.slice(0, index + 1),\n                    ...hsps,\n                    ...fullHistoricalSystemList.slice(index + 1, fullHistoricalSystemList.length)\n                ];\n            } else {\n                fullHistoricalSystemList = fullHistoricalSystemList.concat(hsps);\n            }\n        }\n        /*eslint-enable camelcase*/\n\n        masterList = baselines.concat(fullHistoricalSystemList);\n\n        if (this.props.referenceId) {\n            masterList = this.shiftReferenceToFront(masterList);\n        }\n\n        return masterList;\n    }\n\n    setSystemIds() {\n        this.systemIds = queryString.parse(this.props.location.search).system_ids;\n        this.systemIds = Array.isArray(this.systemIds) ? this.systemIds : [ this.systemIds ];\n        this.systemIds = this.systemIds.filter(item => item !== undefined);\n    }\n\n    setBaselineIds() {\n        this.baselineIds = queryString.parse(this.props.location.search).baseline_ids;\n        this.baselineIds = Array.isArray(this.baselineIds) ? this.baselineIds : [ this.baselineIds ];\n        this.baselineIds = this.baselineIds.filter(item => item !== undefined);\n        this.props.setSelectedBaselines(this.baselineIds, 'CHECKBOX');\n    }\n\n    setHSPIds() {\n        const { selectHistoricProfiles } = this.props;\n\n        this.HSPIds = queryString.parse(this.props.location.search).hsp_ids;\n        this.HSPIds = Array.isArray(this.HSPIds) ? this.HSPIds : [ this.HSPIds ];\n        this.HSPIds = this.HSPIds.filter(item => item !== undefined);\n        selectHistoricProfiles(this.HSPIds);\n    }\n\n    setReferenceId() {\n        const { location, updateReferenceId } = this.props;\n        updateReferenceId(queryString.parse(location.search).reference_id);\n    }\n\n    updateReferenceId = (id) => {\n        this.fetchCompare(this.systemIds, this.baselineIds, this.HSPIds, id);\n    }\n\n    findHSPReference = () => {\n        const { referenceId } = this.props;\n        let newReferenceId = referenceId;\n\n        this.HSPIds.forEach((id) => {\n            if (id === referenceId) {\n                newReferenceId = undefined;\n            }\n        });\n\n        return newReferenceId;\n    }\n\n    async removeSystem(item) {\n        const { historicalProfiles, isFirstReference, referenceId, selectHistoricProfiles, setIsFirstReference } = this.props;\n        let newReferenceId;\n\n        if (item.type === 'system') {\n            this.systemIds = this.systemIds.filter(id => id !== item.id);\n            newReferenceId = await this.findHSPReference();\n\n            this.HSPIds = await historicalProfiles.filter((profile) => {\n                return profile.system_id !== item.id;\n            }).map(profile => profile.id);\n\n        } else if (item.type === 'baseline') {\n            this.baselineIds = this.baselineIds.filter(id => id !== item.id);\n        } else if (item.type === 'historical-system-profile') {\n            this.HSPIds = this.HSPIds.filter(id => id !== item.id);\n        }\n\n        if (item.id === newReferenceId) {\n            newReferenceId = undefined;\n        }\n\n        selectHistoricProfiles(this.HSPIds);\n        if (!this.systemIds.length && !this.baselineIds.length\n            && !this.HSPIds.length && !referenceId && !isFirstReference) {\n            setIsFirstReference(true);\n        }\n\n        this.fetchCompare(this.systemIds, this.baselineIds, this.HSPIds, newReferenceId);\n    }\n\n    fetchCompare(systemIds, baselineIds, HSPIds, referenceId) {\n        const { clearComparison, fetchCompare, isFirstReference, setIsFirstReference, setSelectedBaselines, updateReferenceId } = this.props;\n        let reference;\n\n        this.systemIds = systemIds;\n        this.baselineIds = baselineIds;\n        this.HSPIds = HSPIds;\n\n        if (isFirstReference) {\n            if (!referenceId && this.baselineIds.length) {\n                reference = baselineIds[0];\n            } else if (referenceId) {\n                reference = referenceId;\n            }\n        } else {\n            reference = referenceId;\n        }\n\n        setHistory(this.props.history, systemIds, baselineIds, HSPIds, reference);\n        setSelectedBaselines(this.baselineIds, 'CHECKBOX');\n        updateReferenceId(reference);\n\n        if (systemIds.length || baselineIds.length || HSPIds.length || reference) {\n            fetchCompare(systemIds, baselineIds, HSPIds, reference);\n            setIsFirstReference(false);\n        } else {\n            clearComparison();\n        }\n    }\n\n    renderRows(facts) {\n        let rows = [];\n\n        if (facts !== undefined) {\n            facts.forEach(fact => {\n                rows.push(this.renderRow(fact));\n            });\n        }\n\n        return rows;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n        let rowData = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rowData.push(<td><Skeleton size={ SkeletonSize.md } /></td>);\n        }\n\n        for (let i = 0; i < 10; i += 1) {\n            rows.push(<tr>{ rowData }</tr>);\n        }\n\n        return rows;\n    }\n\n    findSystem(fact) {\n        let row = [];\n        let system = undefined;\n        let className;\n\n        this.masterList.forEach(item => {\n            className = [ 'comparison-cell' ];\n            system = fact.systems.find(function(sys) {\n                return sys.id === item.id;\n            });\n\n            if (this.props.referenceId) {\n                if (system.state === 'DIFFERENT') {\n                    className.push('highlight');\n                    className.push('different-fact-cell');\n                }\n            } else {\n                if (fact.state === 'DIFFERENT') {\n                    className.push('highlight');\n                }\n            }\n\n            row.push(<td className={ className.join(' ') }>{ system.value === null ? 'No Data' : system.value }</td>);\n        });\n\n        return row;\n    }\n\n    renderRow(fact) {\n        let row = [];\n        let rows = [];\n\n        if (fact.comparisons) {\n            row.push(\n                <td className={\n                    this.props.expandedRows.includes(fact.name) ?\n                        'nested-fact sticky-column fixed-column-1' :\n                        'sticky-column fixed-column-1' }>\n                    { this.renderExpandableRowButton(this.props.expandedRows, fact.name) } { fact.name }\n                </td>\n            );\n            row.push(\n                <td className=\"fact-state sticky-column fixed-column-2\">\n                    <StateIcon factState={ fact.state }/>\n                </td>\n            );\n\n            this.masterList.forEach(() => {\n                row.push(<td className=\"comparison-cell\"></td>);\n            });\n\n            rows.push(<tr>{ row }</tr>);\n\n            if (this.props.expandedRows.includes(fact.name)) {\n                fact.comparisons.forEach(comparison => {\n                    row = this.renderRowChild(comparison);\n                    rows.push(<tr className={ comparison.state === 'DIFFERENT' ? 'unexpected-row' : '' }>{ row }</tr>);\n                });\n            }\n        } else {\n            row.push(<td className=\"sticky-column fixed-column-1\">{ fact.name }</td>);\n            row.push(\n                <td className=\"fact-state sticky-column fixed-column-2\">\n                    <StateIcon factState={ fact.state }/>\n                </td>\n            );\n\n            row = row.concat(this.findSystem(fact));\n\n            rows.push(<tr className={ fact.state === 'DIFFERENT' ? 'unexpected-row' : '' }>{ row }</tr>);\n        }\n\n        return rows;\n    }\n\n    renderRowChild(fact) {\n        let row = [];\n\n        row.push(<td className=\"nested-fact sticky-column fixed-column-1\">\n            <p className=\"child-row\">{ fact.name }</p>\n        </td>);\n        row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n        row = row.concat(this.findSystem(fact));\n\n        return row;\n    }\n\n    renderExpandableRowButton(expandedRows, factName) {\n        let expandIcon;\n\n        if (expandedRows.includes(factName)) {\n            expandIcon = <AngleDownIcon className=\"carat-margin pointer active-blue\" onClick={ () => this.props.expandRow(factName) } />;\n        } else {\n            expandIcon = <AngleRightIcon className=\"carat-margin pointer\" onClick={ () => this.props.expandRow(factName) } />;\n        }\n\n        return expandIcon;\n    }\n\n    renderTable(compareData, loading) {\n        const { factSort, referenceId, stateSort, toggleFactSort, toggleStateSort } = this.props;\n\n        return (\n            <React.Fragment>\n                <div className=\"drift-table-wrapper\">\n                    <table className=\"pf-c-table pf-m-compact drift-table\">\n                        <thead>\n                            <ComparisonHeader\n                                factSort={ factSort }\n                                fetchCompare={ this.fetchCompare }\n                                masterList={ this.masterList }\n                                referenceId={ referenceId }\n                                removeSystem={ this.removeSystem }\n                                stateSort={ stateSort }\n                                systemIds={ this.systemIds }\n                                toggleFactSort={ toggleFactSort }\n                                toggleStateSort={ toggleStateSort }\n                                updateReferenceId={ this.updateReferenceId }\n                            />\n                        </thead>\n                        <tbody>\n                            { loading ? this.renderLoadingRows() : this.renderRows(compareData) }\n                        </tbody>\n                    </table>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { emptyState, filteredCompareData, systems, baselines, hasBaselinesReadPermissions, hasBaselinesWritePermissions,\n            hasInventoryReadPermissions, historicalProfiles, loading } = this.props;\n\n        this.masterList = this.formatEntities(systems, baselines, historicalProfiles);\n\n        return (\n            <React.Fragment>\n                <AddSystemModal\n                    selectedSystemIds={ systems.map(system => system.id) }\n                    confirmModal={ this.fetchCompare }\n                    referenceId={ this.props.referenceId }\n                    hasInventoryReadPermissions={ hasInventoryReadPermissions }\n                    hasBaselinesReadPermissions={ hasBaselinesReadPermissions }\n                    hasBaselinesWritePermissions={ hasBaselinesWritePermissions }\n                />\n                { !emptyState\n                    ? this.renderTable(filteredCompareData, loading)\n                    : null\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        fullCompareData: state.compareState.fullCompareData,\n        filteredCompareData: state.compareState.filteredCompareData,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines,\n        historicalProfiles: state.compareState.historicalProfiles,\n        factSort: state.compareState.factSort,\n        stateSort: state.compareState.stateSort,\n        expandedRows: state.compareState.expandedRows,\n        emptyState: state.compareState.emptyState,\n        referenceId: state.compareState.referenceId\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchCompare: ((systemIds, baselineIds, historicalProfiles, referenceId) =>\n            dispatch(compareActions.fetchCompare(systemIds, baselineIds, historicalProfiles, referenceId))\n        ),\n        toggleFactSort: (sortType) => dispatch(compareActions.toggleFactSort(sortType)),\n        toggleStateSort: (sortType) => dispatch(compareActions.toggleStateSort(sortType)),\n        expandRow: (factName) => dispatch(compareActions.expandRow(factName)),\n        setSelectedBaselines: ((selectedBaselineIds, tableId) =>\n            dispatch(baselinesTableActions.setSelectedBaselines(selectedBaselineIds, tableId))\n        ),\n        selectHistoricProfiles: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfiles(historicProfileIds))\n    };\n}\n\nDriftTable.propTypes = {\n    addSystemModalOpened: PropTypes.bool,\n    location: PropTypes.object,\n    history: PropTypes.object,\n    fetchCompare: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    filteredCompareData: PropTypes.array,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    historicalProfiles: PropTypes.array,\n    factSort: PropTypes.string,\n    stateSort: PropTypes.string,\n    loading: PropTypes.bool,\n    toggleFactSort: PropTypes.func,\n    toggleStateSort: PropTypes.func,\n    expandRow: PropTypes.func,\n    expandedRows: PropTypes.array,\n    setSelectedBaselines: PropTypes.func,\n    selectHistoricProfiles: PropTypes.func,\n    emptyState: PropTypes.bool,\n    updateReferenceId: PropTypes.func,\n    referenceId: PropTypes.string,\n    error: PropTypes.object,\n    isFirstReference: PropTypes.bool,\n    setIsFirstReference: PropTypes.func,\n    clearComparison: PropTypes.func,\n    hasInventoryReadPermissions: PropTypes.bool,\n    hasBaselinesReadPermissions: PropTypes.bool,\n    hasBaselinesWritePermissions: PropTypes.bool\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftTable));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\n\nimport { addSystemModalActions } from '../../AddSystemModal/redux';\n\nexport class AddSystemButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { loading, toggleAddSystemModal, isTable } = this.props;\n\n        return (\n            <Button\n                variant='primary'\n                onClick={ toggleAddSystemModal }\n                isDisabled={ loading ? true : false }\n            >\n                { isTable ? 'Add' : 'Add to comparison' }\n            </Button>\n        );\n    }\n}\n\nAddSystemButton.propTypes = {\n    toggleAddSystemModal: PropTypes.func,\n    isTable: PropTypes.bool,\n    loading: PropTypes.bool\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleAddSystemModal: (() => dispatch(addSystemModalActions.toggleAddSystemModal()))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddSystemButton);\n","import types from './types';\n\nfunction toggleFilterDropDown() {\n    return {\n        type: types.OPEN_FILTER_DROPDOWN\n    };\n}\n\nexport default {\n    toggleFilterDropDown\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox, Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { filterDropdownActions } from './redux';\n\nclass FilterDropDown extends Component {\n    constructor(props) {\n        super(props);\n        this.onToggle = this.onToggle.bind(this);\n        this.createDropdownItem = this.createDropdownItem.bind(this);\n    }\n\n    onToggle() {\n        this.props.toggleDropDown();\n    }\n\n    createDropdownItem(stateFilter) {\n        let dropdownItem =\n            <DropdownItem>\n                <Checkbox\n                    id={ stateFilter.display }\n                    label={ stateFilter.display }\n                    isChecked={ stateFilter.selected }\n                    onChange={ () =>\n                        this.props.addStateFilter(stateFilter)\n                    }\n                />\n            </DropdownItem>;\n        return dropdownItem;\n    }\n\n    createDropdownArray(stateFilters) {\n        let dropdownItems = [];\n\n        stateFilters.forEach(function(stateFilter) {\n            let dropdownItem = this.createDropdownItem(stateFilter);\n            dropdownItems.push(dropdownItem);\n        }.bind(this));\n\n        return dropdownItems;\n    }\n\n    createSelectedViewsString(stateFilters) {\n        let selectedViewsArray = [];\n        let selectedViews = '';\n\n        for (let i = 0; i < stateFilters.length; i++) {\n            if (stateFilters[i].selected) {\n                selectedViewsArray.push(stateFilters[i].display);\n            }\n        }\n\n        for (let i = 0; i < selectedViewsArray.length; i++) {\n            selectedViews += selectedViewsArray[i];\n\n            if ((i + 1) < selectedViewsArray.length) {\n                selectedViews += ', ';\n            }\n        }\n\n        return selectedViews;\n    }\n\n    render() {\n        const { stateFilters } = this.props;\n        let dropdownItems = [];\n        let selectedViews = '';\n\n        dropdownItems = this.createDropdownArray(stateFilters);\n        selectedViews = this.createSelectedViewsString(stateFilters);\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    toggle={ <DropdownToggle onToggle={ this.onToggle }>\n                        View: { selectedViews }\n                    </DropdownToggle> }\n                    isOpen={ this.props.filterDropdownOpened }\n                    dropdownItems={ dropdownItems }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nFilterDropDown.propTypes = {\n    toggleDropDown: PropTypes.func,\n    filterDropdownOpened: PropTypes.bool,\n    stateFilters: PropTypes.array,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        filterDropdownOpened: state.filterDropdownOpened,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleDropDown: () => dispatch(filterDropdownActions.toggleFilterDropDown()),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(FilterDropDown));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TextInput } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { compareActions } from '../../modules';\n\nexport class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: this.props.factFilter\n        };\n\n        this.setFactFilter = this.setFactFilter.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.factFilter !== '' && this.props.factFilter === '') {\n            this.setState({ filter: this.props.factFilter });\n        }\n    }\n\n    updateFactFilter = (filter) => {\n        this.setState({ filter });\n        this.setFactFilter(filter);\n    }\n\n    setFactFilter = _.debounce(function(filter) {\n        this.props.changeFactFilter(filter);\n    }, 250);\n\n    render() {\n        return (\n            <React.Fragment>\n                <TextInput\n                    value={ this.state.filter }\n                    id=\"filterByFact\"\n                    placeholder=\"Filter by fact\"\n                    onChange={ this.updateFactFilter }\n                    aria-label=\"filter by fact\"\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nSearchBar.propTypes = {\n    changeFactFilter: PropTypes.func,\n    factFilter: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeFactFilter: (factFilter) => dispatch(compareActions.filterByFact(factFilter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(SearchBar));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Chip, ChipGroup } from '@patternfly/react-core';\n\nimport { compareActions } from '../../modules';\n\nexport class DriftFilterChips extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chipGroup: [\n                { category: 'State', chips: this.setStateChips(this.props.stateFilters) },\n                { category: 'Fact name', chips:\n                    this.props.factFilter !== ''\n                        ? [ this.props.factFilter ]\n                        : []\n                }\n            ]\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const { stateFilters, factFilter } = this.props;\n        const { chipGroup } = this.state;\n        let newStateChips = chipGroup[0];\n        let newFactChips = chipGroup[1];\n        let newChipGroup;\n\n        if (prevProps !== this.props) {\n            if (stateFilters !== prevProps.stateFilters) {\n                let filteredChips = [];\n\n                stateFilters.forEach(function(filter) {\n                    if (filter.selected) {\n                        filteredChips.push(filter.display);\n                    }\n                });\n\n                newStateChips = { category: 'State', chips: filteredChips };\n            }\n\n            if (factFilter !== prevProps.factFilter) {\n                newFactChips = { category: 'Fact name', chips:\n                    factFilter !== ''\n                        ? [ factFilter ]\n                        : []\n                };\n            }\n\n            newChipGroup = [ newStateChips, newFactChips ];\n            this.setState({ chipGroup: newChipGroup });\n        }\n    }\n\n    setStateChips = (stateFilters) => {\n        let stateChips = [];\n\n        stateFilters.forEach(function(filter) {\n            if (filter.selected) {\n                stateChips.push(filter.display);\n            }\n        });\n\n        return stateChips;\n    }\n\n    removeChip = (chip) => {\n        const { stateFilters, addStateFilter, filterByFact } = this.props;\n\n        if (chip === 'Same' || chip === 'Different' || chip === 'Incomplete data') {\n            stateFilters.forEach(function(stateFilter) {\n                if (stateFilter.display === chip) {\n                    addStateFilter(stateFilter);\n                }\n            });\n        } else {\n            filterByFact('');\n        }\n    }\n\n    checkChips = () => {\n        const { chipGroup } = this.state;\n        const { setIsEmpty } = this.props;\n        let isEmpty = true;\n\n        chipGroup.forEach(function(group) {\n            if (group.chips.length > 0) {\n                isEmpty = false;\n            }\n        });\n\n        setIsEmpty(isEmpty);\n    }\n\n    render() {\n        const { chipGroup } = this.state;\n        let chipKeyCount = 0;\n\n        this.checkChips();\n\n        return (\n            chipGroup.map(group => (\n                <ChipGroup categoryName={ group.category } key={ group.category }>\n                    { group.chips.map(chip => (\n                        <Chip key={ group.category + chipKeyCount++ } onClick={ () => this.removeChip(chip) }>\n                            { chip }\n                        </Chip>\n                    )) }\n                </ChipGroup>\n            ))\n        );\n    }\n}\n\nDriftFilterChips.propTypes = {\n    factFilter: PropTypes.string,\n    stateFilters: PropTypes.array,\n    filterByFact: PropTypes.func,\n    addStateFilter: PropTypes.func,\n    setIsEmpty: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        filterByFact: (filter) => dispatch(compareActions.filterByFact(filter)),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DriftFilterChips);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { DropdownItem, PaginationVariant, Toolbar, ToolbarGroup, ToolbarItem, ToolbarContent } from '@patternfly/react-core';\n\nimport FilterDropDown from '../FilterDropDown/FilterDropDown';\nimport SearchBar from '../SearchBar/SearchBar';\nimport ActionKebab from '../ActionKebab/ActionKebab';\nimport AddSystemButton from '../AddSystemButton/AddSystemButton';\nimport ExportCSVButton from '../../ExportCSVButton/ExportCSVButton';\nimport DriftFilterChips from '../DriftFilterChips/DriftFilterChips';\nimport { setHistory } from '../../../Utilities/SetHistory';\nimport { TablePagination } from '../../Pagination/Pagination';\n\nexport class DriftToolbar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            actionKebabItems: [\n                <DropdownItem key=\"remove-systems\" component=\"button\" onClick={ this.clearComparison }>Clear all comparisons</DropdownItem>\n            ],\n            dropdownItems: [\n                <DropdownItem\n                    key='export-to-CSV'\n                    component='button'\n                    onClick={ () => this.props.exportToCSV() }\n                >\n                    Export to CSV\n                </DropdownItem>\n            ],\n            isEmpty: true,\n            dropdownOpen: false\n        };\n    }\n\n    setIsEmpty = (isEmpty) => {\n        this.setState({ isEmpty });\n    }\n\n    onToggle = () => {\n        const { dropdownOpen } = this.state;\n\n        this.setState({\n            dropdownOpen: !dropdownOpen\n        });\n    }\n\n    clearFilters = () => {\n        const { clearComparisonFilters } = this.props;\n\n        clearComparisonFilters();\n    }\n\n    clearComparison = () => {\n        const { history, clearComparison, clearSelectedBaselines, setIsFirstReference, updateReferenceId } = this.props;\n\n        clearComparison();\n        clearSelectedBaselines('CHECKBOX');\n        setIsFirstReference(true);\n        updateReferenceId();\n        setHistory(history, []);\n    }\n\n    render() {\n        const { loading, page, perPage, totalFacts, updatePagination } = this.props;\n        const { actionKebabItems, dropdownItems, dropdownOpen, isEmpty } = this.state;\n\n        return (\n            <React.Fragment>\n                <Toolbar className=\"drift-toolbar\">\n                    <ToolbarContent>\n                        <ToolbarGroup variant='filter-group'>\n                            <ToolbarItem>\n                                <SearchBar />\n                            </ToolbarItem>\n                            <ToolbarItem>\n                                <FilterDropDown />\n                            </ToolbarItem>\n                        </ToolbarGroup>\n                        <ToolbarGroup variant='button-group'>\n                            <ToolbarItem>\n                                <AddSystemButton loading={ loading } />\n                            </ToolbarItem>\n                        </ToolbarGroup>\n                        <ToolbarGroup variant='icon-button-group'>\n                            <ToolbarItem>\n                                <ExportCSVButton\n                                    dropdownItems={ dropdownItems }\n                                    isOpen={ dropdownOpen }\n                                    onToggle={ this.onToggle }\n                                />\n                            </ToolbarItem>\n                            <ToolbarItem>\n                                <ActionKebab dropdownItems={ actionKebabItems } />\n                            </ToolbarItem>\n                        </ToolbarGroup>\n                        <ToolbarItem variant='pagination' align={ { default: 'alignRight' } }>\n                            <TablePagination\n                                page={ page }\n                                perPage={ perPage }\n                                total={ totalFacts }\n                                isCompact={ true }\n                                updatePagination={ updatePagination }\n                                widgetId='drift-pagination-top'\n                                variant={ PaginationVariant.top }\n                            />\n                        </ToolbarItem>\n                    </ToolbarContent>\n                </Toolbar>\n                <Toolbar className=\"drift-toolbar\">\n                    <ToolbarContent>\n                        <ToolbarGroup>\n                            <ToolbarItem>\n                                <DriftFilterChips setIsEmpty={ this.setIsEmpty } />\n                            </ToolbarItem>\n                            { !isEmpty\n                                ? <ToolbarItem>\n                                    <a onClick={ () => this.clearFilters() } >\n                                        Clear filters\n                                    </a>\n                                </ToolbarItem>\n                                : null\n                            }\n                        </ToolbarGroup>\n                    </ToolbarContent>\n                </Toolbar>\n            </React.Fragment>\n        );\n    }\n}\n\nDriftToolbar.propTypes = {\n    loading: PropTypes.bool,\n    history: PropTypes.object,\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n    totalFacts: PropTypes.number,\n    updatePagination: PropTypes.func,\n    clearComparisonFilters: PropTypes.func,\n    clearComparison: PropTypes.func,\n    exportToCSV: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func,\n    setIsFirstReference: PropTypes.func,\n    updateReferenceId: PropTypes.func\n};\n\nexport default DriftToolbar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody, Toolbar, ToolbarGroup, ToolbarItem, PaginationVariant } from '@patternfly/react-core';\nimport { ExclamationCircleIcon, LockIcon, PlusCircleIcon } from '@patternfly/react-icons';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\nimport { compareActions } from '../modules';\nimport { historicProfilesActions } from '../HistoricalProfilesDropdown/redux';\nimport { setHistory } from '../../Utilities/SetHistory';\n\nimport DriftTable from './DriftTable/DriftTable';\nimport ErrorAlert from '../ErrorAlert/ErrorAlert';\nimport TablePagination from '../Pagination/Pagination';\nimport AddSystemButton from './AddSystemButton/AddSystemButton';\nimport DriftToolbar from './DriftToolbar/DriftToolbar';\nimport EmptyStateDisplay from '../EmptyStateDisplay/EmptyStateDisplay';\nimport { PermissionContext } from '../../App';\n\nexport class DriftPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            emptyStateMessage: [\n                'You currently have no system or baselines displayed. Add at least two',\n                'systems or baselines to compare their facts.'\n            ],\n            isFirstReference: true\n        };\n\n        this.props.clearSelectedBaselines('CHECKBOX');\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    setIsFirstReference = (value) => {\n        this.setState({\n            isFirstReference: value\n        });\n    }\n\n    onClose = () => {\n        const { revertCompareData, history, previousStateSystems } = this.props;\n\n        revertCompareData();\n        setHistory(history, previousStateSystems.map(system => system.id));\n    }\n\n    renderEmptyState = () => {\n        const { emptyStateMessage } = this.state;\n        const { error } = this.props;\n\n        if (error.status) {\n            return <EmptyStateDisplay\n                icon={ ExclamationCircleIcon }\n                color='#c9190b'\n                title={ 'Comparison cannot be displayed' }\n                text={ emptyStateMessage }\n                error={\n                    'Error ' + error.status + ': ' + error.detail\n                }\n                button={ <AddSystemButton isTable={ false }/> }\n            />;\n        } else {\n            return <EmptyStateDisplay\n                icon={ PlusCircleIcon }\n                color='#6a6e73'\n                title={ 'Add systems or baselines to compare' }\n                text={ emptyStateMessage }\n                button={ <AddSystemButton isTable={ false }/> }\n            />;\n        }\n    }\n\n    render() {\n        const { clearComparison, clearComparisonFilters, clearSelectedBaselines, emptyState, error, exportToCSV, history,\n            loading, page, perPage, totalFacts, updatePagination, updateReferenceId } = this.props;\n        const { isFirstReference } = this.state;\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='Comparison'/>\n                </PageHeader>\n                <Main>\n                    <PermissionContext.Consumer>\n                        { value =>\n                            value.permissions.compareRead === false\n                                ? <EmptyStateDisplay\n                                    icon={ LockIcon }\n                                    color='#6a6e73'\n                                    title={ 'You do not have access to Drift comparison' }\n                                    text={ [ 'Contact your organization administrator(s) for more information.' ] }\n                                />\n                                : <React.Fragment>\n                                    <ErrorAlert\n                                        error={ error }\n                                        onClose={ this.onClose }\n                                    />\n                                    { emptyState && !loading\n                                        ? this.renderEmptyState()\n                                        : <div></div>\n                                    }\n                                    <Card className='pf-t-light pf-m-opaque-100'>\n                                        <CardBody>\n                                            <div>\n                                                { !emptyState\n                                                    ? <DriftToolbar\n                                                        loading={ loading }\n                                                        history={ history }\n                                                        page={ page }\n                                                        perPage={ perPage }\n                                                        totalFacts={ totalFacts }\n                                                        updatePagination={ updatePagination }\n                                                        clearComparison={ clearComparison }\n                                                        clearComparisonFilters={ clearComparisonFilters }\n                                                        exportToCSV={ exportToCSV }\n                                                        updateReferenceId={ updateReferenceId }\n                                                        setIsFirstReference={ this.setIsFirstReference }\n                                                        clearSelectedBaselines={ clearSelectedBaselines }\n                                                    />\n                                                    : null\n                                                }\n                                                <DriftTable\n                                                    updateReferenceId={ updateReferenceId }\n                                                    error={ error }\n                                                    isFirstReference={ isFirstReference }\n                                                    setIsFirstReference={ this.setIsFirstReference }\n                                                    clearComparison= { clearComparison }\n                                                    hasBaselinesReadPermissions={ value.permissions.baselinesRead }\n                                                    hasBaselinesWritePermissions={ value.permissions.baselinesWrite }\n                                                    hasInventoryReadPermissions={ value.permissions.inventoryRead }\n                                                />\n                                                { !emptyState && !loading ?\n                                                    <Toolbar className=\"drift-toolbar\">\n                                                        <ToolbarGroup className=\"pf-c-pagination\">\n                                                            <ToolbarItem>\n                                                                <TablePagination\n                                                                    page={ page }\n                                                                    perPage={ perPage }\n                                                                    total={ totalFacts }\n                                                                    isCompact={ false }\n                                                                    updatePagination={ updatePagination }\n                                                                    widgetId='drift-pagination-bottom'\n                                                                    variant={ PaginationVariant.bottom }\n                                                                />\n                                                            </ToolbarItem>\n                                                        </ToolbarGroup>\n                                                    </Toolbar>\n                                                    : null\n                                                }\n                                            </div>\n                                        </CardBody>\n                                    </Card>\n                                </React.Fragment>\n                        }\n                    </PermissionContext.Consumer>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nDriftPage.propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    totalFacts: PropTypes.number,\n    error: PropTypes.object,\n    loading: PropTypes.bool,\n    clearSelectedBaselines: PropTypes.func,\n    emptyState: PropTypes.bool,\n    updatePagination: PropTypes.func,\n    updateReferenceId: PropTypes.func,\n    clearComparison: PropTypes.func,\n    clearComparisonFilters: PropTypes.func,\n    history: PropTypes.object,\n    selectHistoricProfiles: PropTypes.func,\n    selectedHSPIds: PropTypes.array,\n    revertCompareData: PropTypes.func,\n    previousStateSystems: PropTypes.array,\n    exportToCSV: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        clearSelectedBaselines: (tableId) => dispatch(baselinesTableActions.clearSelectedBaselines(tableId)),\n        updatePagination: (pagination) => dispatch(compareActions.updatePagination(pagination)),\n        updateReferenceId: (id) => dispatch(compareActions.updateReferenceId(id)),\n        clearComparison: () => dispatch(compareActions.clearComparison()),\n        clearComparisonFilters: () => dispatch(compareActions.clearComparisonFilters()),\n        selectHistoricProfiles: (historicProfileIds) => dispatch(historicProfilesActions.selectHistoricProfiles(historicProfileIds)),\n        revertCompareData: () => dispatch(compareActions.revertCompareData()),\n        exportToCSV: () => dispatch(compareActions.exportToCSV())\n    };\n}\n\nfunction mapStateToProps(state) {\n    return {\n        page: state.compareState.page,\n        perPage: state.compareState.perPage,\n        totalFacts: state.compareState.totalFacts,\n        error: state.compareState.error,\n        loading: state.compareState.loading,\n        emptyState: state.compareState.emptyState,\n        selectedHSPIds: state.historicProfilesState.selectedHSPIds,\n        previousStateSystems: state.compareState.previousStateSystems\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftPage));\n"],"sourceRoot":""}