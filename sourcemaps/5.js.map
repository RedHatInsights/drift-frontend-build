{"version":3,"sources":["webpack:///./src/SmartComponents/DriftPage/DriftTable/drift-table.scss","webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/drift-table.scss?c5df","webpack:///./src/SmartComponents/ErrorAlert/redux/actions.js","webpack:///./src/SmartComponents/AddSystemModal/AddSystemModal.js","webpack:///./src/SmartComponents/DriftPage/AddSystemButton/AddSystemButton.js","webpack:///./src/SmartComponents/StateIcon/StateIcon.js","webpack:///./src/Utilities/SetHistory.js","webpack:///./src/SmartComponents/DriftPage/DriftTable/DriftTable.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/FilterDropDown/FilterDropDown.js","webpack:///./src/SmartComponents/DriftPage/SearchBar/SearchBar.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/redux/actions.js","webpack:///./src/SmartComponents/DriftPage/ActionKebab/ActionKebab.js","webpack:///./src/SmartComponents/ErrorAlert/ErrorAlert.js","webpack:///./src/SmartComponents/DriftPage/Pagination/Pagination.js","webpack:///./src/SmartComponents/DriftPage/DriftPage.js"],"names":["module","exports","push","i","strictUriEncode","objectAssign","encode","value","opts","strict","encodeURIComponent","extract","str","split","parse","formatter","result","arrayFormat","key","accumulator","exec","replace","undefined","concat","parserForArrayFormat","ret","Object","create","trim","forEach","param","parts","shift","val","length","join","decodeURIComponent","keys","sort","reduce","Boolean","Array","isArray","keysSorter","input","a","b","Number","map","stringify","obj","index","encoderForArrayFormat","slice","val2","filter","x","c","charCodeAt","toString","toUpperCase","content","options","transform","update","locals","hot","accept","newContent","idx","Error","dispose","toggleErrorAlert","type","types","OPEN_ERROR_ALERT","AddSystemModal","props","confirmModal","bind","cancelSelection","changeActiveTab","window","insights","chrome","auth","getUser","this","entities","selectedBaselineIds","toggleModal","selectedSystemIds","ids","systems","system","id","baselines","baseline","event","tabIndex","selectActiveTab","activeTab","addSystemModalOpened","Fragment","Modal","title","isOpen","onClose","width","isFooterLeftAligned","actions","Button","variant","onClick","Tabs","activeKey","onSelect","Tab","eventKey","SystemsTable","BaselinesTable","Component","propTypes","cookies","instanceOf","Cookies","isRequired","showModal","PropTypes","bool","number","func","object","array","setSelectedBaselines","withCookies","connect","state","addSystemModalState","compareState","baselinesTableState","dispatch","addSystemModalActions","toggleAddSystemModal","newActiveTab","baselinesTableActions","AddSystemButton","isTable","StateIcon","factState","color","icon","string","setHistory","history","systemIds","baselineIds","search","queryString","system_ids","baseline_ids","DriftTable","setSystemIds","setBaselineIds","fetchCompare","removeSystem","formatDate","location","item","dateString","moment","utc","format","systemBaselineId","clearState","stateFilters","addStateFilter","stateFilter","selected","facts","rows","rowData","renderRowData","size","SkeletonSize","md","fact","systemsBaselinesList","row","find","className","baselineSystemCount","comparisons","expandedRows","includes","name","renderExpandableRowButton","renderRowChild","findSystem","data","display_name","system_profile_exists","Tooltip","position","last_updated","updated","systemsList","baselinesList","addSystems","sortType","ASC","toggleSort","DESC","toggleFactSort","toggleStateSort","loading","stateSort","renderSortButton","factSort","renderSystems","lg","renderAddSystem","factName","expandRow","EmptyState","EmptyStateIcon","PlusCircleIcon","Title","EmptyStateBody","compareData","renderHeaderRow","renderLoadingRows","renderRows","fullCompareData","filteredCompareData","renderTable","renderEmptyState","factFilter","expandRows","withRouter","compareActions","toggleFilterDropDown","OPEN_FILTER_DROPDOWN","FilterDropDown","onToggle","createDropdownItem","toggleDropDown","Checkbox","label","display","isChecked","onChange","dropdownItems","dropdownItem","selectedViewsArray","selectedViews","createDropdownArray","createSelectedViewsString","Dropdown","toggle","DropdownToggle","filterDropdownOpened","filterDropdownActions","SearchBar","updateFactFilter","setState","setFactFilter","changeFactFilter","TextInput","placeholder","aria-label","filterByFact","toggleKebab","TOGGLE_KEBAB","ActionKebab","exportSelect","removeSystemsSelect","exportToCSV","removeSystems","clearSelectedBaselines","DropdownItem","component","style","float","KebabToggle","kebabOpened","isPlain","actionKebabActions","ErrorAlert","revertCompareData","previousStateSystems","errorAlertOpened","Alert","action","AlertActionCloseButton","error","status","detail","errorAlertActions","perPageOptions","TablePagination","onSetPage","onPerPageSelect","page","pagination","perPage","updatePagination","totalFacts","Pagination","itemCount","dropDirection","DropdownDirection","down","DriftPage","Card","CardBody","Toolbar","ToolbarGroup","ToolbarItem"],"mappings":"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","file":"js/5-b02c9d2251e65198d34b.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tformatter(decodeURIComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n};\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n","'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./drift-table.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./drift-table.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./drift-table.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import types from './types';\n\nfunction toggleErrorAlert() {\n    return {\n        type: types.OPEN_ERROR_ALERT\n    };\n}\n\nexport default {\n    toggleErrorAlert\n};\n","import React, { Component } from 'react';\nimport { instanceOf } from 'prop-types';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, Tab, Tabs } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withCookies, Cookies } from 'react-cookie';\n\nimport SystemsTable from '../SystemsTable/SystemsTable';\nimport BaselinesTable from '../BaselinesTable/BaselinesTable';\nimport { addSystemModalActions } from './redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nclass AddSystemModal extends Component {\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n        this.cancelSelection = this.cancelSelection.bind(this);\n        this.changeActiveTab = this.changeActiveTab.bind(this);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    confirmModal() {\n        const { confirmModal, entities, selectedBaselineIds, toggleModal } = this.props;\n\n        confirmModal(entities.selectedSystemIds, selectedBaselineIds);\n        toggleModal();\n    }\n\n    cancelSelection() {\n        this.props.toggleModal();\n    }\n\n    selectedSystemIds() {\n        let ids = this.props.systems.map(function (system) {\n            return system.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    selectedBaselineIds() {\n        let ids = this.props.baselines.map(function (baseline) {\n            return baseline.id;\n        });\n\n        return ids ? ids : [];\n    }\n\n    changeActiveTab(event, tabIndex) {\n        const { selectActiveTab } = this.props;\n\n        selectActiveTab(tabIndex);\n    }\n\n    render() {\n        const { activeTab, addSystemModalOpened } = this.props;\n\n        return (\n            <React.Fragment>\n                <Modal\n                    title=\"Choose systems\"\n                    isOpen={ addSystemModalOpened }\n                    onClose={ this.cancelSelection }\n                    width=\"auto\"\n                    isFooterLeftAligned\n                    actions={ [\n                        <Button\n                            key=\"confirm\"\n                            variant=\"primary\"\n                            onClick={ this.confirmModal }>\n                            Submit\n                        </Button>\n                    ] }\n                >\n                    <Tabs\n                        activeKey={ activeTab }\n                        onSelect={ this.changeActiveTab }\n                    >\n                        <Tab\n                            eventKey={ 0 }\n                            title=\"Systems\"\n                        >\n                            <SystemsTable selectedSystemIds={ this.selectedSystemIds() }/>\n                        </Tab>\n                        <Tab\n                            eventKey={ 1 }\n                            title=\"Baselines\"\n                        >\n                            <BaselinesTable />\n                        </Tab>\n                    </Tabs>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nAddSystemModal.propTypes = {\n    showModal: PropTypes.bool,\n    addSystemModalOpened: PropTypes.bool,\n    activeTab: PropTypes.number,\n    confirmModal: PropTypes.func,\n    cancelSelection: PropTypes.func,\n    toggleModal: PropTypes.func,\n    selectActiveTab: PropTypes.func,\n    entities: PropTypes.object,\n    systems: PropTypes.array,\n    selectedBaselineIds: PropTypes.array,\n    setSelectedBaselines: PropTypes.func,\n    baselines: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        addSystemModalOpened: state.addSystemModalState.addSystemModalOpened,\n        systems: state.compareState.systems,\n        activeTab: state.addSystemModalState.activeTab,\n        entities: state.entities,\n        selectedBaselineIds: state.baselinesTableState.selectedBaselineIds,\n        baselines: state.compareState.baselines\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(addSystemModalActions.toggleAddSystemModal()),\n        selectActiveTab: (newActiveTab) => dispatch(addSystemModalActions.selectActiveTab(newActiveTab)),\n        setSelectedBaselines: (selectedBaselineIds) => dispatch(baselinesTableActions.setSelectedBaselines(selectedBaselineIds))\n    };\n}\n\nexport default withCookies(connect(mapStateToProps, mapDispatchToProps)(AddSystemModal));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@patternfly/react-core';\n\nimport { addSystemModalActions } from '../../AddSystemModal/redux';\n\nclass AddSystemButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Button\n                variant='primary'\n                onClick={ this.props.toggleAddSystemModal }>\n                { this.props.isTable ? 'Add' : 'Add systems or baselines' }\n            </Button>\n        );\n    }\n}\n\nAddSystemButton.propTypes = {\n    toggleAddSystemModal: PropTypes.func,\n    isTable: PropTypes.bool\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleAddSystemModal: (() => dispatch(addSystemModalActions.toggleAddSystemModal()))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddSystemButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckCircleIcon, QuestionCircleIcon, TimesCircleIcon } from '@patternfly/react-icons';\n\nclass StateIcon extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    icon() {\n        let iconClass = '';\n\n        if (this.props.factState === 'SAME') {\n            iconClass = <CheckCircleIcon color='green'/>;\n        } else if (this.props.factState === 'DIFFERENT') {\n            iconClass = <TimesCircleIcon color='red'/>;\n        } else {\n            iconClass = <QuestionCircleIcon />;\n        }\n\n        return iconClass;\n    };\n\n    render() {\n        return (\n            this.icon()\n        );\n    }\n}\n\nStateIcon.propTypes = {\n    factState: PropTypes.string\n};\n\nexport default StateIcon;\n","import queryString from 'query-string';\n\nexport function setHistory(history, systemIds = [], baselineIds = []) {\n    /*eslint-disable camelcase*/\n    history.push({\n        search: '?' + queryString.stringify({ system_ids: systemIds, baseline_ids: baselineIds })\n    });\n    /*eslint-enable camelcase*/\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, Title, Tooltip } from '@patternfly/react-core';\nimport queryString from 'query-string';\nimport { AngleDownIcon, AngleRightIcon, LongArrowAltUpIcon, LongArrowAltDownIcon, ArrowsAltVIcon,\n    CloseIcon, ExclamationTriangleIcon, PlusCircleIcon, ServerIcon } from '@patternfly/react-icons';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport moment from 'moment';\n\nimport AddSystemModal from '../../AddSystemModal/AddSystemModal';\nimport AddSystemButton from '../AddSystemButton/AddSystemButton';\nimport StateIcon from '../../StateIcon/StateIcon';\nimport './drift-table.scss';\nimport { ASC, DESC } from '../../../constants';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport { compareActions } from '../../modules';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\n\nclass DriftTable extends Component {\n    constructor(props) {\n        super(props);\n        this.setSystemIds();\n        this.setBaselineIds();\n        this.fetchCompare = this.fetchCompare.bind(this);\n        this.removeSystem = this.removeSystem.bind(this);\n        this.formatDate = this.formatDate.bind(this);\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n        const { fetchCompare } = this.props;\n\n        fetchCompare(this.systemIds, this.baselineIds);\n    }\n\n    setSystemIds() {\n        this.systemIds = queryString.parse(this.props.location.search).system_ids;\n        this.systemIds = Array.isArray(this.systemIds) ? this.systemIds : [ this.systemIds ];\n        this.systemIds = this.systemIds.filter(item => item !== undefined);\n    }\n\n    setBaselineIds() {\n        this.baselineIds = queryString.parse(this.props.location.search).baseline_ids;\n        this.baselineIds = Array.isArray(this.baselineIds) ? this.baselineIds : [ this.baselineIds ];\n        this.baselineIds = this.baselineIds.filter(item => item !== undefined);\n    }\n\n    formatDate(dateString) {\n        return moment.utc(dateString).format('DD MMM YYYY, HH:mm UTC');\n    }\n\n    removeSystem(systemBaselineId) {\n        const { history, clearState, setSelectedBaselines, stateFilters, addStateFilter } = this.props;\n\n        this.systemIds = this.systemIds.filter(item => item !== systemBaselineId);\n        this.baselineIds = this.baselineIds.filter(item => item !== systemBaselineId);\n\n        if (this.systemIds.length + this.baselineIds.length === 1) {\n            stateFilters.forEach(function(stateFilter) {\n                if (stateFilter.selected === false) {\n                    addStateFilter(stateFilter);\n                }\n            });\n        }\n\n        if (this.systemIds.length > 0 || this.baselineIds.length > 0) {\n            this.fetchCompare(this.systemIds, this.baselineIds);\n        } else {\n            setHistory(history, []);\n            clearState();\n        }\n\n        setSelectedBaselines(this.baselineIds);\n    }\n\n    fetchCompare(systemIds, baselineIds) {\n        if (systemIds.length > 0) {\n            this.systemIds = systemIds;\n        }\n\n        if (baselineIds.length > 0) {\n            this.baselineIds = baselineIds;\n        }\n\n        if (systemIds.length > 0 || baselineIds.length > 0) {\n            setHistory(this.props.history, systemIds, baselineIds);\n            this.props.fetchCompare(systemIds, baselineIds);\n        }\n    }\n\n    renderRows(facts, systems, baselines) {\n        let rows = [];\n        let rowData = [];\n\n        if (facts !== undefined) {\n            for (let i = 0; i < facts.length; i += 1) {\n                rowData = this.renderRowData(facts[i], systems, baselines);\n                rows.push(rowData);\n            }\n        }\n\n        return rows;\n    }\n\n    renderLoadingRows() {\n        let rows = [];\n        let rowData = [];\n\n        for (let i = 0; i < 3; i += 1) {\n            rowData.push(<td><Skeleton size={ SkeletonSize.md } /></td>);\n        }\n\n        for (let i = 0; i < 10; i += 1) {\n            rows.push(<tr>{ rowData }</tr>);\n        }\n\n        return rows;\n    }\n\n    findSystem(fact, systemsBaselinesList) {\n        let row = [];\n\n        for (let i = 0; i < systemsBaselinesList.length; i += 1) {\n            let system = fact.systems.find(function(system) {\n                return system.id === systemsBaselinesList[i].id;\n            });\n            row.push(\n                <td className={ fact.state === 'DIFFERENT' ? 'highlight' : '' }>\n                    { system.value === null ? 'No Data' : system.value }\n                </td>\n            );\n        }\n\n        return row;\n    }\n\n    renderRowData(fact, systems, baselines) {\n        let row = [];\n        let rows = [];\n        let baselineSystemCount = systems.length + baselines.length;\n\n        if (fact.comparisons) {\n            row.push(\n                <td className={\n                    this.props.expandedRows.includes(fact.name) ?\n                        'nested-fact sticky-column fixed-column-1' :\n                        'sticky-column fixed-column-1' }>\n                    { this.renderExpandableRowButton(this.props.expandedRows, fact.name) } { fact.name }\n                </td>\n            );\n            row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n            for (let i = 0; i < baselineSystemCount + 1; i += 1) {\n                row.push(<td></td>);\n            }\n\n            rows.push(<tr>{ row }</tr>);\n\n            for (let i = 0; i < fact.comparisons.length; i++) {\n                row = this.renderRowChild(fact.comparisons[i], systems, baselines);\n                rows.push(<tr>{ row }</tr>);\n            }\n        } else {\n            row.push(<td className=\"sticky-column fixed-column-1\">{ fact.name }</td>);\n            row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n            row = row.concat(this.findSystem(fact, baselines, 'baselines'));\n            row = row.concat(this.findSystem(fact, systems, 'systems'));\n\n            row.push(<td className={ fact.state === 'DIFFERENT' ? 'highlight' : '' }></td>);\n            rows.push(<tr>{ row }</tr>);\n        }\n\n        return rows;\n    }\n\n    renderRowChild(fact, systems, baselines) {\n        let row = [];\n\n        row.push(<td className=\"nested-fact sticky-column fixed-column-1\">\n            <p className=\"child-row\">{ fact.name }</p>\n        </td>);\n        row.push(<td className=\"fact-state sticky-column fixed-column-2\"><StateIcon factState={ fact.state }/></td>);\n\n        row = row.concat(this.findSystem(fact, baselines, 'baselines'));\n        row = row.concat(this.findSystem(fact, systems, 'systems'));\n\n        row.push(<td className={ fact.state === 'DIFFERENT' ? 'highlight' : '' }></td>);\n\n        return row;\n    }\n\n    addSystems(data, type) {\n        let row = [];\n\n        for (let i = 0; i < data.length; i++) {\n            row.push(\n                <th>\n                    <div className={ type === 'baselines' ? 'baseline-header' : 'system-header' }>\n                        <a onClick={ () => this.removeSystem(data[i].id) }>\n                            <CloseIcon className=\"remove-system-icon\"/>\n                        </a>\n                        <ServerIcon className=\"cluster-icon-large\"/>\n                        <div className=\"system-name\">{ data[i].display_name }</div>\n                        <div className=\"system-updated\">\n                            { data[i].system_profile_exists === false ?\n                                <Tooltip\n                                    position='top'\n                                    content={\n                                        <div>System profile does not exist. Please run insights-client on system to upload archive.</div>\n                                    }\n                                >\n                                    <ExclamationTriangleIcon color=\"#f0ab00\"/>\n                                </Tooltip> : ''\n                            }\n                            { data[i].last_updated\n                                ? this.formatDate(data[i].last_updated)\n                                : this.formatDate(data[i].updated)\n                            }\n                        </div>\n                    </div>\n                </th>\n            );\n        }\n\n        return row;\n    }\n\n    renderSystems(systems, baselines) {\n        let baselinesList = [];\n        let systemsList = [];\n        let row = [];\n\n        if (systems === undefined && baselines === undefined) {\n            return row;\n        }\n\n        baselinesList = this.addSystems(baselines, 'baselines');\n        systemsList = this.addSystems(systems, 'systems');\n\n        row = baselinesList.concat(systemsList);\n\n        return row;\n    }\n\n    renderSortButton(sortType, sort) {\n        let sortIcon;\n\n        if (sort === ASC) {\n            sortIcon = <LongArrowAltUpIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else if (sort === DESC) {\n            sortIcon = <LongArrowAltDownIcon className=\"pointer active-blue\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n        else {\n            sortIcon = <ArrowsAltVIcon className=\"pointer not-active\" onClick={ () => this.toggleSort(sortType, sort) }/>;\n        }\n\n        return sortIcon;\n    }\n\n    toggleSort(sortType, sort) {\n        if (sortType === 'fact') {\n            this.props.toggleFactSort(sort);\n        } else {\n            this.props.toggleStateSort(sort);\n        }\n    }\n\n    renderHeaderRow(systems, baselines, loading) {\n        const { stateSort } = this.props;\n\n        return (\n            <tr className=\"sticky-column-header\">\n                <th className=\"fact-header sticky-column fixed-column-1\">\n                    <div className=\"active-blue\">Fact { this.renderSortButton('fact', this.props.factSort) }</div>\n                </th>\n                <th className=\"state-header sticky-column fixed-column-2\">\n                    { stateSort !== '' ?\n                        <div className=\"active-blue\">State { this.renderSortButton('state', this.props.stateSort) }</div> :\n                        <div>State { this.renderSortButton('state', this.props.stateSort) }</div>\n                    }\n                </th>\n                { this.renderSystems(systems, baselines) }\n                <th>\n                    { loading ? <Skeleton size={ SkeletonSize.lg } /> : this.renderAddSystem() }\n                </th>\n            </tr>\n        );\n    }\n\n    renderExpandableRowButton(expandedRows, factName) {\n        let expandIcon;\n\n        if (expandedRows.includes(factName)) {\n            expandIcon = <AngleDownIcon className=\"pointer active-blue\" onClick={ () => this.props.expandRow(factName) } />;\n        } else {\n            expandIcon = <AngleRightIcon className=\"pointer\" onClick={ () => this.props.expandRow(factName) } />;\n        }\n\n        return expandIcon;\n    }\n\n    renderEmptyState() {\n        return (\n            <center>\n                <EmptyState>\n                    <EmptyStateIcon icon={ PlusCircleIcon } />\n                    <br></br>\n                    <Title size=\"lg\">Add systems or baselines to compare</Title>\n                    <EmptyStateBody>\n                        You currently have no systems or baselines displayed. Add at least two\n                        <br></br>\n                        systems or baselines to compare their facts.\n                    </EmptyStateBody>\n                    <AddSystemButton isTable={ false }/>\n                </EmptyState>\n            </center>\n        );\n    }\n\n    renderAddSystem() {\n        return (\n            <div className=\"add-system-header\">\n                <div className=\"add-system-icon\">\n                    <PlusCircleIcon/>\n                </div>\n                <AddSystemButton isTable={ true }/>\n            </div>\n        );\n    }\n\n    renderTable(compareData, systems, baselines, loading) {\n        return (\n            <React.Fragment>\n                <div className=\"drift-table-wrapper\">\n                    <table className=\"pf-c-table ins-c-table pf-m-compact ins-entity-table drift-table\">\n                        <thead>\n                            { this.renderHeaderRow(systems, baselines, loading) }\n                        </thead>\n                        <tbody>\n                            { loading ? this.renderLoadingRows() : this.renderRows(compareData, systems, baselines) }\n                        </tbody>\n                    </table>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { fullCompareData, filteredCompareData, systems, baselines, loading } = this.props;\n\n        return (\n            <React.Fragment>\n                <AddSystemModal\n                    selectedSystemIds={ systems.map(system => system.id) }\n                    confirmModal={ this.fetchCompare }\n                />\n                { systems.length > 0 || baselines.length > 0 || loading || (fullCompareData.length !== 0 && this.systemIds.length !== 0) ?\n                    this.renderTable(filteredCompareData, systems, baselines, loading) : this.renderEmptyState()\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        fullCompareData: state.compareState.fullCompareData,\n        filteredCompareData: state.compareState.filteredCompareData,\n        addSystemModalOpened: state.addSystemModalOpened,\n        stateFilters: state.compareState.stateFilters,\n        factFilter: state.compareState.factFilter,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines,\n        factSort: state.compareState.factSort,\n        stateSort: state.compareState.stateSort,\n        expandedRows: state.compareState.expandedRows\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchCompare: (systemIds, baselineIds) => dispatch(compareActions.fetchCompare(systemIds, baselineIds)),\n        toggleFactSort: (sortType) => dispatch(compareActions.toggleFactSort(sortType)),\n        toggleStateSort: (sortType) => dispatch(compareActions.toggleStateSort(sortType)),\n        expandRow: (factName) => dispatch(compareActions.expandRow(factName)),\n        clearState: () => dispatch(compareActions.clearState()),\n        setSelectedBaselines: (selectedBaselineIds) => dispatch(baselinesTableActions.setSelectedBaselines(selectedBaselineIds)),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nDriftTable.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object,\n    fetchCompare: PropTypes.func,\n    clearState: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    filteredCompareData: PropTypes.array,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    addSystemModalOpened: PropTypes.bool,\n    stateFilters: PropTypes.string,\n    factFilter: PropTypes.string,\n    factSort: PropTypes.string,\n    stateSort: PropTypes.string,\n    loading: PropTypes.bool,\n    toggleFactSort: PropTypes.func,\n    toggleStateSort: PropTypes.func,\n    expandRow: PropTypes.func,\n    expandRows: PropTypes.func,\n    expandedRows: PropTypes.array,\n    setSelectedBaselines: PropTypes.func,\n    addStateFilter: PropTypes.func\n};\n\nexport default withRouter (connect(mapStateToProps, mapDispatchToProps)(DriftTable));\n","import types from './types';\n\nfunction toggleFilterDropDown() {\n    return {\n        type: types.OPEN_FILTER_DROPDOWN\n    };\n}\n\nexport default {\n    toggleFilterDropDown\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox, Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { filterDropdownActions } from './redux';\n\nclass FilterDropDown extends Component {\n    constructor(props) {\n        super(props);\n        this.onToggle = this.onToggle.bind(this);\n        this.createDropdownItem = this.createDropdownItem.bind(this);\n    }\n\n    onToggle() {\n        this.props.toggleDropDown();\n    }\n\n    createDropdownItem(stateFilter) {\n        let dropdownItem = <Checkbox\n            className=\"state-filter-checkbox\"\n            label={ stateFilter.display }\n            isChecked={ stateFilter.selected }\n            onChange={ () =>\n                this.props.addStateFilter(stateFilter)\n            } />;\n\n        return dropdownItem;\n    }\n\n    createDropdownArray(stateFilters) {\n        let dropdownItems = [];\n\n        stateFilters.forEach(function(stateFilter) {\n            let dropdownItem = this.createDropdownItem(stateFilter);\n            dropdownItems.push(dropdownItem);\n        }.bind(this));\n\n        return dropdownItems;\n    }\n\n    createSelectedViewsString(stateFilters) {\n        let selectedViewsArray = [];\n        let selectedViews = '';\n\n        for (let i = 0; i < stateFilters.length; i++) {\n            if (stateFilters[i].selected) {\n                selectedViewsArray.push(stateFilters[i].display);\n            }\n        }\n\n        for (let i = 0; i < selectedViewsArray.length; i++) {\n            selectedViews += selectedViewsArray[i];\n\n            if ((i + 1) < selectedViewsArray.length) {\n                selectedViews += ', ';\n            }\n        }\n\n        return selectedViews;\n    }\n\n    render() {\n        const { stateFilters } = this.props;\n        let dropdownItems = [];\n        let selectedViews = '';\n\n        dropdownItems = this.createDropdownArray(stateFilters);\n        selectedViews = this.createSelectedViewsString(stateFilters);\n\n        return (\n            <React.Fragment>\n                <Dropdown\n                    className=\"state-filter-dropdown\"\n                    onSelect={ this.onToggle }\n                    toggle={ <DropdownToggle onToggle={ this.onToggle }>\n                        View: { selectedViews }\n                    </DropdownToggle> }\n                    isOpen={ this.props.filterDropdownOpened }\n                    dropdownItems={ dropdownItems }\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nFilterDropDown.propTypes = {\n    toggleDropDown: PropTypes.func,\n    filterDropdownOpened: PropTypes.bool,\n    stateFilters: PropTypes.array,\n    addStateFilter: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        filterDropdownOpened: state.filterDropdownOpened,\n        stateFilters: state.compareState.stateFilters\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleDropDown: () => dispatch(filterDropdownActions.toggleFilterDropDown()),\n        addStateFilter: (filter) => dispatch(compareActions.addStateFilter(filter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(FilterDropDown));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { TextInput } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { compareActions } from '../../modules';\n\nexport class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: this.props.factFilter\n        };\n\n        this.setFactFilter = this.setFactFilter.bind(this);\n    }\n\n    updateFactFilter = (filter) => {\n        this.setState({ filter });\n        this.setFactFilter(filter);\n    }\n\n    setFactFilter = _.debounce(function(filter) {\n        this.props.changeFactFilter(filter);\n    }, 250);\n\n    render() {\n        return (\n            <React.Fragment>\n                <TextInput\n                    value={ this.state.filter }\n                    id=\"filterByFact\"\n                    placeholder=\"Filter by fact\"\n                    onChange={ this.updateFactFilter }\n                    aria-label=\"filter by fact\"\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nSearchBar.propTypes = {\n    changeFactFilter: PropTypes.func,\n    factFilter: PropTypes.string\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factFilter: state.compareState.factFilter\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeFactFilter: (factFilter) => dispatch(compareActions.filterByFact(factFilter))\n    };\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(SearchBar));\n","import types from './types';\n\nfunction toggleKebab() {\n    return {\n        type: types.TOGGLE_KEBAB\n    };\n}\n\nexport default {\n    toggleKebab\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../../modules';\nimport { actionKebabActions } from './redux';\nimport { Dropdown, KebabToggle, DropdownItem } from '@patternfly/react-core';\nimport { setHistory } from '../../../Utilities/SetHistory';\n\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\n\nclass ActionKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.exportSelect = this.exportSelect.bind(this);\n        this.removeSystemsSelect = this.removeSystemsSelect.bind(this);\n    }\n\n    exportSelect() {\n        this.props.toggleKebab();\n        this.props.exportToCSV();\n    }\n\n    removeSystemsSelect() {\n        const { history, toggleKebab, removeSystems, clearSelectedBaselines } = this.props;\n\n        toggleKebab();\n        removeSystems();\n        clearSelectedBaselines();\n        setHistory(history, []);\n    }\n\n    render() {\n        const dropdownItems = [\n            <DropdownItem key=\"export\" component=\"button\" onClick={ this.exportSelect }>Export as CSV</DropdownItem>,\n            <DropdownItem key=\"remove-systems\" component=\"button\" onClick={ this.removeSystemsSelect }>Clear all comparisons</DropdownItem>\n        ];\n        return (\n            <Dropdown\n                style={ { float: 'left' } }\n                className={ 'action-kebab' }\n                toggle={ <KebabToggle onToggle={ this.props.toggleKebab } /> }\n                isOpen={ this.props.kebabOpened }\n                dropdownItems={ dropdownItems }\n                isPlain\n            />\n        );\n    }\n}\n\nActionKebab.propTypes = {\n    exportToCSV: PropTypes.func,\n    removeSystems: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func,\n    toggleKebab: PropTypes.func,\n    kebabOpened: PropTypes.bool,\n    history: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    return {\n        kebabOpened: state.kebabOpened\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        exportToCSV: () => dispatch(compareActions.exportToCSV()),\n        removeSystems: () => dispatch(compareActions.clearState()),\n        clearSelectedBaselines: () => dispatch(baselinesTableActions.clearSelectedBaselines()),\n        toggleKebab: () => dispatch(actionKebabActions.toggleKebab())\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ActionKebab));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton } from '@patternfly/react-core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { compareActions } from '../modules';\nimport { errorAlertActions } from './redux';\nimport { setHistory } from '../../Utilities/SetHistory';\n\nclass ErrorAlert extends Component {\n    constructor(props) {\n        super(props);\n        this.confirmModal = this.confirmModal.bind(this);\n    }\n\n    confirmModal() {\n        const { toggleModal, revertCompareData, history, previousStateSystems } = this.props;\n\n        toggleModal();\n        revertCompareData();\n        setHistory(history, previousStateSystems.map(system => system.id));\n    }\n\n    render() {\n        const { errorAlertOpened } = this.props;\n        return (\n            <React.Fragment>\n                { errorAlertOpened && (\n                    <Alert\n                        variant=\"danger\"\n                        title=\"Error\"\n                        action={\n                            <AlertActionCloseButton\n                                onClose={ () => this.confirmModal() }\n                            /> }\n                    >\n                        Status Code: { this.props.error.status }<br></br>\n                        { this.props.error.detail }\n                    </Alert>\n                ) }\n            </React.Fragment>\n        );\n    }\n}\n\nErrorAlert.propTypes = {\n    confirmModal: PropTypes.func,\n    errorAlertOpened: PropTypes.bool,\n    error: PropTypes.object,\n    status: PropTypes.number,\n    detail: PropTypes.string,\n    toggleModal: PropTypes.func,\n    history: PropTypes.object,\n    clearState: PropTypes.func,\n    fullCompareData: PropTypes.array,\n    revertCompareData: PropTypes.func,\n    previousStateSystems: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        fullCompareData: state.compareState.fullCompareData,\n        previousStateSystems: state.compareState.previousStateSystems,\n        errorAlertOpened: state.errorAlertOpened,\n        error: state.compareState.error\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleModal: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        revertCompareData: () => dispatch(compareActions.revertCompareData())\n    };\n}\n\nexport default withRouter (connect(mapStateToProps, mapDispatchToProps)(ErrorAlert));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { compareActions } from '../../modules';\nimport { Pagination, DropdownDirection } from '@patternfly/react-core';\n\nconst perPageOptions = [\n    { title: '10', value: 10 },\n    { title: '25', value: 25 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nclass TablePagination extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onSetPage = this.onSetPage.bind(this);\n        this.onPerPageSelect = this.onPerPageSelect.bind(this);\n    }\n\n    onSetPage(event, page) {\n        const { perPage } = this.props;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    onPerPageSelect(event, perPage) {\n        const page = 1;\n        const pagination = { page, perPage };\n        this.props.updatePagination(pagination);\n    }\n\n    render() {\n        const { totalFacts, page, perPage } = this.props;\n\n        return (\n            <Pagination\n                itemCount={ totalFacts }\n                perPageOptions={ perPageOptions }\n                page={ totalFacts === 0 ? 0 : page }\n                perPage={ perPage }\n                dropDirection={ DropdownDirection.down }\n                onSetPage={ this.onSetPage }\n                onPerPageSelect={ this.onPerPageSelect }\n            />\n        );\n    }\n}\n\nTablePagination.propTypes = {\n    perPage: PropTypes.number,\n    page: PropTypes.number,\n    updatePagination: PropTypes.func,\n    totalFacts: PropTypes.number\n};\n\nfunction mapStateToProps(state) {\n    return {\n        page: state.compareState.page,\n        perPage: state.compareState.perPage,\n        totalFacts: state.compareState.totalFacts\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updatePagination: ((pagination) => dispatch(compareActions.updatePagination(pagination)))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePagination);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody, Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core';\nimport { errorAlertActions } from '../ErrorAlert/redux';\nimport { baselinesTableActions } from '../BaselinesTable/redux';\n\nimport DriftTable from './DriftTable/DriftTable';\nimport FilterDropDown from './FilterDropDown/FilterDropDown';\nimport SearchBar from './SearchBar/SearchBar';\nimport ActionKebab from './ActionKebab/ActionKebab';\nimport ErrorAlert from '../ErrorAlert/ErrorAlert';\nimport TablePagination from './Pagination/Pagination';\n\nclass DriftPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.props.clearSelectedBaselines();\n    }\n\n    async componentDidMount() {\n        await window.insights.chrome.auth.getUser();\n    }\n\n    render() {\n        const { systems, baselines, loading } = this.props;\n\n        if (this.props.error.detail) {\n            this.props.toggleErrorAlert();\n        }\n\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title='System Comparison'/>\n                </PageHeader>\n                <Main>\n                    <ErrorAlert />\n                    <Card className='pf-t-light pf-m-opaque-100'>\n                        <CardBody>\n                            { (systems.length > 0 || baselines.length > 0) && !loading ?\n                                <Toolbar className=\"drift-toolbar\">\n                                    <ToolbarGroup>\n                                        <ToolbarItem>\n                                            <SearchBar />\n                                        </ToolbarItem>\n                                        <ToolbarItem>\n                                            <FilterDropDown />\n                                        </ToolbarItem>\n                                        <ToolbarItem>\n                                            <ActionKebab />\n                                        </ToolbarItem>\n                                    </ToolbarGroup>\n                                    <ToolbarGroup className=\"pf-c-pagination\">\n                                        <ToolbarItem>\n                                            <TablePagination />\n                                        </ToolbarItem>\n                                    </ToolbarGroup>\n                                </Toolbar>\n                                : null\n                            }\n                            <div>\n                                <DriftTable />\n                            </div>\n                        </CardBody>\n                        { systems.length > 0 && !loading ?\n                            <Toolbar className=\"drift-toolbar\">\n                                <ToolbarGroup className=\"pf-c-pagination\">\n                                    <ToolbarItem>\n                                        <TablePagination />\n                                    </ToolbarItem>\n                                </ToolbarGroup>\n                            </Toolbar>\n                            : null\n                        }\n                    </Card>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nDriftPage.propTypes = {\n    error: PropTypes.object,\n    loading: PropTypes.bool,\n    systems: PropTypes.array,\n    baselines: PropTypes.array,\n    toggleErrorAlert: PropTypes.func,\n    clearSelectedBaselines: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleErrorAlert: () => dispatch(errorAlertActions.toggleErrorAlert()),\n        clearSelectedBaselines: () => dispatch(baselinesTableActions.clearSelectedBaselines())\n    };\n}\n\nfunction mapStateToProps(state) {\n    return {\n        error: state.compareState.error,\n        loading: state.compareState.loading,\n        systems: state.compareState.systems,\n        baselines: state.compareState.baselines\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DriftPage));\n"],"sourceRoot":""}