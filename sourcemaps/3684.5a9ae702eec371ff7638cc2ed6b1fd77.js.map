{"version":3,"file":"js/3684.1672767155588.270741be9e7687e7abba.js","mappings":"m0BAiCA,QAzBc,WACV,OAAkCA,EAAAA,EAAAA,YAAlC,eAAQC,EAAR,KAAkBC,EAAlB,KACMC,EAAQF,aAAH,EAAGA,EAAUA,SAASG,WAC3BC,GAAWC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,GAAYC,OAAOC,SAASC,SAAlC,GAA6C,IAUtE,OARAC,EAAAA,EAAAA,YAAU,WAGN,OAFAT,GAAYU,EAAAA,EAAAA,OAEL,WACHV,OAAYW,EACf,CACJ,GAAE,IAEIZ,EACH,kBAAC,aAAD,CAA0Ba,MAAK,KACxBb,IAEH,kBAAC,EAAAc,SAAD,CAAUZ,MAAQA,GACd,kBAAC,gBAAD,CAAQE,SAAWA,GACf,kBAAC,IAAD,SAGkB,EACrC,C","sources":["webpack:///./src/AppEntry.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\nimport { RegistryContext } from './Utilities/registry';\nimport getBaseName from './Utilities/getBaseName';\n\nconst Drift = () => {\n    const [ registry, setRegistry ] = useState();\n    const store = registry?.registry.getStore();\n    const basename = useMemo(() => getBaseName(window.location.pathname), []);\n\n    useEffect(() =>{\n        setRegistry(init());\n\n        return () => {\n            setRegistry(undefined);\n        };\n    }, []);\n\n    return registry ?\n        <RegistryContext.Provider value={{\n            ...registry\n        }}>\n            <Provider store={ store }>\n                <Router basename={ basename }>\n                    <App/>\n                </Router>\n            </Provider>\n        </RegistryContext.Provider> : '';\n};\n\nexport default Drift;\n"],"names":["useState","registry","setRegistry","store","getStore","basename","useMemo","getBaseName","window","location","pathname","useEffect","init","undefined","value","Provider"],"sourceRoot":""}