{"version":3,"sources":["webpack://drift-frontend/./src/SmartComponents/BaselinesPage/EditBaseline/DeleteFactModal/helpers.js","webpack://drift-frontend/./src/SmartComponents/BaselinesPage/EditBaseline/EditBaselineKebab/EditBaselineKebab.js","webpack://drift-frontend/./src/SmartComponents/BaselinesPage/EditBaseline/AddFactButton/AddFactButton.js","webpack://drift-frontend/./src/SmartComponents/BaselinesPage/EditBaseline/EditBaselineToolbar/EditBaselineToolbar.js","webpack://drift-frontend/./src/SmartComponents/BaselinesPage/EditBaseline/FactModal/FactModal.js","webpack://drift-frontend/./src/SmartComponents/BaselinesPage/EditBaseline/EditBaselineNameModal/EditBaselineNameModal.js","webpack://drift-frontend/./src/SmartComponents/BaselinesPage/EditBaseline/EditBaseline.js"],"names":["editBaselineTableData","categories","facts","forEach","fact","selected","editBaselineHelpers","subFact","EditBaselineKebab","props","isDisabled","state","kebabOpened","modalOpened","toggleKebab","setState","toggleModalOpened","dropdownItems","categoryMessage","factMessage","this","deleteFactModalHelpers","DropdownItem","key","component","data-ouia-component-id","onClick","length","DeleteFactModal","toggleModal","bind","Dropdown","style","float","toggle","KebabToggle","data-ouia-component-type","onToggle","isOpen","isPlain","ouiaId","Component","propTypes","PropTypes","connect","editBaselineState","AddFactButton","handleAddFact","setFactData","toggleFactModal","factName","factValue","editBaselineEmptyState","hasWritePermissions","undefined","Button","variant","Tooltip","content","className","dispatch","editBaselineActions","factData","EditBaselineToolbar","dropdownOpen","bulkSelectItems","title","onBulkSelect","exportToCSV","tableData","baselineData","totalFacts","Toolbar","ToolbarContent","ToolbarItem","BulkSelect","count","items","checked","helpers","onSelect","ToolbarGroup","ExportCSVButton","FactModal","checkKeyPress","event","preventDefault","confirmModal","cancelFact","renderCategoryCheckbox","renderFactInput","renderValueInput","renderModalBody","isCategory","isAddFact","isEditFact","handleChange","handleNewName","value","handleNewValue","patchBaseline","fetchBaselineData","newAPIBody","addFact","editFact","id","newFactData","editedFactData","Checkbox","aria-label","label","name","onChange","isChecked","inlineError","FormGroup","isRequired","helperTextInvalid","Object","prototype","hasOwnProperty","call","detail","validated","fieldId","onKeyPress","TextInput","type","placeholder","ValidatedOptions","isSubFact","status","Alert","isInline","Form","factModalOpened","Modal","ModalVariant","onClose","actions","baselineId","newBaselineBody","baselineUUID","EditBaselineNameModal","cancelModal","toggleEditNameModal","updateBaselineName","display_name","baselineName","facts_patch","error","hasError","EditBaseline","retryBaselineFetch","clearErrorData","fetchBaselineId","renderPageHeader","hasReadPermissions","baselineDataLoading","PageHeader","Skeleton","size","SkeletonSize","renderBreadcrumb","renderPageTitle","PageHeaderTitle","isSelected","selectFact","Number","target","FACT_ID","push","renderCheckbox","FACT_VALUE","FACT_NAME","errorMessage","loadingColumns","transforms","cellWidth","goToBaselinesList","params","match","window","insights","chrome","auth","getUser","appAction","appObjectId","document","clearBaselineData","fetchBaselines","history","Breadcrumb","BreadcrumbItem","BreadcrumbHeading","EditAltIcon","SkeletonTable","columns","rowSize","canSelectAll","isSelectable","expandedRows","includes","AngleDownIcon","expandRow","AngleRightIcon","row","rows","baseline_facts","find","baselineFact","renderExpandableRowButton","category","rowData","i","renderRowData","editBaselineError","EmptyStateDisplay","icon","ExclamationCircleIcon","color","text","button","UndoIcon","renderHeaderRow","renderRows","permissions","baselinesRead","baselinesWrite","Main","LockIcon","ErrorAlert","renderEmptyState","Card","CardBody","renderLoadingRows","renderTable","withRouter","tableId","baselinesTableActions","exportData","baselineRowData"],"mappings":"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","file":"js/190.1479ccb94459eaae8d3c.js","sourcesContent":["import editBaselineHelpers from '../helpers';\n\nfunction countFacts(editBaselineTableData) {\n    let categories = 0;\n    let facts = 0;\n\n    editBaselineTableData.forEach(function(fact) {\n        if (fact.selected) {\n            if (editBaselineHelpers.isCategory(fact)) {\n                categories += 1;\n            } else {\n                facts += 1;\n            }\n        } else if (editBaselineHelpers.isCategory(fact)) {\n            editBaselineHelpers.baselineSubFacts(fact).forEach(function(subFact) {\n                if (subFact.selected) {\n                    facts += 1;\n                }\n            });\n        }\n    });\n\n    return { categories, facts };\n}\n\nexport default {\n    countFacts\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Dropdown, KebabToggle, DropdownItem } from '@patternfly/react-core';\n\nimport DeleteFactModal from '../DeleteFactModal/DeleteFactModal';\nimport editBaselineHelpers from '../helpers';\nimport deleteFactModalHelpers from '../DeleteFactModal/helpers';\n\nclass EditBaselineKebab extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            kebabOpened: false,\n            modalOpened: false\n        };\n\n        this.toggleKebab = () => {\n            const { kebabOpened } = this.state;\n            this.setState({\n                kebabOpened: !kebabOpened\n            });\n        };\n\n        this.toggleModalOpened = () => {\n            const { modalOpened } = this.state;\n            this.setState({\n                modalOpened: !modalOpened,\n                kebabOpened: false\n            });\n        };\n    }\n\n    isDisabled = () => {\n        const { editBaselineTableData } = this.props;\n        let isDisabled = true;\n\n        editBaselineTableData.forEach((fact) => {\n            if (fact.selected) {\n                isDisabled = false;\n            }\n\n            if (editBaselineHelpers.isCategory(fact)) {\n                editBaselineHelpers.baselineSubFacts(fact).forEach((subFact) => {\n                    if (subFact.selected) {\n                        isDisabled = false;\n                    }\n                });\n            }\n        });\n\n        return isDisabled;\n    }\n\n    render() {\n        const { kebabOpened, modalOpened } = this.state;\n        const { editBaselineTableData } = this.props;\n        let dropdownItems;\n        let categoryMessage;\n        let factMessage;\n        let { categories, facts } = deleteFactModalHelpers.countFacts(editBaselineTableData);\n\n        if (categories > 0) {\n            categoryMessage = categories === 1 ? '1 category' : categories + ' categories';\n        }\n\n        if (facts > 0) {\n            factMessage = facts === 1 ? '1 fact' : facts + ' facts';\n        }\n\n        dropdownItems = [\n            <DropdownItem\n                key=\"multi-delete\"\n                component=\"button\"\n                data-ouia-component-id='delete-facts-dropdown-item'\n                onClick={ this.toggleModalOpened }\n                isDisabled={ editBaselineTableData.length > 0 ? this.isDisabled() : true }\n            >\n                Delete facts\n            </DropdownItem>\n        ];\n\n        return (\n            <React.Fragment>\n                { modalOpened ? <DeleteFactModal\n                    toggleModal={ this.toggleModalOpened.bind(this) }\n                    modalOpened={ modalOpened }\n                    categoryMessage={ categoryMessage }\n                    factMessage={ factMessage }\n                /> : null }\n                <Dropdown\n                    style={{ float: 'left' }}\n                    toggle={ <KebabToggle\n                        data-ouia-component-id='delete-facts-dropdown-toggle'\n                        data-ouia-component-type='PF4/DropdownToggle'\n                        onToggle={ this.toggleKebab } /> }\n                    isOpen={ kebabOpened }\n                    dropdownItems={ dropdownItems }\n                    isPlain\n                    ouiaId='delete-facts-dropdown'\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nEditBaselineKebab.propTypes = {\n    editBaselineTableData: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n    return {\n        editBaselineTableData: state.editBaselineState.editBaselineTableData\n    };\n}\n\nexport default connect(mapStateToProps, null)(EditBaselineKebab);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Tooltip } from '@patternfly/react-core';\n\nimport { editBaselineActions } from '../redux';\n\nclass AddFactButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleAddFact = () => {\n        const { setFactData, toggleFactModal } = this.props;\n\n        setFactData({ factName: '', factValue: '', fact: []});\n        toggleFactModal();\n    }\n\n    render() {\n        const { editBaselineEmptyState, hasWritePermissions, isDisabled } = this.props;\n\n        return (\n            <React.Fragment>\n                { !hasWritePermissions && hasWritePermissions !== undefined\n                    ? <Tooltip\n                        content={ <div>You do not have permissions to perform this action</div> }\n                    >\n                        <div className={ editBaselineEmptyState ? 'tooltip-button-margin' : null }>\n                            <Button\n                                variant='primary'\n                                isDisabled\n                                onClick={ this.handleAddFact }\n                                ouiaId='add-fact-or-category-button'\n                            >\n                                Add fact or category\n                            </Button>\n                        </div>\n                    </Tooltip>\n                    : <Button\n                        variant='primary'\n                        isDisabled={ isDisabled }\n                        onClick={ this.handleAddFact }\n                        ouiaId='add-fact-or-category-button'\n                    >\n                        Add fact or category\n                    </Button>\n                }\n            </React.Fragment>\n        );\n    };\n}\n\nAddFactButton.propTypes = {\n    toggleFactModal: PropTypes.func,\n    setFactData: PropTypes.func,\n    isDisabled: PropTypes.bool,\n    hasWritePermissions: PropTypes.bool,\n    editBaselineEmptyState: PropTypes.bool\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleFactModal: () => dispatch(editBaselineActions.toggleFactModal()),\n        setFactData: (factData) => dispatch(editBaselineActions.setFactData(factData))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddFactButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DropdownItem, Toolbar, ToolbarGroup, ToolbarItem, ToolbarContent } from '@patternfly/react-core';\nimport { BulkSelect } from '@redhat-cloud-services/frontend-components';\n\nimport EditBaselineKebab from '../EditBaselineKebab/EditBaselineKebab';\nimport AddFactButton from '../AddFactButton/AddFactButton';\nimport helpers from '../../../helpers';\nimport ExportCSVButton from '../../../ExportCSVButton/ExportCSVButton';\n\nexport class EditBaselineToolbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bulkSelectItems: [\n                {\n                    title: 'Select all',\n                    key: 'select-all',\n                    onClick: () => this.props.onBulkSelect(true)\n                }, {\n                    title: 'Select none',\n                    key: 'select-none',\n                    onClick: () => this.props.onBulkSelect(false)\n                }\n            ],\n            dropdownOpen: false,\n            dropdownItems: [\n                <DropdownItem\n                    key='export-to-CSV'\n                    component='button'\n                    ouiaId='edit-baseline-export-to-csv'\n                    onClick={ () => this.props.exportToCSV(this.props.tableData, this.props.baselineData) }\n                >\n                    Export to CSV\n                </DropdownItem>\n            ]\n        };\n    }\n\n    onToggle = () => {\n        const { dropdownOpen } = this.state;\n\n        this.setState({\n            dropdownOpen: !dropdownOpen\n        });\n    }\n\n    render() {\n        const { hasWritePermissions, isDisabled, onBulkSelect, selected, totalFacts } = this.props;\n        const { bulkSelectItems, dropdownItems, dropdownOpen } = this.state;\n\n        return (\n            <Toolbar className='drift-toolbar'>\n                <ToolbarContent>\n                    <ToolbarItem>\n                        <BulkSelect\n                            count={ selected > 0 ? selected : null }\n                            items={ bulkSelectItems }\n                            checked={ helpers.findCheckedValue(totalFacts, selected) }\n                            onSelect={ () => onBulkSelect(!selected > 0) }\n                            isDisabled={ isDisabled }\n                            ouiaId='edit-baseline-bulk-selector-dropdown'\n                        />\n                    </ToolbarItem>\n                    <ToolbarItem>\n                        <AddFactButton\n                            isDisabled={ isDisabled }\n                            hasWritePermissions={ hasWritePermissions }\n                        />\n                    </ToolbarItem>\n                    <ToolbarGroup variant='icon-button-group'>\n                        <ToolbarItem>\n                            <ExportCSVButton\n                                dropdownItems={ dropdownItems }\n                                isOpen={ dropdownOpen }\n                                onToggle={ this.onToggle }\n                                ouiaId='edit-baseline-export-dropdown'\n                            />\n                        </ToolbarItem>\n                        <ToolbarItem>\n                            <EditBaselineKebab />\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                </ToolbarContent>\n            </Toolbar>\n        );\n    };\n}\n\nEditBaselineToolbar.propTypes = {\n    isDisabled: PropTypes.bool,\n    onBulkSelect: PropTypes.func,\n    selected: PropTypes.any,\n    totalFacts: PropTypes.number,\n    exportToCSV: PropTypes.func,\n    tableData: PropTypes.array,\n    baselineData: PropTypes.object,\n    hasWritePermissions: PropTypes.bool\n};\n\nexport default EditBaselineToolbar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Alert, Button, Checkbox, Form, FormGroup, Modal, ModalVariant, TextInput, ValidatedOptions } from '@patternfly/react-core';\n\nimport { editBaselineActions } from '../redux';\nimport editBaselineHelpers from '../helpers';\n\nexport class FactModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.cancelFact = this.cancelFact.bind(this);\n        this.confirmModal = this.confirmModal.bind(this);\n        this.renderCategoryCheckbox = this.renderCategoryCheckbox.bind(this);\n        this.renderFactInput = this.renderFactInput.bind(this);\n        this.renderValueInput = this.renderValueInput.bind(this);\n        this.renderModalBody = this.renderModalBody.bind(this);\n\n        this.state = {\n            factName: this.props.factName,\n            factValue: this.props.factValue,\n            factData: this.props.factData,\n            isCategory: this.props.isCategory\n        };\n\n        this.state.isAddFact = this.props.factName === '' && this.props.factValue === '';\n        this.state.isEditFact = this.props.factName !== '' && this.props.factValue !== '';\n\n        this.handleChange = checked => {\n            this.setState({ isCategory: checked });\n        };\n\n        this.handleNewName = value => {\n            this.setState({ factName: value });\n        };\n\n        this.handleNewValue = value => {\n            this.setState({ factValue: value });\n        };\n    }\n\n    cancelFact() {\n        const { toggleFactModal } = this.props;\n\n        toggleFactModal();\n    }\n\n    async confirmModal() {\n        const { toggleFactModal, baselineData, patchBaseline, fetchBaselineData } = this.props;\n        const { isAddFact } = this.state;\n        let newAPIBody = '';\n\n        try {\n            if (isAddFact) {\n                newAPIBody = this.addFact(baselineData);\n            } else {\n                newAPIBody = this.editFact(baselineData);\n            }\n\n            let results = await patchBaseline(baselineData.id, newAPIBody);\n            if (results) {\n                fetchBaselineData(baselineData.id);\n            }\n\n            toggleFactModal();\n        } catch (e) {\n            // do nothing and let redux handle\n        }\n    }\n\n    addFact(baselineData) {\n        const { isCategory, factName, factValue, factData } = this.state;\n\n        let newFactData = editBaselineHelpers.buildNewFactData(isCategory, factName, factValue, factData);\n\n        return editBaselineHelpers.makeAddFactPatch(newFactData, baselineData);\n    }\n\n    editFact(baselineData) {\n        const { isCategory, factName, factValue, factData } = this.state;\n\n        let editedFactData = editBaselineHelpers.buildEditedFactData(\n            isCategory, this.props.factName, factName, this.props.factValue, factValue, factData\n        );\n        return editBaselineHelpers.makeEditFactPatch(editedFactData, baselineData, factData);\n    }\n\n    renderCategoryCheckbox() {\n        const { isCategory, isEditFact } = this.state;\n\n        return <Checkbox\n            data-ouia-component-type='PF4/Checkbox'\n            data-ouia-component-id='category-checkbox'\n            className=\"sm-padding-bottom\"\n            aria-label=\"controlled checkbox example\"\n            label=\"This is a category\"\n            id=\"isCategory\"\n            name=\"isCategory\"\n            onChange={ this.handleChange }\n            isChecked={ isCategory }\n            isDisabled={ isCategory && isEditFact }\n        />;\n    }\n\n    checkKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            this.confirmModal();\n        }\n    }\n\n    renderFactInput() {\n        const { inlineError } = this.props;\n        const { factName, isCategory } = this.state;\n\n        return (\n            <div className=\"fact-value\">\n                <FormGroup\n                    label={ isCategory ? 'Category name' : 'Fact name' }\n                    isRequired\n                    helperTextInvalid={ Object.prototype.hasOwnProperty.call(inlineError, 'detail') ? inlineError.detail : null }\n                    validated={ Object.prototype.hasOwnProperty.call(inlineError, 'status') ? 'error' : null }\n                    fieldId='fact name'\n                    onKeyPress={ this.checkKeyPress }\n                >\n                    <TextInput\n                        data-ouia-component-type='PF4/TextInput'\n                        data-ouia-component-id='fact-name-input'\n                        value={ factName }\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        onChange={ this.handleNewName }\n                        validated={ Object.prototype.hasOwnProperty.call(inlineError, 'status') ? ValidatedOptions.error : null }\n                        aria-label=\"fact name\"\n                    />\n                </FormGroup>\n            </div>\n        );\n    }\n\n    renderValueInput() {\n        const { inlineError } = this.props;\n        const { factValue } = this.state;\n\n        return (\n            <div className=\"fact-value\">\n                <FormGroup\n                    label='Value'\n                    isRequired\n                    helperTextInvalid={ Object.prototype.hasOwnProperty.call(inlineError, 'detail') ? inlineError.detail : null }\n                    validated={ Object.prototype.hasOwnProperty.call(inlineError, 'status') ? 'error' : null }\n                    fieldId='fact value'\n                    onKeyPress={ this.checkKeyPress }\n                >\n                    <TextInput\n                        data-ouia-component-type='PF4/TextInput'\n                        data-ouia-component-id='value-input'\n                        value={ factValue }\n                        type=\"text\"\n                        placeholder=\"Value\"\n                        onChange={ this.handleNewValue }\n                        validated={ Object.prototype.hasOwnProperty.call(inlineError, 'status') ? ValidatedOptions.error : null }\n                        aria-label=\"value\"\n                    />\n                </FormGroup>\n            </div>\n        );\n    }\n\n    renderModalBody() {\n        const { inlineError, isSubFact } = this.props;\n        const { isAddFact, isCategory } = this.state;\n        let modalBody;\n\n        modalBody =\n            <React.Fragment>\n                { inlineError.status\n                    ? <Alert\n                        variant='danger'\n                        isInline\n                        title={ 'Status: ' + inlineError.status }\n                    >\n                        <p>\n                            { inlineError.detail }\n                        </p>\n                    </Alert>\n                    : <div></div>\n                }\n                { (isAddFact && !isSubFact) || isCategory ? this.renderCategoryCheckbox() : null }\n                <Form>\n                    { this.renderFactInput() }\n                    { isCategory ? null : this.renderValueInput() }\n                </Form>\n            </React.Fragment>;\n\n        return modalBody;\n    }\n\n    title() {\n        const { isSubFact } = this.props;\n        const { isAddFact, isEditFact, isCategory } = this.state;\n        let title = 'Add fact';\n\n        if (isEditFact === true && !isCategory && !isSubFact) {\n            title = 'Edit fact';\n        } else if (isAddFact === true && isCategory === true) {\n            title = 'Add category';\n        } else if (isAddFact === true && isSubFact === true) {\n            title = 'Add sub fact';\n        } else if (isEditFact === true && isSubFact === true) {\n            title = 'Edit sub fact';\n        } else if (isCategory === true) {\n            title = 'Edit category';\n        }\n\n        return title;\n    }\n\n    render() {\n        const { factModalOpened } = this.props;\n\n        return (\n            <Modal\n                className=\"drift\"\n                ouiaId='add-fact-modal'\n                variant={ ModalVariant.small }\n                title={ this.title() }\n                isOpen={ factModalOpened }\n                onClose={ this.cancelFact }\n                actions={ [\n                    <Button\n                        key=\"confirm\"\n                        variant=\"primary\"\n                        ouiaId=\"fact-modal-save-button\"\n                        onClick={ this.confirmModal }>\n                        Save\n                    </Button>,\n                    <Button\n                        key=\"cancel\"\n                        variant=\"link\"\n                        ouiaId=\"fact-modal-cancel-button\"\n                        onClick={ this.cancelFact }>\n                        Cancel\n                    </Button>\n                ] }\n            >\n                { this.renderModalBody() }\n            </Modal>\n        );\n    };\n}\n\nFactModal.propTypes = {\n    toggleFactModal: PropTypes.func,\n    factModalOpened: PropTypes.bool,\n    factName: PropTypes.string,\n    factValue: PropTypes.string,\n    factData: PropTypes.object,\n    isCategory: PropTypes.bool,\n    isSubFact: PropTypes.bool,\n    baselineData: PropTypes.object,\n    patchBaseline: PropTypes.func,\n    fetchBaselineData: PropTypes.func,\n    inlineError: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n    return {\n        factModalOpened: state.editBaselineState.factModalOpened,\n        factName: state.editBaselineState.factName,\n        factValue: state.editBaselineState.factValue,\n        factData: state.editBaselineState.factData,\n        isCategory: state.editBaselineState.isCategory,\n        isSubFact: state.editBaselineState.isSubFact,\n        baselineData: state.editBaselineState.baselineData,\n        inlineError: state.editBaselineState.inlineError\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleFactModal: () => dispatch(editBaselineActions.toggleFactModal()),\n        patchBaseline: (baselineId, newBaselineBody) => dispatch(editBaselineActions.patchBaseline(baselineId, newBaselineBody)),\n        fetchBaselineData: (baselineUUID) => dispatch(editBaselineActions.fetchBaselineData(baselineUUID))\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FactModal);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Form, FormGroup, Modal, ModalVariant, TextInput, ValidatedOptions, Alert } from '@patternfly/react-core';\n\nimport { editBaselineActions } from '../redux';\n\nexport class EditBaselineNameModal extends Component {\n    constructor(props) {\n        super(props);\n\n        /*eslint-disable camelcase*/\n        this.state = {\n            baselineName: this.props.baselineData.display_name\n        };\n        /*eslint-enable camelcase*/\n\n        this.updateBaselineName = (value) => {\n            this.setState({ baselineName: value });\n        };\n\n        this.confirmModal = this.confirmModal.bind(this);\n    }\n\n    async confirmModal() {\n        const { baselineName } = this.state;\n        const { baselineData, patchBaseline, toggleEditNameModal } = this.props;\n\n        try {\n            /*eslint-disable camelcase*/\n            await patchBaseline(baselineData.id, { display_name: baselineName, facts_patch: []});\n            /*eslint-enable camelcase*/\n\n            toggleEditNameModal();\n        } catch (e) {\n            // do nothing and let redux handle\n        }\n    }\n\n    cancelModal = () => {\n        const { toggleEditNameModal, baselineData } = this.props;\n\n        this.updateBaselineName(baselineData.display_name);\n        toggleEditNameModal();\n    }\n\n    checkKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            this.confirmModal();\n        }\n    }\n\n    renderModalBody() {\n        const { baselineName } = this.state;\n        const { error } = this.props;\n        const hasError = Object.prototype.hasOwnProperty.call(error, 'status')  ? ValidatedOptions.error : null;\n\n        return (<div className='fact-value'>\n            <Form>\n                <FormGroup\n                    label='Baseline title'\n                    isRequired\n                    fieldId='baseline name'\n                    helperTextInvalid={ Object.prototype.hasOwnProperty.call(error, 'detail') ? error.detail : null }\n                    validated={ hasError }\n                    onKeyPress={ this.checkKeyPress }\n                >\n                    <TextInput\n                        value={ baselineName }\n                        type=\"text\"\n                        onChange={ this.updateBaselineName }\n                        validated={ hasError }\n                        aria-label=\"baseline name\"\n                    />\n                </FormGroup>\n            </Form>\n        </div>);\n    }\n\n    render() {\n        const { modalOpened, error } = this.props;\n\n        return (\n            <Modal\n                className=\"drift\"\n                variant={ ModalVariant.small }\n                title=\"Edit name\"\n                isOpen={ modalOpened }\n                onClose={ this.cancelModal }\n                actions={ [\n                    <Button\n                        key=\"confirm\"\n                        variant=\"primary\"\n                        ouiaId=\"save\"\n                        onClick={ this.confirmModal }>\n                        Save\n                    </Button>,\n                    <Button\n                        key=\"cancel\"\n                        variant=\"link\"\n                        ouiaId=\"cancel\"\n                        onClick={ this.cancelModal }>\n                        Cancel\n                    </Button>\n                ] }\n            >\n                { error.status && <Alert\n                    variant='danger'\n                    isInline\n                    title={ 'Status: ' + error.status }\n                >\n                    <p>\n                        { error.detail }\n                    </p>\n                </Alert> }\n                { this.renderModalBody() }\n            </Modal>\n        );\n    };\n}\n\nEditBaselineNameModal.propTypes = {\n    baselineData: PropTypes.object,\n    toggleEditNameModal: PropTypes.func,\n    modalOpened: PropTypes.bool,\n    patchBaseline: PropTypes.func,\n    error: PropTypes.object\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        patchBaseline: (baselineId, newBaselineBody) => dispatch(editBaselineActions.patchBaseline(baselineId, newBaselineBody))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(EditBaselineNameModal);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, Checkbox, BreadcrumbHeading } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize, SkeletonTable } from '@redhat-cloud-services/frontend-components';\nimport { AngleDownIcon, AngleRightIcon, EditAltIcon, ExclamationCircleIcon, LockIcon, UndoIcon } from '@patternfly/react-icons';\nimport { cellWidth } from '@patternfly/react-table';\n\nimport EditBaselineToolbar from './EditBaselineToolbar/EditBaselineToolbar';\nimport ErrorAlert from '../../ErrorAlert/ErrorAlert';\nimport FactModal from './FactModal/FactModal';\nimport EditBaselineNameModal from './EditBaselineNameModal/EditBaselineNameModal';\nimport AddFactButton from './AddFactButton/AddFactButton';\nimport { baselinesTableActions } from '../../BaselinesTable/redux';\nimport { editBaselineActions } from './redux';\nimport editBaselineHelpers from './helpers';\nimport { FACT_ID, FACT_NAME, FACT_VALUE } from '../../../constants';\nimport EmptyStateDisplay from '../../EmptyStateDisplay/EmptyStateDisplay';\nimport { PermissionContext } from '../../../App';\n\nimport _ from 'lodash';\n\nexport class EditBaseline extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modalOpened: false,\n            errorMessage: [ 'The baseline cannot be displayed at this time. Please retry and if',\n                'the problem persists contact your system administrator.',\n                ''\n            ],\n            loadingColumns: [\n                { title: 'Fact', transforms: [ cellWidth(40) ]},\n                { title: 'Value', transforms: [ cellWidth(45) ]},\n                { title: '', transforms: [ cellWidth(5) ]}\n            ]\n        };\n\n        this.fetchBaselineId();\n        this.renderBreadcrumb = this.renderBreadcrumb.bind(this);\n        this.goToBaselinesList = this.goToBaselinesList.bind(this);\n\n        this.toggleEditNameModal = () => {\n            const { modalOpened } = this.state;\n            const { clearErrorData } = this.props;\n\n            this.setState({ modalOpened: !modalOpened });\n            clearErrorData();\n        };\n    }\n\n    async componentDidMount() {\n        const { match: { params }} = this.props;\n\n        await window.insights.chrome.auth.getUser();\n        await window.insights?.chrome?.appAction?.('baseline-view');\n        await window.insights?.chrome?.appObjectId(params.id);\n    }\n\n    componentDidUpdate() {\n        if (this.props.baselineData) {\n            document.title = this.props.baselineData.display_name + ' - Baselines - Drift | Red Hat Insights';\n        }\n    }\n\n    fetchBaselineId() {\n        const { match: { params }, fetchBaselineData } = this.props;\n\n        fetchBaselineData(params.id);\n    }\n\n    goToBaselinesList() {\n        const { clearBaselineData, fetchBaselines, history } = this.props;\n\n        clearBaselineData('CHECKBOX');\n        fetchBaselines('CHECKBOX');\n        history.push('/baselines');\n    }\n\n    retryBaselineFetch = () => {\n        const { clearErrorData } = this.props;\n\n        clearErrorData();\n        this.fetchBaselineId();\n    }\n\n    renderBreadcrumb(baselineData, hasReadPermissions) {\n        let breadcrumb;\n\n        /*eslint-disable camelcase*/\n        breadcrumb = <Breadcrumb ouiaId='edit-baseline-breadcrumb'>\n            <BreadcrumbItem>\n                <a onClick={ () => this.goToBaselinesList() }>\n                    Baselines\n                </a>\n            </BreadcrumbItem>\n            { baselineData && hasReadPermissions\n                ? <BreadcrumbHeading>\n                    { baselineData.display_name }\n                </BreadcrumbHeading>\n                : null\n            }\n        </Breadcrumb>;\n        /*eslint-enable camelcase*/\n\n        return breadcrumb;\n    }\n\n    renderPageTitle(baselineData, hasReadPermissions, hasWritePermissions) {\n        let pageTitle;\n\n        if (hasReadPermissions) {\n            if (hasWritePermissions) {\n                pageTitle = <React.Fragment>\n                    <span className='pf-c-title pf-m-2xl'>\n                        { !_.isEmpty(baselineData) ? baselineData.display_name : null }\n                    </span>\n                    <span>\n                        { <EditAltIcon\n                            className='pointer not-active edit-icon-margin'\n                            data-ouia-component-id='edit-baseline-name-button'\n                            data-ouia-component-type='PF4/Button'\n                            onClick={ () => this.toggleEditNameModal() } /> }\n                    </span>\n                </React.Fragment>;\n            } else {\n                pageTitle = <React.Fragment>{ !_.isEmpty(baselineData) ? baselineData.display_name : null }</React.Fragment>;\n            }\n        } else {\n            pageTitle = <React.Fragment>{ 'Baseline' }</React.Fragment>;\n        }\n\n        return pageTitle;\n    }\n\n    renderPageHeader = (hasReadPermissions, hasWritePermissions) => {\n        const { modalOpened } = this.state;\n        const { baselineData, baselineDataLoading, inlineError } = this.props;\n        let pageHeader;\n\n        if (baselineDataLoading) {\n            pageHeader = <PageHeader>\n                <div><Skeleton size={ SkeletonSize.lg } /></div>\n            </PageHeader>;\n        } else {\n            if (baselineData !== undefined) {\n                pageHeader = <React.Fragment>\n                    <EditBaselineNameModal\n                        baselineData={ baselineData }\n                        modalOpened={ modalOpened }\n                        toggleEditNameModal={ this.toggleEditNameModal }\n                        error={ inlineError }\n                    />\n                    <PageHeader>\n                        { this.renderBreadcrumb(baselineData, hasReadPermissions) }\n                        <div id=\"edit-baseline-title\">\n                            { this.renderPageTitle(baselineData, hasReadPermissions, hasWritePermissions) }\n                        </div>\n                    </PageHeader>\n                </React.Fragment>;\n            } else {\n                pageHeader = <PageHeader>\n                    { this.renderBreadcrumb() }\n                    <PageHeaderTitle title='Baseline' />\n                </PageHeader>;\n            }\n        }\n\n        return pageHeader;\n    }\n\n    renderHeaderRow(hasWritePermissions) {\n        return (\n            <tr\n                key='edit-baseline-table-header'\n                data-ouia-component-type='PF4/TableHeaderRow'\n                data-ouia-component-id='edit-baseline-table-header-row'>\n                { hasWritePermissions ? <th></th> : null }\n                <th className=\"edit-baseline-header\"><div>Fact</div></th>\n                <th className=\"edit-baseline-header\"><div>Value</div></th>\n                <th></th>\n            </tr>\n        );\n    }\n\n    renderLoadingRows() {\n        const { loadingColumns } = this.state;\n\n        return <SkeletonTable\n            columns={ loadingColumns }\n            rowSize={ 8 }\n            onSelect={ true }\n            canSelectAll={ false }\n            isSelectable={ true }\n        />;\n    }\n\n    renderExpandableRowButton(factName) {\n        const { expandedRows } = this.props;\n        let expandIcon;\n\n        if (expandedRows.includes(factName)) {\n            expandIcon = <AngleDownIcon\n                className=\"pointer active-blue\"\n                data-ouia-component-type='PF4/Button'\n                data-ouia-component-id={ 'expand-category-button-' + factName }\n                onClick={ () => this.props.expandRow(factName) } />;\n        } else {\n            expandIcon = <AngleRightIcon\n                className=\"pointer\"\n                data-ouia-component-type='PF4/Button'\n                data-ouia-component-id={ 'expand-category-button-' + factName }\n                onClick={ () => this.props.expandRow(factName) } />;\n        }\n\n        return expandIcon;\n    }\n\n    onSelect = (isSelected, event) => {\n        const { editBaselineTableData, selectFact } = this.props;\n        let facts = [];\n        let factData;\n        let id = Number(event.target.name);\n\n        editBaselineTableData.forEach(function(fact) {\n            if (fact[FACT_ID] === id) {\n                factData = fact;\n            } else if (editBaselineHelpers.isCategory(fact)) {\n                editBaselineHelpers.baselineSubFacts(fact).forEach(function(subFact) {\n                    if (subFact[FACT_ID] === id) {\n                        factData = subFact;\n                    }\n                });\n            }\n        });\n\n        facts = [ factData[0] ];\n\n        if (editBaselineHelpers.isCategory(factData)) {\n            editBaselineHelpers.baselineSubFacts(factData).forEach(function(subFact) {\n                facts.push(subFact[FACT_ID]);\n            });\n        }\n\n        selectFact(facts, isSelected);\n    }\n\n    onBulkSelect = (isSelected) => {\n        const { editBaselineTableData, selectFact } = this.props;\n        let facts = [];\n\n        editBaselineTableData.forEach(function(fact) {\n            facts.push(fact[FACT_ID]);\n            if (editBaselineHelpers.isCategory(fact)) {\n                editBaselineHelpers.baselineSubFacts(fact).forEach(function(subFact) {\n                    facts.push(subFact[FACT_ID]);\n                });\n            }\n        });\n\n        selectFact(facts, isSelected);\n    }\n\n    renderCheckbox = (fact) => {\n        let id;\n\n        if (editBaselineHelpers.isCategory(fact)) {\n            id = 'category-' + fact[FACT_ID];\n        } else if (typeof(fact[FACT_VALUE]) === 'string') {\n            id = 'fact-' + fact[FACT_ID];\n        }\n\n        return (\n            <Checkbox\n                data-ouia-component-type='PF4/Checkbox'\n                data-ouia-component-id={ 'checkbox-' + fact[FACT_NAME] }\n                isChecked={ fact.selected }\n                onChange={ this.onSelect }\n                id={ id }\n                name={ fact[FACT_ID] }\n            />\n        );\n    }\n\n    renderRowData(fact, hasWritePermissions) {\n        const { expandedRows, baselineData } = this.props;\n        let row = [];\n        let rows = [];\n\n        let factData = baselineData.baseline_facts.find((baselineFact) => {\n            return baselineFact.name === fact[FACT_NAME];\n        });\n\n        hasWritePermissions\n            ? row.push(<td\n                className={ expandedRows.includes(fact[FACT_NAME]) ? 'pf-c-table__check nested-fact' : 'pf-c-table__check' }>\n                { this.renderCheckbox(fact) }\n            </td>)\n            : null;\n\n        if (editBaselineHelpers.isCategory(fact)) {\n            row.push(<td>\n                { this.renderExpandableRowButton(fact[FACT_NAME]) } { fact[FACT_NAME] }</td>);\n            row.push(<td></td>);\n            row.push(editBaselineHelpers.renderKebab({ factName: fact[FACT_NAME], factData, isCategory: true, hasWritePermissions }));\n            rows.push(<tr\n                data-ouia-component-type='PF4/TableRow'\n                data-ouia-component-id={ 'edit-baseline-table-row-' + factData.name }\n                key={ fact[FACT_NAME] }>{ row }</tr>);\n\n            if (expandedRows.includes(fact[FACT_NAME])) {\n                editBaselineHelpers.baselineSubFacts(fact).forEach((subFact) => {\n                    row = [];\n                    hasWritePermissions\n                        ? row.push(<td className='pf-c-table__check nested-fact'>{ this.renderCheckbox(subFact) }</td>)\n                        : null;\n                    row.push(<td>\n                        <p className=\"child-row\">{ subFact[FACT_NAME] }</p>\n                    </td>);\n                    row.push(<td>{ subFact[FACT_VALUE] }</td>);\n                    row.push(editBaselineHelpers.renderKebab({\n                        factName: subFact[FACT_NAME],\n                        factValue: subFact[FACT_VALUE],\n                        factData,\n                        isSubFact: true,\n                        hasWritePermissions\n                    }));\n                    rows.push(<tr\n                        data-ouia-component-type='PF4/TableRow'\n                        data-ouia-component-id={ 'edit-baseline-table-row-' + subFact[FACT_NAME] }\n                        category={ factData.name }\n                        key={ subFact[FACT_NAME] }>{ row }</tr>);\n                });\n            }\n        } else {\n            row.push(<td>{ fact[FACT_NAME] }</td>);\n            row.push(<td>{ fact[FACT_VALUE] }</td>);\n            row.push(editBaselineHelpers.renderKebab({ factName: fact[FACT_NAME], factValue: fact[FACT_VALUE], factData, hasWritePermissions }));\n            rows.push(<tr\n                data-ouia-component-type='PF4/TableRow'\n                data-ouia-component-id={ 'edit-baseline-table-row-' + factData.name }\n                key={ fact[FACT_NAME] }>{ row }</tr>);\n        }\n\n        return rows;\n    }\n\n    renderRows(hasWritePermissions) {\n        const { editBaselineTableData } = this.props;\n        let facts = editBaselineTableData;\n        let rows = [];\n        let rowData = [];\n\n        if (facts.length !== 0) {\n            for (let i = 0; i < facts.length; i += 1) {\n                rowData = this.renderRowData(facts[i], hasWritePermissions);\n                rows.push(rowData);\n            }\n        }\n\n        return rows;\n    }\n\n    renderEmptyState(hasWritePermissions) {\n        const { editBaselineEmptyState, editBaselineError } = this.props;\n        const { errorMessage } = this.state;\n\n        if (editBaselineError.status !== 200 && editBaselineError.status !== undefined) {\n            return <EmptyStateDisplay\n                icon={ ExclamationCircleIcon }\n                color='#c9190b'\n                title={ 'Baseline cannot be displayed' }\n                text={ errorMessage }\n                error={ 'Error ' + editBaselineError.status + ': ' + editBaselineError.detail }\n                button={ <a onClick={ () => this.retryBaselineFetch() }>\n                    <UndoIcon className='reload-button' />\n                        Retry\n                </a> }\n            />;\n        } else {\n            return <EmptyStateDisplay\n                title={ 'No facts' }\n                text={ [ 'No facts or categories have been added to this baseline yet.' ] }\n                button={ <AddFactButton\n                    hasWritePermissions={ hasWritePermissions }\n                    editBaselineEmptyState={ editBaselineEmptyState }\n                /> }\n            />;\n        }\n    }\n\n    renderTable(hasWritePermissions) {\n        return (\n            <table className=\"pf-c-table ins-c-table pf-m-grid-md ins-entity-table\">\n                <thead>\n                    { this.renderHeaderRow(hasWritePermissions) }\n                </thead>\n                <tbody key='edit-baseline-table'>\n                    { this.renderRows(hasWritePermissions) }\n                </tbody>\n            </table>\n        );\n    }\n\n    render() {\n        const { baselineData, baselineDataLoading, editBaselineTableData, exportToCSV, factModalOpened,\n            editBaselineEmptyState, editBaselineError, clearErrorData } = this.props;\n        let selected = editBaselineHelpers.findSelected(editBaselineTableData);\n\n        return (\n            <PermissionContext.Consumer>\n                { value =>\n                    <React.Fragment>\n                        { this.renderPageHeader(value.permissions.baselinesRead, value.permissions.baselinesWrite) }\n                        <Main>\n                            { value.permissions.baselinesRead === false\n                                ? <EmptyStateDisplay\n                                    icon={ LockIcon }\n                                    color='#6a6e73'\n                                    title={ 'You do not have access to view this Baseline' }\n                                    text={ [ 'Contact your organization administrator(s) for more information.' ] }\n                                />\n                                : <React.Fragment>\n                                    { factModalOpened\n                                        ? <FactModal />\n                                        : <div></div>\n                                    }\n                                    <ErrorAlert\n                                        error={ !editBaselineEmptyState && editBaselineError.status ? editBaselineError : {} }\n                                        onClose={ clearErrorData }\n                                    />\n                                    { editBaselineEmptyState\n                                        ? this.renderEmptyState(value.permissions.baselinesWrite)\n                                        : <Card className='pf-t-light pf-m-opaque-100'>\n                                            <CardBody>\n                                                <EditBaselineToolbar\n                                                    selected={ selected }\n                                                    onBulkSelect={ this.onBulkSelect }\n                                                    isDisabled={ editBaselineTableData.length === 0 || !value.permissions.baselinesWrite }\n                                                    totalFacts={ editBaselineHelpers.findFactCount(editBaselineTableData) }\n                                                    baselineData={ baselineData }\n                                                    exportToCSV={ exportToCSV }\n                                                    tableData={ editBaselineTableData }\n                                                    hasWritePermissions={ value.permissions.baselinesWrite }\n                                                />\n                                                { baselineDataLoading\n                                                    ? this.renderLoadingRows()\n                                                    : this.renderTable(value.permissions.baselinesWrite)\n                                                }\n                                            </CardBody>\n                                        </Card>\n                                    }\n                                </React.Fragment>\n                            }\n                        </Main>\n                    </React.Fragment>\n                }\n            </PermissionContext.Consumer>\n        );\n    }\n}\n\nEditBaseline.propTypes = {\n    history: PropTypes.object,\n    match: PropTypes.any,\n    clearBaselineData: PropTypes.func,\n    baselineData: PropTypes.object,\n    baselineDataLoading: PropTypes.bool,\n    fetchBaselineData: PropTypes.func,\n    factModalOpened: PropTypes.bool,\n    editBaselineTableData: PropTypes.array,\n    expandRow: PropTypes.func,\n    expandedRows: PropTypes.array,\n    selectFact: PropTypes.func,\n    clearErrorData: PropTypes.func,\n    editBaselineError: PropTypes.object,\n    inlineError: PropTypes.object,\n    editBaselineEmptyState: PropTypes.bool,\n    exportToCSV: PropTypes.func,\n    hasWritePermissions: PropTypes.bool,\n    fetchBaselines: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n    return {\n        baselineData: state.editBaselineState.baselineData,\n        baselineDataLoading: state.editBaselineState.baselineDataLoading,\n        factModalOpened: state.editBaselineState.factModalOpened,\n        editBaselineTableData: state.editBaselineState.editBaselineTableData,\n        expandedRows: state.editBaselineState.expandedRows,\n        editBaselineError: state.editBaselineState.editBaselineError,\n        editBaselineEmptyState: state.editBaselineState.editBaselineEmptyState,\n        inlineError: state.editBaselineState.inlineError\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        clearBaselineData: (tableId) => dispatch(baselinesTableActions.clearBaselineData(tableId)),\n        expandRow: (factName) => dispatch(editBaselineActions.expandRow(factName)),\n        fetchBaselineData: (baselineUUID) => dispatch(editBaselineActions.fetchBaselineData(baselineUUID)),\n        selectFact: (facts, isSelected) => dispatch(editBaselineActions.selectFact(facts, isSelected)),\n        clearErrorData: () => dispatch(editBaselineActions.clearErrorData()),\n        exportToCSV: (exportData, baselineRowData)=> {\n            dispatch(editBaselineActions.exportToCSV(exportData, baselineRowData));\n        },\n        fetchBaselines: (tableId, params) => dispatch(baselinesTableActions.fetchBaselines(tableId, params))\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditBaseline));\n"],"sourceRoot":""}