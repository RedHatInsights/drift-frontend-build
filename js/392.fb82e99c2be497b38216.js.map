{"version":3,"sources":["webpack://drift-frontend/./src/SmartComponents/ErrorAlert/ErrorAlert.js","webpack://drift-frontend/./src/SmartComponents/ExportCSVButton/ExportCSVButton.js"],"names":["ErrorAlert","props","closeToast","tableId","onClose","this","addNotification","error","status","variant","title","description","detail","dismissable","Component","propTypes","PropTypes","connect","dispatch","payload","ExportCSVButton","dropdownItems","isOpen","onToggle","Dropdown","toggle","DropdownToggle","toggleIndicator","ExportIcon","className","isPlain","position","DropdownPosition","ouiaId"],"mappings":"sSAKO,IAAMA,EAAb,yB,IAAA,G,EAAA,E,gZACI,WAAYC,GAAO,0BACf,cAAMA,IAGVC,WAAa,SAACC,GAAY,IACdC,EAAY,EAAKH,MAAjBG,QAEJD,EACAC,EAAQD,GAERC,KAVW,EADvB,6CAea,MACuCC,KAAKJ,MAAzCK,EADH,EACGA,gBAAiBC,EADpB,EACoBA,MAAOJ,EAD3B,EAC2BA,QAEhC,OACI,kBAAC,aAAD,KACMI,EAAMC,OACFF,EAAgB,CACdG,QAAS,SACTC,MAAO,QACPC,YAAaJ,EAAMK,OACnBC,aAAa,IAEf,KAEJN,EAAMC,OAASH,KAAKH,WAAWC,GAAW,UA7B5D,GAAgCW,aAmChCd,EAAWe,UAAY,CACnBR,MAAOS,WACPb,QAASa,WACTZ,QAASY,SACTV,gBAAiBU,UASrB,SAAeC,aAAQ,MANvB,SAA4BC,GACxB,MAAO,CACHZ,gBAAiB,SAACa,GAAD,OAAaD,GAASZ,qBAAgBa,QAI/D,CAAiDnB,I,oNC/C3CoB,E,obACF,WAAYnB,GAAO,+BACTA,G,6CAGD,MACuCI,KAAKJ,MAAzCoB,EADH,EACGA,cAAeC,EADlB,EACkBA,OAAQC,EAD1B,EAC0BA,SAE/B,OACI,kBAAC,EAAAC,SAAD,CACIC,OAAS,kBAAC,EAAAC,eAAD,CACLC,gBAAkB,KAClBJ,SAAWA,GACX,kBAAC,EAAAK,WAAD,CAAYC,UAAU,wBAE1BP,OAASA,EACTQ,SAAO,EACPC,SAAWC,wBACXX,cAAgBA,EAChBY,OAAO,e,GAnBOnB,aAyB9BM,EAAgBL,UAAY,CACxBM,cAAeL,UACfM,OAAQN,SACRO,SAAUP,UAGd","file":"js/392.fb82e99c2be497b38216.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\n\nexport class ErrorAlert extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    closeToast = (tableId) => {\n        const { onClose } = this.props;\n\n        if (tableId) {\n            onClose(tableId);\n        } else {\n            onClose();\n        }\n    }\n\n    render() {\n        const { addNotification, error, tableId } = this.props;\n\n        return (\n            <React.Fragment>\n                { error.status\n                    ? addNotification({\n                        variant: 'danger',\n                        title: 'Error',\n                        description: error.detail,\n                        dismissable: true\n                    })\n                    : null\n                }\n                { error.status ? this.closeToast(tableId) : null }\n            </React.Fragment>\n        );\n    }\n}\n\nErrorAlert.propTypes = {\n    error: PropTypes.object,\n    tableId: PropTypes.string,\n    onClose: PropTypes.func,\n    addNotification: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addNotification: (payload) => dispatch(addNotification(payload))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(ErrorAlert);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Dropdown, DropdownToggle, DropdownPosition } from '@patternfly/react-core';\nimport { ExportIcon } from '@patternfly/react-icons';\n\nclass ExportCSVButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { dropdownItems, isOpen, onToggle } = this.props;\n\n        return (\n            <Dropdown\n                toggle={ <DropdownToggle\n                    toggleIndicator={ null }\n                    onToggle={ onToggle }>\n                    <ExportIcon className='pointer not-active'/>\n                </DropdownToggle> }\n                isOpen={ isOpen }\n                isPlain\n                position={ DropdownPosition.left }\n                dropdownItems={ dropdownItems }\n                ouiaId=\"export\"\n            />\n        );\n    }\n}\n\nExportCSVButton.propTypes = {\n    dropdownItems: PropTypes.array,\n    isOpen: PropTypes.bool,\n    onToggle: PropTypes.func\n};\n\nexport default ExportCSVButton;\n"],"sourceRoot":""}