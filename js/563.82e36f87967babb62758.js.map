{"version":3,"sources":["webpack://drift-frontend/./node_modules/decode-uri-component/index.js","webpack://drift-frontend/./node_modules/query-string/index.js","webpack://drift-frontend/./node_modules/split-on-first/index.js","webpack://drift-frontend/./node_modules/strict-uri-encode/index.js"],"names":["token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","length","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","module","exports","encodedURI","TypeError","replace","replaceMap","exec","result","entries","Object","keys","key","customDecodeURIComponent","strictUriEncode","decodeComponent","splitOnFirst","validateArrayFormatSeparator","value","encode","options","strict","encodeURIComponent","keysSorter","isArray","sort","a","b","Number","map","removeHash","hashStart","indexOf","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","parse","query","assign","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","includes","isEncodedArray","newValue","item","parserForArrayFormat","ret","create","param","k","reduce","Boolean","stringify","object","shouldFilter","skipNull","skipEmptyString","index","encoderForArrayFormat","objectCopy","filter","x","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","string","separator","separatorIndex","str","charCodeAt","toString","toUpperCase"],"mappings":"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","file":"js/563.82e36f87967babb62758.js","sourcesContent":["'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n"],"sourceRoot":""}